# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSum
# Parameters: (probabilityOfNaN = 0, size = 1024)

# Run progress: 0.00% complete, ETA 00:13:30
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4673.798 ops/ms
# Warmup Iteration   2: 4708.628 ops/ms
# Warmup Iteration   3: 4736.811 ops/ms
# Warmup Iteration   4: 4745.566 ops/ms
# Warmup Iteration   5: 4673.117 ops/ms
Iteration   1: 4750.573 ops/ms
Iteration   2: 4756.267 ops/ms
Iteration   3: 4784.296 ops/ms
Iteration   4: 4710.398 ops/ms
Iteration   5: 4763.961 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 1.23% complete, ETA 00:17:16
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4693.589 ops/ms
# Warmup Iteration   2: 4753.963 ops/ms
# Warmup Iteration   3: 4823.715 ops/ms
# Warmup Iteration   4: 4803.708 ops/ms
# Warmup Iteration   5: 4755.656 ops/ms
Iteration   1: 4799.522 ops/ms
Iteration   2: 4660.232 ops/ms
Iteration   3: 4788.103 ops/ms
Iteration   4: 4785.675 ops/ms
Iteration   5: 4809.537 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 2.47% complete, ETA 00:16:29
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4650.951 ops/ms
# Warmup Iteration   2: 4674.730 ops/ms
# Warmup Iteration   3: 4750.619 ops/ms
# Warmup Iteration   4: 4733.282 ops/ms
# Warmup Iteration   5: 4711.077 ops/ms
Iteration   1: 4755.243 ops/ms
Iteration   2: 4727.848 ops/ms
Iteration   3: 4716.837 ops/ms
Iteration   4: 4753.752 ops/ms
Iteration   5: 4745.122 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSum":
  4753.824 ±(99.9%) 41.597 ops/ms [Average]
  (min, avg, max) = (4660.232, 4753.824, 4809.537), stdev = 38.910
  CI (99.9%): [4712.228, 4795.421] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSum:·asm":
PrintAssembly processed: 51170 total address lines.
Perf output processed (skipped 6.692 seconds):
 Column 1: cycles (5074 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (471 bytes) 

                                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@48 (line 149)
                            0x00007f567c52000c: vzeroupper 
                            0x00007f567c52000f: add    $0x30,%rsp
                            0x00007f567c520013: pop    %rbp
                            0x00007f567c520014: mov    0x108(%r15),%r10
                            0x00007f567c52001b: test   %eax,(%r10)                    ;   {poll_return}
                            0x00007f567c52001e: retq   
                            0x00007f567c52001f: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                                      ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
                                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.16%  ↗             ↗    0x00007f567c520020: vmovdqu 0x10(%r9,%r10,4),%ymm0
  0.20%  │             │    0x00007f567c520027: vaddps 0x10(%r8,%r10,4),%ymm0,%ymm0
  1.87%  │             │    0x00007f567c52002e: vmovdqu %ymm0,0x10(%r11,%r10,4)       ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.35%  │             │    0x00007f567c520035: add    $0x8,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │             │    0x00007f567c520039: cmp    %ebx,%r10d
         ╰             │    0x00007f567c52003c: jl     0x00007f567c520020             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                       │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
                       │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    ↗  │↗   0x00007f567c52003e: cmp    %edi,%r10d
          ╭         │  ││   0x00007f567c520041: jge    0x00007f567c520061
          │         │  ││   0x00007f567c520043: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.75%   │↗        │  ││   0x00007f567c520044: vmovss 0x10(%r9,%r10,4),%xmm1
  0.02%   ││        │  ││   0x00007f567c52004b: vaddss 0x10(%r8,%r10,4),%xmm1,%xmm0
  0.39%   ││        │  ││   0x00007f567c520052: vmovss %xmm0,0x10(%r11,%r10,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.45%   ││        │  ││   0x00007f567c520059: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
          ││        │  ││   0x00007f567c52005c: cmp    %edi,%r10d
          │╰        │  ││   0x00007f567c52005f: jl     0x00007f567c520044             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.18%   ↘         │  ││   0x00007f567c520061: mov    %rdx,0x40(%rsp)                ;*invokevirtual verticalSum {reexecute=0 rethrow=0 return_oop=0}
                    │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  ││↗  0x00007f567c520066: mov    %rcx,%rdx
                    │  │││  0x00007f567c520069: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007f567c52006d: mov    (%rsp),%rsi
  0.14%             │  │││  0x00007f567c520071: data16 xchg %ax,%ax
                    │  │││  0x00007f567c520074: vzeroupper 
  0.16%             │  │││  0x00007f567c520077: callq  0x00007f567c4a1900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                    │  │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@22 (line 145)
                    │  │││                                                            ;   {optimized virtual_call}
                    │  │││  0x00007f567c52007c: mov    0x40(%rsp),%rdx
  0.02%             │  │││  0x00007f567c520081: movzbl 0x94(%rdx),%r10d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.12%             │  │││  0x00007f567c520089: mov    0x108(%r15),%r11
                    │  │││  0x00007f567c520090: add    $0x1,%rbp                      ; ImmutableOopMap{rdx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                    │  │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@35 (line 147)
                    │  │││  0x00007f567c520094: test   %eax,(%r11)                    ;   {poll}
                    │  │││  0x00007f567c520097: test   %r10d,%r10d
                    │  │││  0x00007f567c52009a: jne    0x00007f567c51ffe7             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@38 (line 148)
  0.20%             │  │││  0x00007f567c5200a0: mov    0x50(%rsp),%r10
                    │  │││  0x00007f567c5200a5: mov    0x20(%r10),%ecx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.02%             │  │││  0x00007f567c5200a9: mov    0xc(%r10),%edi                 ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@4 (line 107)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007f567c5200ad: test   %edi,%edi
            ╭       │  │││  0x00007f567c5200af: jle    0x00007f567c52020d             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.08%     │       │  │││  0x00007f567c5200b5: mov    0x18(%r10),%r9d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@16 (line 108)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │       │  │││  0x00007f567c5200b9: mov    0xc(%r12,%r9,8),%r11d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@20 (line 108)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │       │  │││                                                            ; implicit exception: dispatches to 0x00007f567c520217
  0.02%     │       │  │││  0x00007f567c5200be: test   %r11d,%r11d
            │╭      │  │││  0x00007f567c5200c1: jbe    0x00007f567c520217
            ││      │  │││  0x00007f567c5200c7: movslq %r11d,%r10
  0.08%     ││      │  │││  0x00007f567c5200ca: movslq %edi,%r11
            ││      │  │││  0x00007f567c5200cd: dec    %r11
            ││      │  │││  0x00007f567c5200d0: cmp    %r10,%r11
            ││╭     │  │││  0x00007f567c5200d3: jae    0x00007f567c520217
            │││     │  │││  0x00007f567c5200d9: mov    0x50(%rsp),%r10
  0.14%     │││     │  │││  0x00007f567c5200de: mov    0x1c(%r10),%ebx                ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@22 (line 108)
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││     │  │││  0x00007f567c5200e2: mov    0xc(%r12,%rbx,8),%r8d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@26 (line 108)
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││     │  │││                                                            ; implicit exception: dispatches to 0x00007f567c520217
  0.04%     │││     │  │││  0x00007f567c5200e7: test   %r8d,%r8d
            │││╭    │  │││  0x00007f567c5200ea: jbe    0x00007f567c520217
            ││││    │  │││  0x00007f567c5200f0: movslq %r8d,%r10
  0.16%     ││││    │  │││  0x00007f567c5200f3: cmp    %r10,%r11
            ││││╭   │  │││  0x00007f567c5200f6: jae    0x00007f567c520217
            │││││   │  │││  0x00007f567c5200fc: mov    0xc(%r12,%rcx,8),%r10d         ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││   │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││   │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││   │  │││                                                            ; implicit exception: dispatches to 0x00007f567c520217
  0.02%     │││││   │  │││  0x00007f567c520101: test   %r10d,%r10d
            │││││╭  │  │││  0x00007f567c520104: jbe    0x00007f567c520217
            ││││││  │  │││  0x00007f567c52010a: movslq %r10d,%r10
  0.12%     ││││││  │  │││  0x00007f567c52010d: cmp    %r10,%r11
            ││││││╭ │  │││  0x00007f567c520110: jae    0x00007f567c520217
            │││││││ │  │││  0x00007f567c520116: lea    (%r12,%rcx,8),%r11
  0.02%     │││││││ │  │││  0x00007f567c52011a: lea    (%r12,%r9,8),%r8
            │││││││ │  │││  0x00007f567c52011e: mov    %r11d,%r10d
  0.12%     │││││││ │  │││  0x00007f567c520121: lea    (%r12,%rbx,8),%r9
  0.02%     │││││││ │  │││  0x00007f567c520125: shr    $0x2,%r10d
            │││││││ │  │││  0x00007f567c520129: and    $0x7,%r10d
            │││││││ │  │││  0x00007f567c52012d: mov    $0x3,%ebx
  0.24%     │││││││ │  │││  0x00007f567c520132: sub    %r10d,%ebx
            │││││││ │  │││  0x00007f567c520135: and    $0x7,%ebx
  0.02%     │││││││ │  │││  0x00007f567c520138: inc    %ebx
            │││││││ │  │││  0x00007f567c52013a: cmp    %edi,%ebx
  0.24%     │││││││ │  │││  0x00007f567c52013c: cmovg  %edi,%ebx
            │││││││ │  │││  0x00007f567c52013f: xor    %r10d,%r10d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.10%     │││││││↗│  │││  0x00007f567c520142: vmovss 0x10(%r9,%r10,4),%xmm0
            │││││││││  │││  0x00007f567c520149: vaddss 0x10(%r8,%r10,4),%xmm0,%xmm1
  0.16%     │││││││││  │││  0x00007f567c520150: vmovss %xmm1,0x10(%r11,%r10,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.10%     │││││││││  │││  0x00007f567c520157: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││││  │││  0x00007f567c52015a: cmp    %ebx,%r10d
            │││││││╰│  │││  0x00007f567c52015d: jl     0x00007f567c520142             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││ │  │││  0x00007f567c52015f: mov    %edi,%ebx
            │││││││ │  │││  0x00007f567c520161: add    $0xffffffe1,%ebx
  0.10%     │││││││ │  │││  0x00007f567c520164: cmp    %ebx,%edi
            │││││││ │  │││  0x00007f567c520166: mov    $0x80000000,%esi
            │││││││ │  │││  0x00007f567c52016b: cmovl  %esi,%ebx
            │││││││ │  │││  0x00007f567c52016e: cmp    %ebx,%r10d
            │││││││ ╰  │││  0x00007f567c520171: jge    0x00007f567c52003e
  0.08%     │││││││    │││  0x00007f567c520177: nopw   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
            │││││││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
            │││││││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.10%     │││││││  ↗↗│││  0x00007f567c520180: vmovdqu 0x10(%r9,%r10,4),%ymm0
 11.67%     │││││││  │││││  0x00007f567c520187: vaddps 0x10(%r8,%r10,4),%ymm0,%ymm0
 13.40%     │││││││  │││││  0x00007f567c52018e: vmovdqu %ymm0,0x10(%r11,%r10,4)
  1.87%     │││││││  │││││  0x00007f567c520195: movslq %r10d,%rsi
            │││││││  │││││  0x00007f567c520198: vmovdqu 0x30(%r9,%rsi,4),%ymm0
  3.88%     │││││││  │││││  0x00007f567c52019f: vaddps 0x30(%r8,%rsi,4),%ymm0,%ymm0
  7.73%     │││││││  │││││  0x00007f567c5201a6: vmovdqu %ymm0,0x30(%r11,%rsi,4)
  4.26%     │││││││  │││││  0x00007f567c5201ad: vmovdqu 0x50(%r9,%rsi,4),%ymm0
 11.04%     │││││││  │││││  0x00007f567c5201b4: vaddps 0x50(%r8,%rsi,4),%ymm0,%ymm0
 10.74%     │││││││  │││││  0x00007f567c5201bb: vmovdqu %ymm0,0x50(%r11,%rsi,4)
  4.26%     │││││││  │││││  0x00007f567c5201c2: vmovdqu 0x70(%r9,%rsi,4),%ymm0
  4.12%     │││││││  │││││  0x00007f567c5201c9: vaddps 0x70(%r8,%rsi,4),%ymm0,%ymm0
 10.94%     │││││││  │││││  0x00007f567c5201d0: vmovdqu %ymm0,0x70(%r11,%rsi,4)       ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  4.87%     │││││││  │││││  0x00007f567c5201d7: add    $0x20,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.20%     │││││││  │││││  0x00007f567c5201db: cmp    %ebx,%r10d
            │││││││  ╰││││  0x00007f567c5201de: jl     0x00007f567c520180             ;*goto {reexecute=0 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││   ││││  0x00007f567c5201e0: mov    0x108(%r15),%r13               ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop rcx=NarrowOop rdx=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││││││   ││││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.18%     │││││││   ││││  0x00007f567c5201e7: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││   ││││                                                            ;   {poll}
  0.02%     │││││││   ││││  0x00007f567c5201eb: cmp    %ebx,%r10d
            │││││││   ╰│││  0x00007f567c5201ee: jl     0x00007f567c520180
            │││││││    │││  0x00007f567c5201f0: mov    %edi,%ebx
            │││││││    │││  0x00007f567c5201f2: add    $0xfffffff9,%ebx
  0.16%     │││││││    │││  0x00007f567c5201f5: cmp    %ebx,%edi
  0.02%     │││││││    │││  0x00007f567c5201f7: mov    $0x80000000,%esi
            │││││││    │││  0x00007f567c5201fc: cmovl  %esi,%ebx
            │││││││    │││  0x00007f567c5201ff: cmp    %ebx,%r10d
            │││││││    ╰││  0x00007f567c520202: jl     0x00007f567c520020
            │││││││     ╰│  0x00007f567c520208: jmpq   0x00007f567c52003e
            ↘││││││      │  0x00007f567c52020d: mov    %rdx,0x40(%rsp)
             ││││││      ╰  0x00007f567c520212: jmpq   0x00007f567c520066
             ↘↘↘↘↘↘         0x00007f567c520217: mov    $0xffffff7e,%esi
                            0x00007f567c52021c: mov    %rdx,0x40(%rsp)
                            0x00007f567c520221: mov    %edi,0x18(%rsp)
                            0x00007f567c520225: data16 xchg %ax,%ax
....................................................................................................
 96.29%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.29%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (471 bytes) 
  2.29%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.71%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (68 bytes) 
  0.10%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (1 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.20%  <...other 10 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.29%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 
  2.86%   [kernel.kallsyms]  [unknown] 
  0.71%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  JVM_IHashCode 
  0.02%           libjvm.so  strlen@plt 
  0.02%           libjvm.so  _ZN17DependencyContext23mark_dependent_nmethodsER9DepChange 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.00%                  c2
  2.86%   [kernel.kallsyms]
  0.06%           libjvm.so
  0.06%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51161 total address lines.
Perf output processed (skipped 6.657 seconds):
 Column 1: cycles (4999 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (469 bytes) 

                                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@48 (line 149)
                            0x00007fa17c73ff0c: vzeroupper 
                            0x00007fa17c73ff0f: add    $0x30,%rsp
                            0x00007fa17c73ff13: pop    %rbp
                            0x00007fa17c73ff14: mov    0x108(%r15),%r10
                            0x00007fa17c73ff1b: test   %eax,(%r10)                    ;   {poll_return}
                            0x00007fa17c73ff1e: retq   
                            0x00007fa17c73ff1f: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                                      ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
                                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.22%  ↗             ↗    0x00007fa17c73ff20: vmovdqu 0x10(%r9,%r10,4),%ymm0
  0.10%  │             │    0x00007fa17c73ff27: vaddps 0x10(%r8,%r10,4),%ymm0,%ymm0
  1.78%  │             │    0x00007fa17c73ff2e: vmovdqu %ymm0,0x10(%r11,%r10,4)       ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.40%  │             │    0x00007fa17c73ff35: add    $0x8,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │             │    0x00007fa17c73ff39: cmp    %ebx,%r10d
         ╰             │    0x00007fa17c73ff3c: jl     0x00007fa17c73ff20             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                       │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
                       │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    ↗  │↗   0x00007fa17c73ff3e: cmp    %edi,%r10d
          ╭         │  ││   0x00007fa17c73ff41: jge    0x00007fa17c73ff61
          │         │  ││   0x00007fa17c73ff43: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.46%   │↗        │  ││   0x00007fa17c73ff44: vmovss 0x10(%r9,%r10,4),%xmm1
          ││        │  ││   0x00007fa17c73ff4b: vaddss 0x10(%r8,%r10,4),%xmm1,%xmm0
  0.46%   ││        │  ││   0x00007fa17c73ff52: vmovss %xmm0,0x10(%r11,%r10,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.46%   ││        │  ││   0x00007fa17c73ff59: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
          ││        │  ││   0x00007fa17c73ff5c: cmp    %edi,%r10d
          │╰        │  ││   0x00007fa17c73ff5f: jl     0x00007fa17c73ff44             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.20%   ↘         │  ││   0x00007fa17c73ff61: mov    %rdx,0x40(%rsp)                ;*invokevirtual verticalSum {reexecute=0 rethrow=0 return_oop=0}
                    │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  ││↗  0x00007fa17c73ff66: mov    %rcx,%rdx
                    │  │││  0x00007fa17c73ff69: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007fa17c73ff6d: mov    (%rsp),%rsi
  0.30%             │  │││  0x00007fa17c73ff71: data16 xchg %ax,%ax
                    │  │││  0x00007fa17c73ff74: vzeroupper 
  0.18%             │  │││  0x00007fa17c73ff77: callq  0x00007fa17c6bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                    │  │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@22 (line 145)
                    │  │││                                                            ;   {optimized virtual_call}
                    │  │││  0x00007fa17c73ff7c: mov    0x40(%rsp),%rdx
  0.04%             │  │││  0x00007fa17c73ff81: movzbl 0x94(%rdx),%r10d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.12%             │  │││  0x00007fa17c73ff89: mov    0x108(%r15),%r11
                    │  │││  0x00007fa17c73ff90: add    $0x1,%rbp                      ; ImmutableOopMap{rdx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                    │  │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@35 (line 147)
  0.02%             │  │││  0x00007fa17c73ff94: test   %eax,(%r11)                    ;   {poll}
                    │  │││  0x00007fa17c73ff97: test   %r10d,%r10d
                    │  │││  0x00007fa17c73ff9a: jne    0x00007fa17c73fee7             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@38 (line 148)
  0.18%             │  │││  0x00007fa17c73ffa0: mov    0x50(%rsp),%r10
                    │  │││  0x00007fa17c73ffa5: mov    0x20(%r10),%ecx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007fa17c73ffa9: mov    0xc(%r10),%edi                 ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@4 (line 107)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007fa17c73ffad: test   %edi,%edi
            ╭       │  │││  0x00007fa17c73ffaf: jle    0x00007fa17c74010d             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.16%     │       │  │││  0x00007fa17c73ffb5: mov    0x18(%r10),%r9d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@16 (line 108)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.02%     │       │  │││  0x00007fa17c73ffb9: mov    0xc(%r12,%r9,8),%r11d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@20 (line 108)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │       │  │││                                                            ; implicit exception: dispatches to 0x00007fa17c740117
  0.02%     │       │  │││  0x00007fa17c73ffbe: test   %r11d,%r11d
            │╭      │  │││  0x00007fa17c73ffc1: jbe    0x00007fa17c740117
            ││      │  │││  0x00007fa17c73ffc7: movslq %r11d,%r10
  0.22%     ││      │  │││  0x00007fa17c73ffca: movslq %edi,%r11
            ││      │  │││  0x00007fa17c73ffcd: dec    %r11
  0.04%     ││      │  │││  0x00007fa17c73ffd0: cmp    %r10,%r11
            ││╭     │  │││  0x00007fa17c73ffd3: jae    0x00007fa17c740117
            │││     │  │││  0x00007fa17c73ffd9: mov    0x50(%rsp),%r10
  0.18%     │││     │  │││  0x00007fa17c73ffde: mov    0x1c(%r10),%ebx                ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@22 (line 108)
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.02%     │││     │  │││  0x00007fa17c73ffe2: mov    0xc(%r12,%rbx,8),%r8d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@26 (line 108)
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││     │  │││                                                            ; implicit exception: dispatches to 0x00007fa17c740117
            │││     │  │││  0x00007fa17c73ffe7: test   %r8d,%r8d
            │││╭    │  │││  0x00007fa17c73ffea: jbe    0x00007fa17c740117
            ││││    │  │││  0x00007fa17c73fff0: movslq %r8d,%r10
  0.08%     ││││    │  │││  0x00007fa17c73fff3: cmp    %r10,%r11
            ││││╭   │  │││  0x00007fa17c73fff6: jae    0x00007fa17c740117
            │││││   │  │││  0x00007fa17c73fffc: mov    0xc(%r12,%rcx,8),%r10d         ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││   │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││   │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││   │  │││                                                            ; implicit exception: dispatches to 0x00007fa17c740117
            │││││   │  │││  0x00007fa17c740001: test   %r10d,%r10d
            │││││╭  │  │││  0x00007fa17c740004: jbe    0x00007fa17c740117
  0.02%     ││││││  │  │││  0x00007fa17c74000a: movslq %r10d,%r10
  0.28%     ││││││  │  │││  0x00007fa17c74000d: cmp    %r10,%r11
            ││││││╭ │  │││  0x00007fa17c740010: jae    0x00007fa17c740117
            │││││││ │  │││  0x00007fa17c740016: lea    (%r12,%rcx,8),%r11
            │││││││ │  │││  0x00007fa17c74001a: lea    (%r12,%r9,8),%r8
            │││││││ │  │││  0x00007fa17c74001e: mov    %r11d,%r10d
  0.16%     │││││││ │  │││  0x00007fa17c740021: lea    (%r12,%rbx,8),%r9
            │││││││ │  │││  0x00007fa17c740025: shr    $0x2,%r10d
  0.02%     │││││││ │  │││  0x00007fa17c740029: and    $0x7,%r10d
            │││││││ │  │││  0x00007fa17c74002d: mov    $0x3,%ebx
  0.12%     │││││││ │  │││  0x00007fa17c740032: sub    %r10d,%ebx
  0.04%     │││││││ │  │││  0x00007fa17c740035: and    $0x7,%ebx
  0.04%     │││││││ │  │││  0x00007fa17c740038: inc    %ebx
            │││││││ │  │││  0x00007fa17c74003a: cmp    %edi,%ebx
  0.06%     │││││││ │  │││  0x00007fa17c74003c: cmovg  %edi,%ebx
            │││││││ │  │││  0x00007fa17c74003f: xor    %r10d,%r10d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.16%     │││││││↗│  │││  0x00007fa17c740042: vmovss 0x10(%r9,%r10,4),%xmm0
            │││││││││  │││  0x00007fa17c740049: vaddss 0x10(%r8,%r10,4),%xmm0,%xmm1
  0.14%     │││││││││  │││  0x00007fa17c740050: vmovss %xmm1,0x10(%r11,%r10,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.22%     │││││││││  │││  0x00007fa17c740057: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││││  │││  0x00007fa17c74005a: cmp    %ebx,%r10d
            │││││││╰│  │││  0x00007fa17c74005d: jl     0x00007fa17c740042             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││ │  │││  0x00007fa17c74005f: mov    %edi,%ebx
            │││││││ │  │││  0x00007fa17c740061: add    $0xffffffe1,%ebx
  0.14%     │││││││ │  │││  0x00007fa17c740064: cmp    %ebx,%edi
            │││││││ │  │││  0x00007fa17c740066: mov    $0x80000000,%esi
            │││││││ │  │││  0x00007fa17c74006b: cmovl  %esi,%ebx
            │││││││ │  │││  0x00007fa17c74006e: cmp    %ebx,%r10d
            │││││││ ╰  │││  0x00007fa17c740071: jge    0x00007fa17c73ff3e
  0.12%     │││││││    │││  0x00007fa17c740077: nopw   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
            │││││││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
            │││││││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.10%     │││││││  ↗↗│││  0x00007fa17c740080: vmovdqu 0x10(%r9,%r10,4),%ymm0
 11.94%     │││││││  │││││  0x00007fa17c740087: vaddps 0x10(%r8,%r10,4),%ymm0,%ymm0
 12.86%     │││││││  │││││  0x00007fa17c74008e: vmovdqu %ymm0,0x10(%r11,%r10,4)
  2.08%     │││││││  │││││  0x00007fa17c740095: movslq %r10d,%rsi
  0.04%     │││││││  │││││  0x00007fa17c740098: vmovdqu 0x30(%r9,%rsi,4),%ymm0
  4.54%     │││││││  │││││  0x00007fa17c74009f: vaddps 0x30(%r8,%rsi,4),%ymm0,%ymm0
  6.80%     │││││││  │││││  0x00007fa17c7400a6: vmovdqu %ymm0,0x30(%r11,%rsi,4)
  4.56%     │││││││  │││││  0x00007fa17c7400ad: vmovdqu 0x50(%r9,%rsi,4),%ymm0
 10.92%     │││││││  │││││  0x00007fa17c7400b4: vaddps 0x50(%r8,%rsi,4),%ymm0,%ymm0
 10.72%     │││││││  │││││  0x00007fa17c7400bb: vmovdqu %ymm0,0x50(%r11,%rsi,4)
  4.80%     │││││││  │││││  0x00007fa17c7400c2: vmovdqu 0x70(%r9,%rsi,4),%ymm0
  4.48%     │││││││  │││││  0x00007fa17c7400c9: vaddps 0x70(%r8,%rsi,4),%ymm0,%ymm0
 10.92%     │││││││  │││││  0x00007fa17c7400d0: vmovdqu %ymm0,0x70(%r11,%rsi,4)       ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  4.36%     │││││││  │││││  0x00007fa17c7400d7: add    $0x20,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.20%     │││││││  │││││  0x00007fa17c7400db: cmp    %ebx,%r10d
            │││││││  ╰││││  0x00007fa17c7400de: jl     0x00007fa17c740080             ;*goto {reexecute=0 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││   ││││  0x00007fa17c7400e0: mov    0x108(%r15),%r13               ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop rcx=NarrowOop rdx=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││││││   ││││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.10%     │││││││   ││││  0x00007fa17c7400e7: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││   ││││                                                            ;   {poll}
  0.02%     │││││││   ││││  0x00007fa17c7400eb: cmp    %ebx,%r10d
            │││││││   ╰│││  0x00007fa17c7400ee: jl     0x00007fa17c740080
            │││││││    │││  0x00007fa17c7400f0: mov    %edi,%ebx
            │││││││    │││  0x00007fa17c7400f2: add    $0xfffffff9,%ebx
  0.12%     │││││││    │││  0x00007fa17c7400f5: cmp    %ebx,%edi
            │││││││    │││  0x00007fa17c7400f7: mov    $0x80000000,%esi
            │││││││    │││  0x00007fa17c7400fc: cmovl  %esi,%ebx
            │││││││    │││  0x00007fa17c7400ff: cmp    %ebx,%r10d
            │││││││    ╰││  0x00007fa17c740102: jl     0x00007fa17c73ff20
            │││││││     ╰│  0x00007fa17c740108: jmpq   0x00007fa17c73ff3e
            ↘││││││      │  0x00007fa17c74010d: mov    %rdx,0x40(%rsp)
             ││││││      ╰  0x00007fa17c740112: jmpq   0x00007fa17c73ff66
             ↘↘↘↘↘↘         0x00007fa17c740117: mov    $0xffffff7e,%esi
                            0x00007fa17c74011c: mov    %rdx,0x40(%rsp)
                            0x00007fa17c740121: mov    %edi,0x18(%rsp)
....................................................................................................
 96.76%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.76%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (469 bytes) 
  1.44%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.86%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (68 bytes) 
  0.14%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (27 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (54 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (20 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.24%  <...other 12 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.76%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 
  2.12%   [kernel.kallsyms]  [unknown] 
  0.86%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
  0.02%        libc-2.23.so  _IO_default_xsputn 
  0.02%           libjvm.so  _ZNK15G1CollectionSet7iterateEP17HeapRegionClosure 
  0.02%           libjvm.so  _ZN12LinkResolver30runtime_resolve_virtual_methodER8CallInfoRK12methodHandleP5Klass6HandleS6_bP6Thread 
  0.02%           libjvm.so  _ZN12ConstantPool21impl_signature_ref_atEib 
  0.02%         interpreter  iload_1  27 iload_1  
  0.02%           libjvm.so  _ZN2os13PlatformEvent4parkEl 
  0.02%           libjvm.so  _ZN10OopStorage8allocateEv 
  0.02%         interpreter  return  177 return  
  0.02%           libjvm.so  _ZN12PeriodicTask14real_time_tickEi 
  0.02%           libjvm.so  _ZN28G1YoungRemSetSamplingClosure14do_heap_regionEP10HeapRegion 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZNK6AbsSeq3dsdEv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.62%                  c2
  2.12%   [kernel.kallsyms]
  0.16%           libjvm.so
  0.06%         interpreter
  0.02%        libc-2.23.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51198 total address lines.
Perf output processed (skipped 6.654 seconds):
 Column 1: cycles (4978 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (469 bytes) 

                                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@48 (line 149)
                            0x00007fed2873e08c: vzeroupper 
                            0x00007fed2873e08f: add    $0x30,%rsp
                            0x00007fed2873e093: pop    %rbp
                            0x00007fed2873e094: mov    0x108(%r15),%r10
                            0x00007fed2873e09b: test   %eax,(%r10)                    ;   {poll_return}
                            0x00007fed2873e09e: retq   
                            0x00007fed2873e09f: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                                      ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
                                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.22%  ↗             ↗    0x00007fed2873e0a0: vmovdqu 0x10(%r9,%r10,4),%ymm0
  0.22%  │             │    0x00007fed2873e0a7: vaddps 0x10(%r8,%r10,4),%ymm0,%ymm0
  1.73%  │             │    0x00007fed2873e0ae: vmovdqu %ymm0,0x10(%r11,%r10,4)       ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.38%  │             │    0x00007fed2873e0b5: add    $0x8,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │             │    0x00007fed2873e0b9: cmp    %ebx,%r10d
         ╰             │    0x00007fed2873e0bc: jl     0x00007fed2873e0a0             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                       │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
                       │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    ↗  │↗   0x00007fed2873e0be: cmp    %edi,%r10d
          ╭         │  ││   0x00007fed2873e0c1: jge    0x00007fed2873e0e1
          │         │  ││   0x00007fed2873e0c3: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.54%   │↗        │  ││   0x00007fed2873e0c4: vmovss 0x10(%r9,%r10,4),%xmm1
          ││        │  ││   0x00007fed2873e0cb: vaddss 0x10(%r8,%r10,4),%xmm1,%xmm0
  0.50%   ││        │  ││   0x00007fed2873e0d2: vmovss %xmm0,0x10(%r11,%r10,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.68%   ││        │  ││   0x00007fed2873e0d9: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
          ││        │  ││   0x00007fed2873e0dc: cmp    %edi,%r10d
          │╰        │  ││   0x00007fed2873e0df: jl     0x00007fed2873e0c4             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.12%   ↘         │  ││   0x00007fed2873e0e1: mov    %rdx,0x40(%rsp)                ;*invokevirtual verticalSum {reexecute=0 rethrow=0 return_oop=0}
                    │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  ││↗  0x00007fed2873e0e6: mov    %rcx,%rdx
  0.04%             │  │││  0x00007fed2873e0e9: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007fed2873e0ed: mov    (%rsp),%rsi
  0.16%             │  │││  0x00007fed2873e0f1: data16 xchg %ax,%ax
                    │  │││  0x00007fed2873e0f4: vzeroupper 
  0.22%             │  │││  0x00007fed2873e0f7: callq  0x00007fed286bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                    │  │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@22 (line 145)
                    │  │││                                                            ;   {optimized virtual_call}
  0.02%             │  │││  0x00007fed2873e0fc: mov    0x40(%rsp),%rdx
                    │  │││  0x00007fed2873e101: movzbl 0x94(%rdx),%r10d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.14%             │  │││  0x00007fed2873e109: mov    0x108(%r15),%r11
                    │  │││  0x00007fed2873e110: add    $0x1,%rbp                      ; ImmutableOopMap{rdx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                    │  │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@35 (line 147)
  0.06%             │  │││  0x00007fed2873e114: test   %eax,(%r11)                    ;   {poll}
                    │  │││  0x00007fed2873e117: test   %r10d,%r10d
                    │  │││  0x00007fed2873e11a: jne    0x00007fed2873e067             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@38 (line 148)
  0.14%             │  │││  0x00007fed2873e120: mov    0x50(%rsp),%r10
                    │  │││  0x00007fed2873e125: mov    0x20(%r10),%ecx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007fed2873e129: mov    0xc(%r10),%edi                 ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@4 (line 107)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007fed2873e12d: test   %edi,%edi
            ╭       │  │││  0x00007fed2873e12f: jle    0x00007fed2873e28d             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.14%     │       │  │││  0x00007fed2873e135: mov    0x18(%r10),%r9d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@16 (line 108)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │       │  │││  0x00007fed2873e139: mov    0xc(%r12,%r9,8),%r11d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@20 (line 108)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │       │  │││                                                            ; implicit exception: dispatches to 0x00007fed2873e297
            │       │  │││  0x00007fed2873e13e: test   %r11d,%r11d
            │╭      │  │││  0x00007fed2873e141: jbe    0x00007fed2873e297
            ││      │  │││  0x00007fed2873e147: movslq %r11d,%r10
  0.14%     ││      │  │││  0x00007fed2873e14a: movslq %edi,%r11
            ││      │  │││  0x00007fed2873e14d: dec    %r11
            ││      │  │││  0x00007fed2873e150: cmp    %r10,%r11
            ││╭     │  │││  0x00007fed2873e153: jae    0x00007fed2873e297
            │││     │  │││  0x00007fed2873e159: mov    0x50(%rsp),%r10
  0.20%     │││     │  │││  0x00007fed2873e15e: mov    0x1c(%r10),%ebx                ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@22 (line 108)
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││     │  │││  0x00007fed2873e162: mov    0xc(%r12,%rbx,8),%r8d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@26 (line 108)
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││     │  │││                                                            ; implicit exception: dispatches to 0x00007fed2873e297
  0.04%     │││     │  │││  0x00007fed2873e167: test   %r8d,%r8d
            │││╭    │  │││  0x00007fed2873e16a: jbe    0x00007fed2873e297
            ││││    │  │││  0x00007fed2873e170: movslq %r8d,%r10
  0.08%     ││││    │  │││  0x00007fed2873e173: cmp    %r10,%r11
            ││││╭   │  │││  0x00007fed2873e176: jae    0x00007fed2873e297
            │││││   │  │││  0x00007fed2873e17c: mov    0xc(%r12,%rcx,8),%r10d         ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││   │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││   │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││   │  │││                                                            ; implicit exception: dispatches to 0x00007fed2873e297
  0.02%     │││││   │  │││  0x00007fed2873e181: test   %r10d,%r10d
            │││││╭  │  │││  0x00007fed2873e184: jbe    0x00007fed2873e297
            ││││││  │  │││  0x00007fed2873e18a: movslq %r10d,%r10
  0.24%     ││││││  │  │││  0x00007fed2873e18d: cmp    %r10,%r11
            ││││││╭ │  │││  0x00007fed2873e190: jae    0x00007fed2873e297
            │││││││ │  │││  0x00007fed2873e196: lea    (%r12,%rcx,8),%r11
            │││││││ │  │││  0x00007fed2873e19a: lea    (%r12,%r9,8),%r8
            │││││││ │  │││  0x00007fed2873e19e: mov    %r11d,%r10d
  0.16%     │││││││ │  │││  0x00007fed2873e1a1: lea    (%r12,%rbx,8),%r9
            │││││││ │  │││  0x00007fed2873e1a5: shr    $0x2,%r10d
            │││││││ │  │││  0x00007fed2873e1a9: and    $0x7,%r10d
            │││││││ │  │││  0x00007fed2873e1ad: mov    $0x3,%ebx
  0.30%     │││││││ │  │││  0x00007fed2873e1b2: sub    %r10d,%ebx
  0.02%     │││││││ │  │││  0x00007fed2873e1b5: and    $0x7,%ebx
            │││││││ │  │││  0x00007fed2873e1b8: inc    %ebx
            │││││││ │  │││  0x00007fed2873e1ba: cmp    %edi,%ebx
  0.12%     │││││││ │  │││  0x00007fed2873e1bc: cmovg  %edi,%ebx
            │││││││ │  │││  0x00007fed2873e1bf: xor    %r10d,%r10d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.34%     │││││││↗│  │││  0x00007fed2873e1c2: vmovss 0x10(%r9,%r10,4),%xmm0
            │││││││││  │││  0x00007fed2873e1c9: vaddss 0x10(%r8,%r10,4),%xmm0,%xmm1
  0.12%     │││││││││  │││  0x00007fed2873e1d0: vmovss %xmm1,0x10(%r11,%r10,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.22%     │││││││││  │││  0x00007fed2873e1d7: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.02%     │││││││││  │││  0x00007fed2873e1da: cmp    %ebx,%r10d
            │││││││╰│  │││  0x00007fed2873e1dd: jl     0x00007fed2873e1c2             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││ │  │││  0x00007fed2873e1df: mov    %edi,%ebx
            │││││││ │  │││  0x00007fed2873e1e1: add    $0xffffffe1,%ebx
  0.26%     │││││││ │  │││  0x00007fed2873e1e4: cmp    %ebx,%edi
            │││││││ │  │││  0x00007fed2873e1e6: mov    $0x80000000,%esi
  0.08%     │││││││ │  │││  0x00007fed2873e1eb: cmovl  %esi,%ebx
            │││││││ │  │││  0x00007fed2873e1ee: cmp    %ebx,%r10d
            │││││││ ╰  │││  0x00007fed2873e1f1: jge    0x00007fed2873e0be
  0.12%     │││││││    │││  0x00007fed2873e1f7: nopw   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
            │││││││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
            │││││││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.10%     │││││││  ↗↗│││  0x00007fed2873e200: vmovdqu 0x10(%r9,%r10,4),%ymm0
 12.03%     │││││││  │││││  0x00007fed2873e207: vaddps 0x10(%r8,%r10,4),%ymm0,%ymm0
 13.30%     │││││││  │││││  0x00007fed2873e20e: vmovdqu %ymm0,0x10(%r11,%r10,4)
  1.87%     │││││││  │││││  0x00007fed2873e215: movslq %r10d,%rsi
            │││││││  │││││  0x00007fed2873e218: vmovdqu 0x30(%r9,%rsi,4),%ymm0
  3.86%     │││││││  │││││  0x00007fed2873e21f: vaddps 0x30(%r8,%rsi,4),%ymm0,%ymm0
  8.04%     │││││││  │││││  0x00007fed2873e226: vmovdqu %ymm0,0x30(%r11,%rsi,4)
  4.04%     │││││││  │││││  0x00007fed2873e22d: vmovdqu 0x50(%r9,%rsi,4),%ymm0
 12.01%     │││││││  │││││  0x00007fed2873e234: vaddps 0x50(%r8,%rsi,4),%ymm0,%ymm0
 10.99%     │││││││  │││││  0x00007fed2873e23b: vmovdqu %ymm0,0x50(%r11,%rsi,4)
  4.90%     │││││││  │││││  0x00007fed2873e242: vmovdqu 0x70(%r9,%rsi,4),%ymm0
  4.12%     │││││││  │││││  0x00007fed2873e249: vaddps 0x70(%r8,%rsi,4),%ymm0,%ymm0
 10.10%     │││││││  │││││  0x00007fed2873e250: vmovdqu %ymm0,0x70(%r11,%rsi,4)       ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  4.16%     │││││││  │││││  0x00007fed2873e257: add    $0x20,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.16%     │││││││  │││││  0x00007fed2873e25b: cmp    %ebx,%r10d
            │││││││  ╰││││  0x00007fed2873e25e: jl     0x00007fed2873e200             ;*goto {reexecute=0 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││   ││││  0x00007fed2873e260: mov    0x108(%r15),%r13               ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop rcx=NarrowOop rdx=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││││││   ││││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.14%     │││││││   ││││  0x00007fed2873e267: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││   ││││                                                            ;   {poll}
  0.02%     │││││││   ││││  0x00007fed2873e26b: cmp    %ebx,%r10d
            │││││││   ╰│││  0x00007fed2873e26e: jl     0x00007fed2873e200
  0.02%     │││││││    │││  0x00007fed2873e270: mov    %edi,%ebx
            │││││││    │││  0x00007fed2873e272: add    $0xfffffff9,%ebx
  0.14%     │││││││    │││  0x00007fed2873e275: cmp    %ebx,%edi
            │││││││    │││  0x00007fed2873e277: mov    $0x80000000,%esi
            │││││││    │││  0x00007fed2873e27c: cmovl  %esi,%ebx
            │││││││    │││  0x00007fed2873e27f: cmp    %ebx,%r10d
            │││││││    ╰││  0x00007fed2873e282: jl     0x00007fed2873e0a0
            │││││││     ╰│  0x00007fed2873e288: jmpq   0x00007fed2873e0be
            ↘││││││      │  0x00007fed2873e28d: mov    %rdx,0x40(%rsp)
             ││││││      ╰  0x00007fed2873e292: jmpq   0x00007fed2873e0e6
             ↘↘↘↘↘↘         0x00007fed2873e297: mov    $0xffffff7e,%esi
                            0x00007fed2873e29c: mov    %rdx,0x40(%rsp)
                            0x00007fed2873e2a1: mov    %edi,0x18(%rsp)
....................................................................................................
 97.81%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.81%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (469 bytes) 
  1.17%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.70%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (75 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  isub  100 isub  (0 bytes) 
  0.02%           libjvm.so  _ZN12G1BarrierSet16on_thread_detachEP10JavaThread (0 bytes) 
  0.02%           libjvm.so  _ZNK13InstanceKlass25can_be_primary_super_slowEv (0 bytes) 
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.81%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 
  1.41%   [kernel.kallsyms]  [unknown] 
  0.70%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
  0.02%         interpreter  isub  100 isub  
  0.02%           libjvm.so  _ZN12G1BarrierSet16on_thread_detachEP10JavaThread 
  0.02%           libjvm.so  _ZNK13InstanceKlass25can_be_primary_super_slowEv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 98.51%                  c2
  1.41%   [kernel.kallsyms]
  0.04%           libjvm.so
  0.02%         interpreter
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSum
# Parameters: (probabilityOfNaN = 0.001, size = 1024)

# Run progress: 3.70% complete, ETA 00:16:06
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4642.961 ops/ms
# Warmup Iteration   2: 4692.389 ops/ms
# Warmup Iteration   3: 4735.326 ops/ms
# Warmup Iteration   4: 4659.773 ops/ms
# Warmup Iteration   5: 4779.978 ops/ms
Iteration   1: 4780.396 ops/ms
Iteration   2: 4686.453 ops/ms
Iteration   3: 4696.786 ops/ms
Iteration   4: 4699.169 ops/ms
Iteration   5: 4709.749 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 4.94% complete, ETA 00:15:50
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4594.281 ops/ms
# Warmup Iteration   2: 4649.738 ops/ms
# Warmup Iteration   3: 4719.301 ops/ms
# Warmup Iteration   4: 4713.499 ops/ms
# Warmup Iteration   5: 4717.209 ops/ms
Iteration   1: 4738.576 ops/ms
Iteration   2: 4721.119 ops/ms
Iteration   3: 4728.680 ops/ms
Iteration   4: 4658.180 ops/ms
Iteration   5: 4684.768 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 6.17% complete, ETA 00:15:35
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4635.057 ops/ms
# Warmup Iteration   2: 4600.412 ops/ms
# Warmup Iteration   3: 4690.834 ops/ms
# Warmup Iteration   4: 4646.187 ops/ms
# Warmup Iteration   5: 4684.363 ops/ms
Iteration   1: 4682.182 ops/ms
Iteration   2: 4681.549 ops/ms
Iteration   3: 4672.567 ops/ms
Iteration   4: 4710.724 ops/ms
Iteration   5: 4651.378 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSum":
  4700.152 ±(99.9%) 35.434 ops/ms [Average]
  (min, avg, max) = (4651.378, 4700.152, 4780.396), stdev = 33.145
  CI (99.9%): [4664.718, 4735.585] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSum:·asm":
PrintAssembly processed: 51159 total address lines.
Perf output processed (skipped 6.627 seconds):
 Column 1: cycles (5067 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (401 bytes) 

                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                      0x00007f316f8ad3d9: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                      0x00007f316f8ad3dc: cmp    %edi,%r10d
                      0x00007f316f8ad3df: jl     0x00007f316f8ad3c4             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                      0x00007f316f8ad3e1: mov    %rdx,0x40(%rsp)                ;*invokevirtual verticalSum {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.12%            ↗  0x00007f316f8ad3e6: mov    %rcx,%rdx
                   │  0x00007f316f8ad3e9: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.10%            │  0x00007f316f8ad3ed: mov    (%rsp),%rsi
                   │  0x00007f316f8ad3f1: data16 xchg %ax,%ax
  0.04%            │  0x00007f316f8ad3f4: vzeroupper 
  0.24%            │  0x00007f316f8ad3f7: callq  0x00007f316f82d900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                   │                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@22 (line 145)
                   │                                                            ;   {optimized virtual_call}
  0.06%            │  0x00007f316f8ad3fc: mov    0x40(%rsp),%rdx
  0.18%            │  0x00007f316f8ad401: movzbl 0x94(%rdx),%r10d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                   │  0x00007f316f8ad409: mov    0x108(%r15),%r11
  0.12%            │  0x00007f316f8ad410: add    $0x1,%rbp                      ; ImmutableOopMap{rdx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                   │                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@35 (line 147)
                   │  0x00007f316f8ad414: test   %eax,(%r11)                    ;   {poll}
  0.04%            │  0x00007f316f8ad417: test   %r10d,%r10d
                   │  0x00007f316f8ad41a: jne    0x00007f316f8ad367             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@38 (line 148)
                   │  0x00007f316f8ad420: mov    0x50(%rsp),%r10
  0.06%            │  0x00007f316f8ad425: mov    0x20(%r10),%ecx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                   │  0x00007f316f8ad429: mov    0xc(%r10),%edi                 ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@4 (line 107)
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.16%            │  0x00007f316f8ad42d: test   %edi,%edi
         ╭         │  0x00007f316f8ad42f: jle    0x00007f316f8ad58d             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │         │  0x00007f316f8ad435: mov    0x18(%r10),%r9d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@16 (line 108)
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.06%  │         │  0x00007f316f8ad439: mov    0xc(%r12,%r9,8),%r11d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@20 (line 108)
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │         │                                                            ; implicit exception: dispatches to 0x00007f316f8ad597
         │         │  0x00007f316f8ad43e: test   %r11d,%r11d
         │╭        │  0x00007f316f8ad441: jbe    0x00007f316f8ad597
  0.12%  ││        │  0x00007f316f8ad447: movslq %r11d,%r10
         ││        │  0x00007f316f8ad44a: movslq %edi,%r11
         ││        │  0x00007f316f8ad44d: dec    %r11
         ││        │  0x00007f316f8ad450: cmp    %r10,%r11
         ││╭       │  0x00007f316f8ad453: jae    0x00007f316f8ad597
  0.18%  │││       │  0x00007f316f8ad459: mov    0x50(%rsp),%r10
         │││       │  0x00007f316f8ad45e: mov    0x1c(%r10),%ebx                ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
         │││       │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@22 (line 108)
         │││       │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.02%  │││       │  0x00007f316f8ad462: mov    0xc(%r12,%rbx,8),%r8d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │││       │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@26 (line 108)
         │││       │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││       │                                                            ; implicit exception: dispatches to 0x00007f316f8ad597
  0.16%  │││       │  0x00007f316f8ad467: test   %r8d,%r8d
         │││╭      │  0x00007f316f8ad46a: jbe    0x00007f316f8ad597
  0.08%  ││││      │  0x00007f316f8ad470: movslq %r8d,%r10
         ││││      │  0x00007f316f8ad473: cmp    %r10,%r11
         ││││╭     │  0x00007f316f8ad476: jae    0x00007f316f8ad597
  0.28%  │││││     │  0x00007f316f8ad47c: mov    0xc(%r12,%rcx,8),%r10d         ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         │││││     │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
         │││││     │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││││     │                                                            ; implicit exception: dispatches to 0x00007f316f8ad597
         │││││     │  0x00007f316f8ad481: test   %r10d,%r10d
         │││││╭    │  0x00007f316f8ad484: jbe    0x00007f316f8ad597
         ││││││    │  0x00007f316f8ad48a: movslq %r10d,%r10
         ││││││    │  0x00007f316f8ad48d: cmp    %r10,%r11
         ││││││╭   │  0x00007f316f8ad490: jae    0x00007f316f8ad597
  0.06%  │││││││   │  0x00007f316f8ad496: lea    (%r12,%rcx,8),%r11
         │││││││   │  0x00007f316f8ad49a: lea    (%r12,%r9,8),%r8
         │││││││   │  0x00007f316f8ad49e: mov    %r11d,%r10d
         │││││││   │  0x00007f316f8ad4a1: lea    (%r12,%rbx,8),%r9
  0.12%  │││││││   │  0x00007f316f8ad4a5: shr    $0x2,%r10d
         │││││││   │  0x00007f316f8ad4a9: and    $0x7,%r10d
         │││││││   │  0x00007f316f8ad4ad: mov    $0x3,%ebx
         │││││││   │  0x00007f316f8ad4b2: sub    %r10d,%ebx
  0.16%  │││││││   │  0x00007f316f8ad4b5: and    $0x7,%ebx
         │││││││   │  0x00007f316f8ad4b8: inc    %ebx
         │││││││   │  0x00007f316f8ad4ba: cmp    %edi,%ebx
         │││││││   │  0x00007f316f8ad4bc: cmovg  %edi,%ebx
  0.16%  │││││││   │  0x00007f316f8ad4bf: xor    %r10d,%r10d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.02%  │││││││↗  │  0x00007f316f8ad4c2: vmovss 0x10(%r9,%r10,4),%xmm0
  0.67%  ││││││││  │  0x00007f316f8ad4c9: vaddss 0x10(%r8,%r10,4),%xmm0,%xmm1
  0.69%  ││││││││  │  0x00007f316f8ad4d0: vmovss %xmm1,0x10(%r11,%r10,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││││││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
         ││││││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.04%  ││││││││  │  0x00007f316f8ad4d7: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││││││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
         ││││││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.59%  ││││││││  │  0x00007f316f8ad4da: cmp    %ebx,%r10d
         │││││││╰  │  0x00007f316f8ad4dd: jl     0x00007f316f8ad4c2             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.02%  │││││││   │  0x00007f316f8ad4df: mov    %edi,%ebx
         │││││││   │  0x00007f316f8ad4e1: add    $0xffffffe1,%ebx
         │││││││   │  0x00007f316f8ad4e4: cmp    %ebx,%edi
  0.14%  │││││││   │  0x00007f316f8ad4e6: mov    $0x80000000,%esi
         │││││││   │  0x00007f316f8ad4eb: cmovl  %esi,%ebx
         │││││││   │  0x00007f316f8ad4ee: cmp    %ebx,%r10d
         │││││││   │  0x00007f316f8ad4f1: jge    0x00007f316f8ad3be
         │││││││   │  0x00007f316f8ad4f7: nopw   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.12%  │││││││ ↗↗│  0x00007f316f8ad500: vmovdqu 0x10(%r9,%r10,4),%ymm0
  7.87%  │││││││ │││  0x00007f316f8ad507: vaddps 0x10(%r8,%r10,4),%ymm0,%ymm0
 16.18%  │││││││ │││  0x00007f316f8ad50e: vmovdqu %ymm0,0x10(%r11,%r10,4)
  2.92%  │││││││ │││  0x00007f316f8ad515: movslq %r10d,%rsi
  0.04%  │││││││ │││  0x00007f316f8ad518: vmovdqu 0x30(%r9,%rsi,4),%ymm0
  5.03%  │││││││ │││  0x00007f316f8ad51f: vaddps 0x30(%r8,%rsi,4),%ymm0,%ymm0
 11.13%  │││││││ │││  0x00007f316f8ad526: vmovdqu %ymm0,0x30(%r11,%rsi,4)
  5.03%  │││││││ │││  0x00007f316f8ad52d: vmovdqu 0x50(%r9,%rsi,4),%ymm0
  6.55%  │││││││ │││  0x00007f316f8ad534: vaddps 0x50(%r8,%rsi,4),%ymm0,%ymm0
 14.41%  │││││││ │││  0x00007f316f8ad53b: vmovdqu %ymm0,0x50(%r11,%rsi,4)
  3.99%  │││││││ │││  0x00007f316f8ad542: vmovdqu 0x70(%r9,%rsi,4),%ymm0
  0.67%  │││││││ │││  0x00007f316f8ad549: vaddps 0x70(%r8,%rsi,4),%ymm0,%ymm0
 11.05%  │││││││ │││  0x00007f316f8ad550: vmovdqu %ymm0,0x70(%r11,%rsi,4)       ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         │││││││ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
         │││││││ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  4.14%  │││││││ │││  0x00007f316f8ad557: add    $0x20,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││││││ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
         │││││││ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.14%  │││││││ │││  0x00007f316f8ad55b: cmp    %ebx,%r10d
         │││││││ ╰││  0x00007f316f8ad55e: jl     0x00007f316f8ad500             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││││││  ││  0x00007f316f8ad560: mov    0x108(%r15),%r13               ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop rcx=NarrowOop rdx=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
         │││││││  ││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││││││  ││  0x00007f316f8ad567: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││││││  ││                                                            ;   {poll}
  0.06%  │││││││  ││  0x00007f316f8ad56b: cmp    %ebx,%r10d
         │││││││  ╰│  0x00007f316f8ad56e: jl     0x00007f316f8ad500
         │││││││   │  0x00007f316f8ad570: mov    %edi,%ebx
         │││││││   │  0x00007f316f8ad572: add    $0xfffffff9,%ebx
  0.06%  │││││││   │  0x00007f316f8ad575: cmp    %ebx,%edi
  0.06%  │││││││   │  0x00007f316f8ad577: mov    $0x80000000,%esi
         │││││││   │  0x00007f316f8ad57c: cmovl  %esi,%ebx
         │││││││   │  0x00007f316f8ad57f: cmp    %ebx,%r10d
         │││││││   │  0x00007f316f8ad582: jl     0x00007f316f8ad3a0
         │││││││   │  0x00007f316f8ad588: jmpq   0x00007f316f8ad3be
         ↘││││││   │  0x00007f316f8ad58d: mov    %rdx,0x40(%rsp)
          ││││││   ╰  0x00007f316f8ad592: jmpq   0x00007f316f8ad3e6
          ↘↘↘↘↘↘      0x00007f316f8ad597: mov    $0xffffff7e,%esi
                      0x00007f316f8ad59c: mov    %rdx,0x40(%rsp)
                      0x00007f316f8ad5a1: mov    %edi,0x18(%rsp)
                      0x00007f316f8ad5a5: data16 xchg %ax,%ax
....................................................................................................
 94.12%  <total for region 1>

....[Hottest Regions]...............................................................................
 94.12%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (401 bytes) 
  2.33%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (30 bytes) 
  2.23%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.73%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (72 bytes) 
  0.10%   [kernel.kallsyms]  [unknown] (27 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         classes.jsa  [unknown] (0 bytes) 
  0.02%         interpreter  invoke return entry points  (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  method entry point (kind = native)  (0 bytes) 
  0.02%         interpreter  aaload  50 aaload  (0 bytes) 
  0.02%         interpreter  getstatic  178 getstatic  (0 bytes) 
  0.10%  <...other 5 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.45%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 
  2.59%   [kernel.kallsyms]  [unknown] 
  0.73%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
  0.02%           libjvm.so  _ZN12LinkResolver31linktime_resolve_virtual_methodERK8LinkInfoP6Thread 
  0.02%         interpreter  invoke return entry points  
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%           libjvm.so  _ZNK8G1Policy30predict_region_elapsed_time_msEP10HeapRegionb 
  0.02%         interpreter  aaload  50 aaload  
  0.02%         interpreter  method entry point (kind = native)  
  0.02%           libjvm.so  _ZN15ClassFileParser21parse_exception_tableEPK15ClassFileStreamjjP6Thread 
  0.02%           libjvm.so  _ZN13MallocTracker11record_freeEPv 
  0.02%         classes.jsa  [unknown] 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZNK5frame6senderEP11RegisterMap 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.18%                  c2
  2.59%   [kernel.kallsyms]
  0.10%           libjvm.so
  0.10%         interpreter
  0.02%         classes.jsa
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51183 total address lines.
Perf output processed (skipped 6.694 seconds):
 Column 1: cycles (5080 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (401 bytes) 

                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                      0x00007f1768319ed9: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                      0x00007f1768319edc: cmp    %edi,%r10d
                      0x00007f1768319edf: jl     0x00007f1768319ec4             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                      0x00007f1768319ee1: mov    %rdx,0x40(%rsp)                ;*invokevirtual verticalSum {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.08%            ↗  0x00007f1768319ee6: mov    %rcx,%rdx
                   │  0x00007f1768319ee9: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.06%            │  0x00007f1768319eed: mov    (%rsp),%rsi
                   │  0x00007f1768319ef1: data16 xchg %ax,%ax
  0.06%            │  0x00007f1768319ef4: vzeroupper 
  0.16%            │  0x00007f1768319ef7: callq  0x00007f1768299900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                   │                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@22 (line 145)
                   │                                                            ;   {optimized virtual_call}
  0.02%            │  0x00007f1768319efc: mov    0x40(%rsp),%rdx
  0.08%            │  0x00007f1768319f01: movzbl 0x94(%rdx),%r10d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                   │  0x00007f1768319f09: mov    0x108(%r15),%r11
  0.08%            │  0x00007f1768319f10: add    $0x1,%rbp                      ; ImmutableOopMap{rdx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                   │                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@35 (line 147)
                   │  0x00007f1768319f14: test   %eax,(%r11)                    ;   {poll}
  0.16%            │  0x00007f1768319f17: test   %r10d,%r10d
                   │  0x00007f1768319f1a: jne    0x00007f1768319e67             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@38 (line 148)
                   │  0x00007f1768319f20: mov    0x50(%rsp),%r10
  0.04%            │  0x00007f1768319f25: mov    0x20(%r10),%ecx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                   │  0x00007f1768319f29: mov    0xc(%r10),%edi                 ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@4 (line 107)
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.04%            │  0x00007f1768319f2d: test   %edi,%edi
         ╭         │  0x00007f1768319f2f: jle    0x00007f176831a08d             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │         │  0x00007f1768319f35: mov    0x18(%r10),%r9d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@16 (line 108)
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.04%  │         │  0x00007f1768319f39: mov    0xc(%r12,%r9,8),%r11d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@20 (line 108)
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │         │                                                            ; implicit exception: dispatches to 0x00007f176831a097
         │         │  0x00007f1768319f3e: test   %r11d,%r11d
         │╭        │  0x00007f1768319f41: jbe    0x00007f176831a097
  0.02%  ││        │  0x00007f1768319f47: movslq %r11d,%r10
         ││        │  0x00007f1768319f4a: movslq %edi,%r11
  0.04%  ││        │  0x00007f1768319f4d: dec    %r11
         ││        │  0x00007f1768319f50: cmp    %r10,%r11
         ││╭       │  0x00007f1768319f53: jae    0x00007f176831a097
  0.08%  │││       │  0x00007f1768319f59: mov    0x50(%rsp),%r10
         │││       │  0x00007f1768319f5e: mov    0x1c(%r10),%ebx                ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
         │││       │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@22 (line 108)
         │││       │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.04%  │││       │  0x00007f1768319f62: mov    0xc(%r12,%rbx,8),%r8d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │││       │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@26 (line 108)
         │││       │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││       │                                                            ; implicit exception: dispatches to 0x00007f176831a097
  0.14%  │││       │  0x00007f1768319f67: test   %r8d,%r8d
         │││╭      │  0x00007f1768319f6a: jbe    0x00007f176831a097
  0.12%  ││││      │  0x00007f1768319f70: movslq %r8d,%r10
         ││││      │  0x00007f1768319f73: cmp    %r10,%r11
         ││││╭     │  0x00007f1768319f76: jae    0x00007f176831a097
  0.14%  │││││     │  0x00007f1768319f7c: mov    0xc(%r12,%rcx,8),%r10d         ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         │││││     │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
         │││││     │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││││     │                                                            ; implicit exception: dispatches to 0x00007f176831a097
         │││││     │  0x00007f1768319f81: test   %r10d,%r10d
         │││││╭    │  0x00007f1768319f84: jbe    0x00007f176831a097
         ││││││    │  0x00007f1768319f8a: movslq %r10d,%r10
         ││││││    │  0x00007f1768319f8d: cmp    %r10,%r11
         ││││││╭   │  0x00007f1768319f90: jae    0x00007f176831a097
  0.10%  │││││││   │  0x00007f1768319f96: lea    (%r12,%rcx,8),%r11
         │││││││   │  0x00007f1768319f9a: lea    (%r12,%r9,8),%r8
         │││││││   │  0x00007f1768319f9e: mov    %r11d,%r10d
         │││││││   │  0x00007f1768319fa1: lea    (%r12,%rbx,8),%r9
  0.10%  │││││││   │  0x00007f1768319fa5: shr    $0x2,%r10d
         │││││││   │  0x00007f1768319fa9: and    $0x7,%r10d
  0.02%  │││││││   │  0x00007f1768319fad: mov    $0x3,%ebx
         │││││││   │  0x00007f1768319fb2: sub    %r10d,%ebx
  0.12%  │││││││   │  0x00007f1768319fb5: and    $0x7,%ebx
         │││││││   │  0x00007f1768319fb8: inc    %ebx
         │││││││   │  0x00007f1768319fba: cmp    %edi,%ebx
         │││││││   │  0x00007f1768319fbc: cmovg  %edi,%ebx
  0.18%  │││││││   │  0x00007f1768319fbf: xor    %r10d,%r10d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.02%  │││││││↗  │  0x00007f1768319fc2: vmovss 0x10(%r9,%r10,4),%xmm0
  0.71%  ││││││││  │  0x00007f1768319fc9: vaddss 0x10(%r8,%r10,4),%xmm0,%xmm1
  0.43%  ││││││││  │  0x00007f1768319fd0: vmovss %xmm1,0x10(%r11,%r10,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││││││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
         ││││││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.04%  ││││││││  │  0x00007f1768319fd7: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││││││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
         ││││││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.61%  ││││││││  │  0x00007f1768319fda: cmp    %ebx,%r10d
         │││││││╰  │  0x00007f1768319fdd: jl     0x00007f1768319fc2             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││││││   │  0x00007f1768319fdf: mov    %edi,%ebx
         │││││││   │  0x00007f1768319fe1: add    $0xffffffe1,%ebx
         │││││││   │  0x00007f1768319fe4: cmp    %ebx,%edi
  0.10%  │││││││   │  0x00007f1768319fe6: mov    $0x80000000,%esi
         │││││││   │  0x00007f1768319feb: cmovl  %esi,%ebx
         │││││││   │  0x00007f1768319fee: cmp    %ebx,%r10d
         │││││││   │  0x00007f1768319ff1: jge    0x00007f1768319ebe
         │││││││   │  0x00007f1768319ff7: nopw   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.16%  │││││││ ↗↗│  0x00007f176831a000: vmovdqu 0x10(%r9,%r10,4),%ymm0
  8.09%  │││││││ │││  0x00007f176831a007: vaddps 0x10(%r8,%r10,4),%ymm0,%ymm0
 16.14%  │││││││ │││  0x00007f176831a00e: vmovdqu %ymm0,0x10(%r11,%r10,4)
  2.78%  │││││││ │││  0x00007f176831a015: movslq %r10d,%rsi
  0.12%  │││││││ │││  0x00007f176831a018: vmovdqu 0x30(%r9,%rsi,4),%ymm0
  5.20%  │││││││ │││  0x00007f176831a01f: vaddps 0x30(%r8,%rsi,4),%ymm0,%ymm0
 10.77%  │││││││ │││  0x00007f176831a026: vmovdqu %ymm0,0x30(%r11,%rsi,4)
  4.86%  │││││││ │││  0x00007f176831a02d: vmovdqu 0x50(%r9,%rsi,4),%ymm0
  6.85%  │││││││ │││  0x00007f176831a034: vaddps 0x50(%r8,%rsi,4),%ymm0,%ymm0
 13.84%  │││││││ │││  0x00007f176831a03b: vmovdqu %ymm0,0x50(%r11,%rsi,4)
  4.70%  │││││││ │││  0x00007f176831a042: vmovdqu 0x70(%r9,%rsi,4),%ymm0
  0.45%  │││││││ │││  0x00007f176831a049: vaddps 0x70(%r8,%rsi,4),%ymm0,%ymm0
 11.12%  │││││││ │││  0x00007f176831a050: vmovdqu %ymm0,0x70(%r11,%rsi,4)       ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         │││││││ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
         │││││││ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  4.72%  │││││││ │││  0x00007f176831a057: add    $0x20,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││││││ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
         │││││││ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.12%  │││││││ │││  0x00007f176831a05b: cmp    %ebx,%r10d
         │││││││ ╰││  0x00007f176831a05e: jl     0x00007f176831a000             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││││││  ││  0x00007f176831a060: mov    0x108(%r15),%r13               ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop rcx=NarrowOop rdx=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
         │││││││  ││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.08%  │││││││  ││  0x00007f176831a067: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││││││  ││                                                            ;   {poll}
  0.06%  │││││││  ││  0x00007f176831a06b: cmp    %ebx,%r10d
         │││││││  ╰│  0x00007f176831a06e: jl     0x00007f176831a000
         │││││││   │  0x00007f176831a070: mov    %edi,%ebx
         │││││││   │  0x00007f176831a072: add    $0xfffffff9,%ebx
         │││││││   │  0x00007f176831a075: cmp    %ebx,%edi
  0.08%  │││││││   │  0x00007f176831a077: mov    $0x80000000,%esi
         │││││││   │  0x00007f176831a07c: cmovl  %esi,%ebx
         │││││││   │  0x00007f176831a07f: cmp    %ebx,%r10d
         │││││││   │  0x00007f176831a082: jl     0x00007f1768319ea0
         │││││││   │  0x00007f176831a088: jmpq   0x00007f1768319ebe
         ↘││││││   │  0x00007f176831a08d: mov    %rdx,0x40(%rsp)
          ││││││   ╰  0x00007f176831a092: jmpq   0x00007f1768319ee6
          ↘↘↘↘↘↘      0x00007f176831a097: mov    $0xffffff7e,%esi
                      0x00007f176831a09c: mov    %rdx,0x40(%rsp)
                      0x00007f176831a0a1: mov    %edi,0x18(%rsp)
                      0x00007f176831a0a5: data16 xchg %ax,%ax
....................................................................................................
 93.94%  <total for region 1>

....[Hottest Regions]...............................................................................
 93.94%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (401 bytes) 
  2.30%   [kernel.kallsyms]  [unknown] (5 bytes) 
  2.13%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (23 bytes) 
  0.71%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (64 bytes) 
  0.12%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.10%   [kernel.kallsyms]  [unknown] (27 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (8 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (4 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.30%  <...other 15 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 
  2.95%   [kernel.kallsyms]  [unknown] 
  0.71%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.04%         interpreter  invokevirtual  182 invokevirtual  
  0.02%         interpreter  invoke return entry points  
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%           libjvm.so  _ZN9metaspace31do_update_in_use_info_for_chunkEPNS_9MetachunkEb 
  0.02%           libjvm.so  _ZN12LinkResolver31check_method_loader_constraintsERK8LinkInfoRK12methodHandlePKcP6Thread 
  0.02%           libjvm.so  _ZN16LogConfiguration8finalizeEv 
  0.02%         interpreter  goto  167 goto  
  0.02%           libjvm.so  _ZNK15ClassFileParser24verify_legal_method_nameEPK6SymbolP6Thread 
  0.02%           libjvm.so  _ZN8RewriterC2EP13InstanceKlassRK18constantPoolHandleP5ArrayIP6MethodEP6Thread 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.77%                  c2
  2.95%   [kernel.kallsyms]
  0.16%         interpreter
  0.10%           libjvm.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51185 total address lines.
Perf output processed (skipped 6.609 seconds):
 Column 1: cycles (5023 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (401 bytes) 

                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                      0x00007f4dd8740459: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                      0x00007f4dd874045c: cmp    %edi,%r10d
                      0x00007f4dd874045f: jl     0x00007f4dd8740444             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                      0x00007f4dd8740461: mov    %rdx,0x40(%rsp)                ;*invokevirtual verticalSum {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.06%            ↗  0x00007f4dd8740466: mov    %rcx,%rdx
                   │  0x00007f4dd8740469: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.06%            │  0x00007f4dd874046d: mov    (%rsp),%rsi
                   │  0x00007f4dd8740471: data16 xchg %ax,%ax
  0.04%            │  0x00007f4dd8740474: vzeroupper 
  0.18%            │  0x00007f4dd8740477: callq  0x00007f4dd86bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                   │                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@22 (line 145)
                   │                                                            ;   {optimized virtual_call}
                   │  0x00007f4dd874047c: mov    0x40(%rsp),%rdx
  0.12%            │  0x00007f4dd8740481: movzbl 0x94(%rdx),%r10d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                   │  0x00007f4dd8740489: mov    0x108(%r15),%r11
  0.10%            │  0x00007f4dd8740490: add    $0x1,%rbp                      ; ImmutableOopMap{rdx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                   │                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@35 (line 147)
                   │  0x00007f4dd8740494: test   %eax,(%r11)                    ;   {poll}
  0.10%            │  0x00007f4dd8740497: test   %r10d,%r10d
                   │  0x00007f4dd874049a: jne    0x00007f4dd87403e7             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@38 (line 148)
                   │  0x00007f4dd87404a0: mov    0x50(%rsp),%r10
  0.04%            │  0x00007f4dd87404a5: mov    0x20(%r10),%ecx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                   │  0x00007f4dd87404a9: mov    0xc(%r10),%edi                 ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@4 (line 107)
                   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.08%            │  0x00007f4dd87404ad: test   %edi,%edi
         ╭         │  0x00007f4dd87404af: jle    0x00007f4dd874060d             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │         │  0x00007f4dd87404b5: mov    0x18(%r10),%r9d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@16 (line 108)
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.04%  │         │  0x00007f4dd87404b9: mov    0xc(%r12,%r9,8),%r11d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@20 (line 108)
         │         │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │         │                                                            ; implicit exception: dispatches to 0x00007f4dd8740617
         │         │  0x00007f4dd87404be: test   %r11d,%r11d
         │╭        │  0x00007f4dd87404c1: jbe    0x00007f4dd8740617
  0.26%  ││        │  0x00007f4dd87404c7: movslq %r11d,%r10
         ││        │  0x00007f4dd87404ca: movslq %edi,%r11
  0.16%  ││        │  0x00007f4dd87404cd: dec    %r11
         ││        │  0x00007f4dd87404d0: cmp    %r10,%r11
         ││╭       │  0x00007f4dd87404d3: jae    0x00007f4dd8740617
  0.16%  │││       │  0x00007f4dd87404d9: mov    0x50(%rsp),%r10
         │││       │  0x00007f4dd87404de: mov    0x1c(%r10),%ebx                ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
         │││       │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@22 (line 108)
         │││       │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.06%  │││       │  0x00007f4dd87404e2: mov    0xc(%r12,%rbx,8),%r8d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │││       │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@26 (line 108)
         │││       │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││       │                                                            ; implicit exception: dispatches to 0x00007f4dd8740617
  0.08%  │││       │  0x00007f4dd87404e7: test   %r8d,%r8d
         │││╭      │  0x00007f4dd87404ea: jbe    0x00007f4dd8740617
  0.10%  ││││      │  0x00007f4dd87404f0: movslq %r8d,%r10
         ││││      │  0x00007f4dd87404f3: cmp    %r10,%r11
         ││││╭     │  0x00007f4dd87404f6: jae    0x00007f4dd8740617
  0.30%  │││││     │  0x00007f4dd87404fc: mov    0xc(%r12,%rcx,8),%r10d         ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         │││││     │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
         │││││     │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││││     │                                                            ; implicit exception: dispatches to 0x00007f4dd8740617
         │││││     │  0x00007f4dd8740501: test   %r10d,%r10d
         │││││╭    │  0x00007f4dd8740504: jbe    0x00007f4dd8740617
         ││││││    │  0x00007f4dd874050a: movslq %r10d,%r10
         ││││││    │  0x00007f4dd874050d: cmp    %r10,%r11
         ││││││╭   │  0x00007f4dd8740510: jae    0x00007f4dd8740617
  0.10%  │││││││   │  0x00007f4dd8740516: lea    (%r12,%rcx,8),%r11
         │││││││   │  0x00007f4dd874051a: lea    (%r12,%r9,8),%r8
  0.02%  │││││││   │  0x00007f4dd874051e: mov    %r11d,%r10d
         │││││││   │  0x00007f4dd8740521: lea    (%r12,%rbx,8),%r9
  0.22%  │││││││   │  0x00007f4dd8740525: shr    $0x2,%r10d
         │││││││   │  0x00007f4dd8740529: and    $0x7,%r10d
         │││││││   │  0x00007f4dd874052d: mov    $0x3,%ebx
         │││││││   │  0x00007f4dd8740532: sub    %r10d,%ebx
  0.18%  │││││││   │  0x00007f4dd8740535: and    $0x7,%ebx
  0.02%  │││││││   │  0x00007f4dd8740538: inc    %ebx
  0.02%  │││││││   │  0x00007f4dd874053a: cmp    %edi,%ebx
         │││││││   │  0x00007f4dd874053c: cmovg  %edi,%ebx
  0.12%  │││││││   │  0x00007f4dd874053f: xor    %r10d,%r10d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││││││↗  │  0x00007f4dd8740542: vmovss 0x10(%r9,%r10,4),%xmm0
  0.70%  ││││││││  │  0x00007f4dd8740549: vaddss 0x10(%r8,%r10,4),%xmm0,%xmm1
  0.64%  ││││││││  │  0x00007f4dd8740550: vmovss %xmm1,0x10(%r11,%r10,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││││││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
         ││││││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.04%  ││││││││  │  0x00007f4dd8740557: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││││││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
         ││││││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.68%  ││││││││  │  0x00007f4dd874055a: cmp    %ebx,%r10d
         │││││││╰  │  0x00007f4dd874055d: jl     0x00007f4dd8740542             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││││││   │  0x00007f4dd874055f: mov    %edi,%ebx
         │││││││   │  0x00007f4dd8740561: add    $0xffffffe1,%ebx
         │││││││   │  0x00007f4dd8740564: cmp    %ebx,%edi
  0.10%  │││││││   │  0x00007f4dd8740566: mov    $0x80000000,%esi
         │││││││   │  0x00007f4dd874056b: cmovl  %esi,%ebx
         │││││││   │  0x00007f4dd874056e: cmp    %ebx,%r10d
         │││││││   │  0x00007f4dd8740571: jge    0x00007f4dd874043e
         │││││││   │  0x00007f4dd8740577: nopw   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
         │││││││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.16%  │││││││ ↗↗│  0x00007f4dd8740580: vmovdqu 0x10(%r9,%r10,4),%ymm0
  8.76%  │││││││ │││  0x00007f4dd8740587: vaddps 0x10(%r8,%r10,4),%ymm0,%ymm0
 15.97%  │││││││ │││  0x00007f4dd874058e: vmovdqu %ymm0,0x10(%r11,%r10,4)
  2.65%  │││││││ │││  0x00007f4dd8740595: movslq %r10d,%rsi
  0.06%  │││││││ │││  0x00007f4dd8740598: vmovdqu 0x30(%r9,%rsi,4),%ymm0
  5.04%  │││││││ │││  0x00007f4dd874059f: vaddps 0x30(%r8,%rsi,4),%ymm0,%ymm0
 11.51%  │││││││ │││  0x00007f4dd87405a6: vmovdqu %ymm0,0x30(%r11,%rsi,4)
  4.72%  │││││││ │││  0x00007f4dd87405ad: vmovdqu 0x50(%r9,%rsi,4),%ymm0
  6.99%  │││││││ │││  0x00007f4dd87405b4: vaddps 0x50(%r8,%rsi,4),%ymm0,%ymm0
 13.28%  │││││││ │││  0x00007f4dd87405bb: vmovdqu %ymm0,0x50(%r11,%rsi,4)
  4.10%  │││││││ │││  0x00007f4dd87405c2: vmovdqu 0x70(%r9,%rsi,4),%ymm0
  0.74%  │││││││ │││  0x00007f4dd87405c9: vaddps 0x70(%r8,%rsi,4),%ymm0,%ymm0
 11.83%  │││││││ │││  0x00007f4dd87405d0: vmovdqu %ymm0,0x70(%r11,%rsi,4)       ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         │││││││ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
         │││││││ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  4.34%  │││││││ │││  0x00007f4dd87405d7: add    $0x20,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││││││ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
         │││││││ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.16%  │││││││ │││  0x00007f4dd87405db: cmp    %ebx,%r10d
         │││││││ ╰││  0x00007f4dd87405de: jl     0x00007f4dd8740580             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││││││  ││  0x00007f4dd87405e0: mov    0x108(%r15),%r13               ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop rcx=NarrowOop rdx=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
         │││││││  ││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.08%  │││││││  ││  0x00007f4dd87405e7: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
         │││││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
         │││││││  ││                                                            ;   {poll}
  0.04%  │││││││  ││  0x00007f4dd87405eb: cmp    %ebx,%r10d
         │││││││  ╰│  0x00007f4dd87405ee: jl     0x00007f4dd8740580
         │││││││   │  0x00007f4dd87405f0: mov    %edi,%ebx
         │││││││   │  0x00007f4dd87405f2: add    $0xfffffff9,%ebx
  0.10%  │││││││   │  0x00007f4dd87405f5: cmp    %ebx,%edi
  0.12%  │││││││   │  0x00007f4dd87405f7: mov    $0x80000000,%esi
         │││││││   │  0x00007f4dd87405fc: cmovl  %esi,%ebx
         │││││││   │  0x00007f4dd87405ff: cmp    %ebx,%r10d
         │││││││   │  0x00007f4dd8740602: jl     0x00007f4dd8740420
         │││││││   │  0x00007f4dd8740608: jmpq   0x00007f4dd874043e
         ↘││││││   │  0x00007f4dd874060d: mov    %rdx,0x40(%rsp)
          ││││││   ╰  0x00007f4dd8740612: jmpq   0x00007f4dd8740466
          ↘↘↘↘↘↘      0x00007f4dd8740617: mov    $0xffffff7e,%esi
                      0x00007f4dd874061c: mov    %rdx,0x40(%rsp)
                      0x00007f4dd8740621: mov    %edi,0x18(%rsp)
                      0x00007f4dd8740625: data16 xchg %ax,%ax
....................................................................................................
 95.38%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.38%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (401 bytes) 
  1.89%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (30 bytes) 
  1.59%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.60%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (72 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (41 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (21 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.12%  <...other 6 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.27%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 
  1.99%   [kernel.kallsyms]  [unknown] 
  0.60%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  aload_2  44 aload_2  
  0.02%         interpreter  areturn  176 areturn  
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%        libc-2.23.so  pthread_mutex_unlock 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.87%                  c2
  1.99%   [kernel.kallsyms]
  0.10%         interpreter
  0.02%        libc-2.23.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSum
# Parameters: (probabilityOfNaN = 0.01, size = 1024)

# Run progress: 7.41% complete, ETA 00:15:17
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4658.978 ops/ms
# Warmup Iteration   2: 4680.158 ops/ms
# Warmup Iteration   3: 4724.927 ops/ms
# Warmup Iteration   4: 4720.815 ops/ms
# Warmup Iteration   5: 4726.682 ops/ms
Iteration   1: 4695.072 ops/ms
Iteration   2: 4709.117 ops/ms
Iteration   3: 4718.495 ops/ms
Iteration   4: 4721.510 ops/ms
Iteration   5: 4713.438 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 8.64% complete, ETA 00:15:03
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4647.598 ops/ms
# Warmup Iteration   2: 4698.440 ops/ms
# Warmup Iteration   3: 4717.056 ops/ms
# Warmup Iteration   4: 4705.642 ops/ms
# Warmup Iteration   5: 4707.789 ops/ms
Iteration   1: 4701.482 ops/ms
Iteration   2: 4703.323 ops/ms
Iteration   3: 4711.136 ops/ms
Iteration   4: 4700.170 ops/ms
Iteration   5: 4721.389 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 9.88% complete, ETA 00:14:48
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4634.408 ops/ms
# Warmup Iteration   2: 4681.141 ops/ms
# Warmup Iteration   3: 4687.636 ops/ms
# Warmup Iteration   4: 4699.596 ops/ms
# Warmup Iteration   5: 4642.756 ops/ms
Iteration   1: 4680.617 ops/ms
Iteration   2: 4695.387 ops/ms
Iteration   3: 4689.448 ops/ms
Iteration   4: 4687.821 ops/ms
Iteration   5: 4688.129 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSum":
  4702.436 ±(99.9%) 13.986 ops/ms [Average]
  (min, avg, max) = (4680.617, 4702.436, 4721.510), stdev = 13.082
  CI (99.9%): [4688.450, 4716.421] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSum:·asm":
PrintAssembly processed: 51146 total address lines.
Perf output processed (skipped 6.615 seconds):
 Column 1: cycles (5108 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (471 bytes) 

                                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@48 (line 149)
                            0x00007fb8a473fc8c: vzeroupper 
                            0x00007fb8a473fc8f: add    $0x30,%rsp
                            0x00007fb8a473fc93: pop    %rbp
                            0x00007fb8a473fc94: mov    0x108(%r15),%r10
                            0x00007fb8a473fc9b: test   %eax,(%r10)                    ;   {poll_return}
                            0x00007fb8a473fc9e: retq   
                            0x00007fb8a473fc9f: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                                      ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
                                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.02%  ↗             ↗    0x00007fb8a473fca0: vmovdqu 0x10(%r9,%r10,4),%ymm0
  0.22%  │             │    0x00007fb8a473fca7: vaddps 0x10(%r8,%r10,4),%ymm0,%ymm0
  0.31%  │             │    0x00007fb8a473fcae: vmovdqu %ymm0,0x10(%r11,%r10,4)       ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.10%  │             │    0x00007fb8a473fcb5: add    $0x8,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.22%  │             │    0x00007fb8a473fcb9: cmp    %ebx,%r10d
         ╰             │    0x00007fb8a473fcbc: jl     0x00007fb8a473fca0             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                       │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
                       │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    ↗  │↗   0x00007fb8a473fcbe: cmp    %edi,%r10d
          ╭         │  ││   0x00007fb8a473fcc1: jge    0x00007fb8a473fce1
          │         │  ││   0x00007fb8a473fcc3: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.25%   │↗        │  ││   0x00007fb8a473fcc4: vmovss 0x10(%r9,%r10,4),%xmm1
  0.02%   ││        │  ││   0x00007fb8a473fccb: vaddss 0x10(%r8,%r10,4),%xmm1,%xmm0
  0.55%   ││        │  ││   0x00007fb8a473fcd2: vmovss %xmm0,0x10(%r11,%r10,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.90%   ││        │  ││   0x00007fb8a473fcd9: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
          ││        │  ││   0x00007fb8a473fcdc: cmp    %edi,%r10d
          │╰        │  ││   0x00007fb8a473fcdf: jl     0x00007fb8a473fcc4             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
          ↘         │  ││   0x00007fb8a473fce1: mov    %rdx,0x40(%rsp)                ;*invokevirtual verticalSum {reexecute=0 rethrow=0 return_oop=0}
                    │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.02%             │  ││↗  0x00007fb8a473fce6: mov    %rcx,%rdx
  0.18%             │  │││  0x00007fb8a473fce9: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007fb8a473fced: mov    (%rsp),%rsi
                    │  │││  0x00007fb8a473fcf1: data16 xchg %ax,%ax
  0.02%             │  │││  0x00007fb8a473fcf4: vzeroupper 
  0.18%             │  │││  0x00007fb8a473fcf7: callq  0x00007fb8a46bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                    │  │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@22 (line 145)
                    │  │││                                                            ;   {optimized virtual_call}
                    │  │││  0x00007fb8a473fcfc: mov    0x40(%rsp),%rdx
  0.20%             │  │││  0x00007fb8a473fd01: movzbl 0x94(%rdx),%r10d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007fb8a473fd09: mov    0x108(%r15),%r11
                    │  │││  0x00007fb8a473fd10: add    $0x1,%rbp                      ; ImmutableOopMap{rdx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                    │  │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@35 (line 147)
  0.18%             │  │││  0x00007fb8a473fd14: test   %eax,(%r11)                    ;   {poll}
                    │  │││  0x00007fb8a473fd17: test   %r10d,%r10d
                    │  │││  0x00007fb8a473fd1a: jne    0x00007fb8a473fc67             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@38 (line 148)
                    │  │││  0x00007fb8a473fd20: mov    0x50(%rsp),%r10
                    │  │││  0x00007fb8a473fd25: mov    0x20(%r10),%ecx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.08%             │  │││  0x00007fb8a473fd29: mov    0xc(%r10),%edi                 ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@4 (line 107)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007fb8a473fd2d: test   %edi,%edi
            ╭       │  │││  0x00007fb8a473fd2f: jle    0x00007fb8a473fe8d             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │       │  │││  0x00007fb8a473fd35: mov    0x18(%r10),%r9d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@16 (line 108)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.02%     │       │  │││  0x00007fb8a473fd39: mov    0xc(%r12,%r9,8),%r11d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@20 (line 108)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │       │  │││                                                            ; implicit exception: dispatches to 0x00007fb8a473fe97
  0.14%     │       │  │││  0x00007fb8a473fd3e: test   %r11d,%r11d
            │╭      │  │││  0x00007fb8a473fd41: jbe    0x00007fb8a473fe97
            ││      │  │││  0x00007fb8a473fd47: movslq %r11d,%r10
            ││      │  │││  0x00007fb8a473fd4a: movslq %edi,%r11
            ││      │  │││  0x00007fb8a473fd4d: dec    %r11
  0.22%     ││      │  │││  0x00007fb8a473fd50: cmp    %r10,%r11
            ││╭     │  │││  0x00007fb8a473fd53: jae    0x00007fb8a473fe97
  0.02%     │││     │  │││  0x00007fb8a473fd59: mov    0x50(%rsp),%r10
            │││     │  │││  0x00007fb8a473fd5e: mov    0x1c(%r10),%ebx                ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@22 (line 108)
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││     │  │││  0x00007fb8a473fd62: mov    0xc(%r12,%rbx,8),%r8d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@26 (line 108)
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││     │  │││                                                            ; implicit exception: dispatches to 0x00007fb8a473fe97
  0.18%     │││     │  │││  0x00007fb8a473fd67: test   %r8d,%r8d
            │││╭    │  │││  0x00007fb8a473fd6a: jbe    0x00007fb8a473fe97
            ││││    │  │││  0x00007fb8a473fd70: movslq %r8d,%r10
  0.02%     ││││    │  │││  0x00007fb8a473fd73: cmp    %r10,%r11
            ││││╭   │  │││  0x00007fb8a473fd76: jae    0x00007fb8a473fe97
            │││││   │  │││  0x00007fb8a473fd7c: mov    0xc(%r12,%rcx,8),%r10d         ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││   │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││   │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││   │  │││                                                            ; implicit exception: dispatches to 0x00007fb8a473fe97
  0.12%     │││││   │  │││  0x00007fb8a473fd81: test   %r10d,%r10d
            │││││╭  │  │││  0x00007fb8a473fd84: jbe    0x00007fb8a473fe97
            ││││││  │  │││  0x00007fb8a473fd8a: movslq %r10d,%r10
            ││││││  │  │││  0x00007fb8a473fd8d: cmp    %r10,%r11
            ││││││╭ │  │││  0x00007fb8a473fd90: jae    0x00007fb8a473fe97
  0.04%     │││││││ │  │││  0x00007fb8a473fd96: lea    (%r12,%rcx,8),%r11
  0.08%     │││││││ │  │││  0x00007fb8a473fd9a: lea    (%r12,%r9,8),%r8
            │││││││ │  │││  0x00007fb8a473fd9e: mov    %r11d,%r10d
            │││││││ │  │││  0x00007fb8a473fda1: lea    (%r12,%rbx,8),%r9
            │││││││ │  │││  0x00007fb8a473fda5: shr    $0x2,%r10d
  0.18%     │││││││ │  │││  0x00007fb8a473fda9: and    $0x7,%r10d
            │││││││ │  │││  0x00007fb8a473fdad: mov    $0x3,%ebx
            │││││││ │  │││  0x00007fb8a473fdb2: sub    %r10d,%ebx
  0.02%     │││││││ │  │││  0x00007fb8a473fdb5: and    $0x7,%ebx
  0.14%     │││││││ │  │││  0x00007fb8a473fdb8: inc    %ebx
            │││││││ │  │││  0x00007fb8a473fdba: cmp    %edi,%ebx
            │││││││ │  │││  0x00007fb8a473fdbc: cmovg  %edi,%ebx
  0.02%     │││││││ │  │││  0x00007fb8a473fdbf: xor    %r10d,%r10d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.10%     │││││││↗│  │││  0x00007fb8a473fdc2: vmovss 0x10(%r9,%r10,4),%xmm0
  0.02%     │││││││││  │││  0x00007fb8a473fdc9: vaddss 0x10(%r8,%r10,4),%xmm0,%xmm1
  0.22%     │││││││││  │││  0x00007fb8a473fdd0: vmovss %xmm1,0x10(%r11,%r10,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.16%     │││││││││  │││  0x00007fb8a473fdd7: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.02%     │││││││││  │││  0x00007fb8a473fdda: cmp    %ebx,%r10d
            │││││││╰│  │││  0x00007fb8a473fddd: jl     0x00007fb8a473fdc2             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.16%     │││││││ │  │││  0x00007fb8a473fddf: mov    %edi,%ebx
            │││││││ │  │││  0x00007fb8a473fde1: add    $0xffffffe1,%ebx
            │││││││ │  │││  0x00007fb8a473fde4: cmp    %ebx,%edi
            │││││││ │  │││  0x00007fb8a473fde6: mov    $0x80000000,%esi
  0.16%     │││││││ │  │││  0x00007fb8a473fdeb: cmovl  %esi,%ebx
            │││││││ │  │││  0x00007fb8a473fdee: cmp    %ebx,%r10d
            │││││││ ╰  │││  0x00007fb8a473fdf1: jge    0x00007fb8a473fcbe
            │││││││    │││  0x00007fb8a473fdf7: nopw   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
            │││││││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
            │││││││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││  ↗↗│││  0x00007fb8a473fe00: vmovdqu 0x10(%r9,%r10,4),%ymm0
  0.39%     │││││││  │││││  0x00007fb8a473fe07: vaddps 0x10(%r8,%r10,4),%ymm0,%ymm0
  9.48%     │││││││  │││││  0x00007fb8a473fe0e: vmovdqu %ymm0,0x10(%r11,%r10,4)
  3.62%     │││││││  │││││  0x00007fb8a473fe15: movslq %r10d,%rsi
            │││││││  │││││  0x00007fb8a473fe18: vmovdqu 0x30(%r9,%rsi,4),%ymm0
 16.50%     │││││││  │││││  0x00007fb8a473fe1f: vaddps 0x30(%r8,%rsi,4),%ymm0,%ymm0
 12.29%     │││││││  │││││  0x00007fb8a473fe26: vmovdqu %ymm0,0x30(%r11,%rsi,4)
  1.80%     │││││││  │││││  0x00007fb8a473fe2d: vmovdqu 0x50(%r9,%rsi,4),%ymm0
  4.29%     │││││││  │││││  0x00007fb8a473fe34: vaddps 0x50(%r8,%rsi,4),%ymm0,%ymm0
  9.18%     │││││││  │││││  0x00007fb8a473fe3b: vmovdqu %ymm0,0x50(%r11,%rsi,4)
  4.89%     │││││││  │││││  0x00007fb8a473fe42: vmovdqu 0x70(%r9,%rsi,4),%ymm0
 13.92%     │││││││  │││││  0x00007fb8a473fe49: vaddps 0x70(%r8,%rsi,4),%ymm0,%ymm0
  9.04%     │││││││  │││││  0x00007fb8a473fe50: vmovdqu %ymm0,0x70(%r11,%rsi,4)       ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  4.27%     │││││││  │││││  0x00007fb8a473fe57: add    $0x20,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.08%     │││││││  │││││  0x00007fb8a473fe5b: cmp    %ebx,%r10d
            │││││││  ╰││││  0x00007fb8a473fe5e: jl     0x00007fb8a473fe00             ;*goto {reexecute=0 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││   ││││  0x00007fb8a473fe60: mov    0x108(%r15),%r13               ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop rcx=NarrowOop rdx=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││││││   ││││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.02%     │││││││   ││││  0x00007fb8a473fe67: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││   ││││                                                            ;   {poll}
  0.12%     │││││││   ││││  0x00007fb8a473fe6b: cmp    %ebx,%r10d
            │││││││   ╰│││  0x00007fb8a473fe6e: jl     0x00007fb8a473fe00
            │││││││    │││  0x00007fb8a473fe70: mov    %edi,%ebx
            │││││││    │││  0x00007fb8a473fe72: add    $0xfffffff9,%ebx
            │││││││    │││  0x00007fb8a473fe75: cmp    %ebx,%edi
  0.08%     │││││││    │││  0x00007fb8a473fe77: mov    $0x80000000,%esi
            │││││││    │││  0x00007fb8a473fe7c: cmovl  %esi,%ebx
            │││││││    │││  0x00007fb8a473fe7f: cmp    %ebx,%r10d
            │││││││    ╰││  0x00007fb8a473fe82: jl     0x00007fb8a473fca0
            │││││││     ╰│  0x00007fb8a473fe88: jmpq   0x00007fb8a473fcbe
            ↘││││││      │  0x00007fb8a473fe8d: mov    %rdx,0x40(%rsp)
             ││││││      ╰  0x00007fb8a473fe92: jmpq   0x00007fb8a473fce6
             ↘↘↘↘↘↘         0x00007fb8a473fe97: mov    $0xffffff7e,%esi
                            0x00007fb8a473fe9c: mov    %rdx,0x40(%rsp)
                            0x00007fb8a473fea1: mov    %edi,0x18(%rsp)
                            0x00007fb8a473fea5: data16 xchg %ax,%ax
....................................................................................................
 95.40%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.40%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (471 bytes) 
  2.88%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.96%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (65 bytes) 
  0.20%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.12%   [kernel.kallsyms]  [unknown] (27 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.06%  <...other 3 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.40%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 
  3.52%   [kernel.kallsyms]  [unknown] 
  0.96%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  nofast_putfield  235 nofast_putfield  
  0.02%       perf-5288.map  [unknown] 
  0.02%         interpreter  invokeinterface  185 invokeinterface  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.36%                  c2
  3.52%   [kernel.kallsyms]
  0.08%         interpreter
  0.02%       perf-5288.map
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51183 total address lines.
Perf output processed (skipped 6.626 seconds):
 Column 1: cycles (5069 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (471 bytes) 

                                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@48 (line 149)
                            0x00007f8cd073e10c: vzeroupper 
                            0x00007f8cd073e10f: add    $0x30,%rsp
                            0x00007f8cd073e113: pop    %rbp
                            0x00007f8cd073e114: mov    0x108(%r15),%r10
                            0x00007f8cd073e11b: test   %eax,(%r10)                    ;   {poll_return}
                            0x00007f8cd073e11e: retq   
                            0x00007f8cd073e11f: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                                      ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
                                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.04%  ↗             ↗    0x00007f8cd073e120: vmovdqu 0x10(%r9,%r10,4),%ymm0
  0.37%  │             │    0x00007f8cd073e127: vaddps 0x10(%r8,%r10,4),%ymm0,%ymm0
  0.39%  │             │    0x00007f8cd073e12e: vmovdqu %ymm0,0x10(%r11,%r10,4)       ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.10%  │             │    0x00007f8cd073e135: add    $0x8,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.18%  │             │    0x00007f8cd073e139: cmp    %ebx,%r10d
         ╰             │    0x00007f8cd073e13c: jl     0x00007f8cd073e120             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                       │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
                       │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    ↗  │↗   0x00007f8cd073e13e: cmp    %edi,%r10d
          ╭         │  ││   0x00007f8cd073e141: jge    0x00007f8cd073e161
          │         │  ││   0x00007f8cd073e143: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.28%   │↗        │  ││   0x00007f8cd073e144: vmovss 0x10(%r9,%r10,4),%xmm1
          ││        │  ││   0x00007f8cd073e14b: vaddss 0x10(%r8,%r10,4),%xmm1,%xmm0
  0.75%   ││        │  ││   0x00007f8cd073e152: vmovss %xmm0,0x10(%r11,%r10,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.75%   ││        │  ││   0x00007f8cd073e159: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
          ││        │  ││   0x00007f8cd073e15c: cmp    %edi,%r10d
          │╰        │  ││   0x00007f8cd073e15f: jl     0x00007f8cd073e144             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
          ↘         │  ││   0x00007f8cd073e161: mov    %rdx,0x40(%rsp)                ;*invokevirtual verticalSum {reexecute=0 rethrow=0 return_oop=0}
                    │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  ││↗  0x00007f8cd073e166: mov    %rcx,%rdx
  0.18%             │  │││  0x00007f8cd073e169: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007f8cd073e16d: mov    (%rsp),%rsi
                    │  │││  0x00007f8cd073e171: data16 xchg %ax,%ax
                    │  │││  0x00007f8cd073e174: vzeroupper 
  0.26%             │  │││  0x00007f8cd073e177: callq  0x00007f8cd06bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                    │  │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@22 (line 145)
                    │  │││                                                            ;   {optimized virtual_call}
                    │  │││  0x00007f8cd073e17c: mov    0x40(%rsp),%rdx
  0.12%             │  │││  0x00007f8cd073e181: movzbl 0x94(%rdx),%r10d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007f8cd073e189: mov    0x108(%r15),%r11
                    │  │││  0x00007f8cd073e190: add    $0x1,%rbp                      ; ImmutableOopMap{rdx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                    │  │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@35 (line 147)
  0.24%             │  │││  0x00007f8cd073e194: test   %eax,(%r11)                    ;   {poll}
                    │  │││  0x00007f8cd073e197: test   %r10d,%r10d
                    │  │││  0x00007f8cd073e19a: jne    0x00007f8cd073e0e7             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@38 (line 148)
  0.02%             │  │││  0x00007f8cd073e1a0: mov    0x50(%rsp),%r10
  0.02%             │  │││  0x00007f8cd073e1a5: mov    0x20(%r10),%ecx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.12%             │  │││  0x00007f8cd073e1a9: mov    0xc(%r10),%edi                 ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@4 (line 107)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007f8cd073e1ad: test   %edi,%edi
            ╭       │  │││  0x00007f8cd073e1af: jle    0x00007f8cd073e30d             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │       │  │││  0x00007f8cd073e1b5: mov    0x18(%r10),%r9d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@16 (line 108)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │       │  │││  0x00007f8cd073e1b9: mov    0xc(%r12,%r9,8),%r11d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@20 (line 108)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │       │  │││                                                            ; implicit exception: dispatches to 0x00007f8cd073e317
  0.24%     │       │  │││  0x00007f8cd073e1be: test   %r11d,%r11d
            │╭      │  │││  0x00007f8cd073e1c1: jbe    0x00007f8cd073e317
            ││      │  │││  0x00007f8cd073e1c7: movslq %r11d,%r10
  0.02%     ││      │  │││  0x00007f8cd073e1ca: movslq %edi,%r11
            ││      │  │││  0x00007f8cd073e1cd: dec    %r11
  0.14%     ││      │  │││  0x00007f8cd073e1d0: cmp    %r10,%r11
            ││╭     │  │││  0x00007f8cd073e1d3: jae    0x00007f8cd073e317
  0.02%     │││     │  │││  0x00007f8cd073e1d9: mov    0x50(%rsp),%r10
            │││     │  │││  0x00007f8cd073e1de: mov    0x1c(%r10),%ebx                ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@22 (line 108)
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││     │  │││  0x00007f8cd073e1e2: mov    0xc(%r12,%rbx,8),%r8d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@26 (line 108)
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││     │  │││                                                            ; implicit exception: dispatches to 0x00007f8cd073e317
  0.14%     │││     │  │││  0x00007f8cd073e1e7: test   %r8d,%r8d
            │││╭    │  │││  0x00007f8cd073e1ea: jbe    0x00007f8cd073e317
  0.04%     ││││    │  │││  0x00007f8cd073e1f0: movslq %r8d,%r10
            ││││    │  │││  0x00007f8cd073e1f3: cmp    %r10,%r11
            ││││╭   │  │││  0x00007f8cd073e1f6: jae    0x00007f8cd073e317
            │││││   │  │││  0x00007f8cd073e1fc: mov    0xc(%r12,%rcx,8),%r10d         ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││   │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││   │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││   │  │││                                                            ; implicit exception: dispatches to 0x00007f8cd073e317
  0.04%     │││││   │  │││  0x00007f8cd073e201: test   %r10d,%r10d
            │││││╭  │  │││  0x00007f8cd073e204: jbe    0x00007f8cd073e317
            ││││││  │  │││  0x00007f8cd073e20a: movslq %r10d,%r10
            ││││││  │  │││  0x00007f8cd073e20d: cmp    %r10,%r11
            ││││││╭ │  │││  0x00007f8cd073e210: jae    0x00007f8cd073e317
  0.02%     │││││││ │  │││  0x00007f8cd073e216: lea    (%r12,%rcx,8),%r11
  0.24%     │││││││ │  │││  0x00007f8cd073e21a: lea    (%r12,%r9,8),%r8
            │││││││ │  │││  0x00007f8cd073e21e: mov    %r11d,%r10d
            │││││││ │  │││  0x00007f8cd073e221: lea    (%r12,%rbx,8),%r9
  0.02%     │││││││ │  │││  0x00007f8cd073e225: shr    $0x2,%r10d
  0.12%     │││││││ │  │││  0x00007f8cd073e229: and    $0x7,%r10d
            │││││││ │  │││  0x00007f8cd073e22d: mov    $0x3,%ebx
            │││││││ │  │││  0x00007f8cd073e232: sub    %r10d,%ebx
  0.02%     │││││││ │  │││  0x00007f8cd073e235: and    $0x7,%ebx
  0.20%     │││││││ │  │││  0x00007f8cd073e238: inc    %ebx
            │││││││ │  │││  0x00007f8cd073e23a: cmp    %edi,%ebx
            │││││││ │  │││  0x00007f8cd073e23c: cmovg  %edi,%ebx
            │││││││ │  │││  0x00007f8cd073e23f: xor    %r10d,%r10d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.18%     │││││││↗│  │││  0x00007f8cd073e242: vmovss 0x10(%r9,%r10,4),%xmm0
            │││││││││  │││  0x00007f8cd073e249: vaddss 0x10(%r8,%r10,4),%xmm0,%xmm1
  0.20%     │││││││││  │││  0x00007f8cd073e250: vmovss %xmm1,0x10(%r11,%r10,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.10%     │││││││││  │││  0x00007f8cd073e257: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.04%     │││││││││  │││  0x00007f8cd073e25a: cmp    %ebx,%r10d
            │││││││╰│  │││  0x00007f8cd073e25d: jl     0x00007f8cd073e242             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.10%     │││││││ │  │││  0x00007f8cd073e25f: mov    %edi,%ebx
            │││││││ │  │││  0x00007f8cd073e261: add    $0xffffffe1,%ebx
            │││││││ │  │││  0x00007f8cd073e264: cmp    %ebx,%edi
  0.02%     │││││││ │  │││  0x00007f8cd073e266: mov    $0x80000000,%esi
  0.20%     │││││││ │  │││  0x00007f8cd073e26b: cmovl  %esi,%ebx
            │││││││ │  │││  0x00007f8cd073e26e: cmp    %ebx,%r10d
            │││││││ ╰  │││  0x00007f8cd073e271: jge    0x00007f8cd073e13e
            │││││││    │││  0x00007f8cd073e277: nopw   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
            │││││││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
            │││││││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││  ↗↗│││  0x00007f8cd073e280: vmovdqu 0x10(%r9,%r10,4),%ymm0
  0.45%     │││││││  │││││  0x00007f8cd073e287: vaddps 0x10(%r8,%r10,4),%ymm0,%ymm0
  8.96%     │││││││  │││││  0x00007f8cd073e28e: vmovdqu %ymm0,0x10(%r11,%r10,4)
  4.24%     │││││││  │││││  0x00007f8cd073e295: movslq %r10d,%rsi
            │││││││  │││││  0x00007f8cd073e298: vmovdqu 0x30(%r9,%rsi,4),%ymm0
 16.37%     │││││││  │││││  0x00007f8cd073e29f: vaddps 0x30(%r8,%rsi,4),%ymm0,%ymm0
 13.79%     │││││││  │││││  0x00007f8cd073e2a6: vmovdqu %ymm0,0x30(%r11,%rsi,4)
  1.76%     │││││││  │││││  0x00007f8cd073e2ad: vmovdqu 0x50(%r9,%rsi,4),%ymm0
  3.99%     │││││││  │││││  0x00007f8cd073e2b4: vaddps 0x50(%r8,%rsi,4),%ymm0,%ymm0
  9.73%     │││││││  │││││  0x00007f8cd073e2bb: vmovdqu %ymm0,0x50(%r11,%rsi,4)
  4.60%     │││││││  │││││  0x00007f8cd073e2c2: vmovdqu 0x70(%r9,%rsi,4),%ymm0
 12.53%     │││││││  │││││  0x00007f8cd073e2c9: vaddps 0x70(%r8,%rsi,4),%ymm0,%ymm0
  8.72%     │││││││  │││││  0x00007f8cd073e2d0: vmovdqu %ymm0,0x70(%r11,%rsi,4)       ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  4.60%     │││││││  │││││  0x00007f8cd073e2d7: add    $0x20,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.22%     │││││││  │││││  0x00007f8cd073e2db: cmp    %ebx,%r10d
            │││││││  ╰││││  0x00007f8cd073e2de: jl     0x00007f8cd073e280             ;*goto {reexecute=0 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││   ││││  0x00007f8cd073e2e0: mov    0x108(%r15),%r13               ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop rcx=NarrowOop rdx=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││││││   ││││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││   ││││  0x00007f8cd073e2e7: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││   ││││                                                            ;   {poll}
  0.08%     │││││││   ││││  0x00007f8cd073e2eb: cmp    %ebx,%r10d
            │││││││   ╰│││  0x00007f8cd073e2ee: jl     0x00007f8cd073e280
            │││││││    │││  0x00007f8cd073e2f0: mov    %edi,%ebx
            │││││││    │││  0x00007f8cd073e2f2: add    $0xfffffff9,%ebx
            │││││││    │││  0x00007f8cd073e2f5: cmp    %ebx,%edi
  0.20%     │││││││    │││  0x00007f8cd073e2f7: mov    $0x80000000,%esi
            │││││││    │││  0x00007f8cd073e2fc: cmovl  %esi,%ebx
            │││││││    │││  0x00007f8cd073e2ff: cmp    %ebx,%r10d
            │││││││    ╰││  0x00007f8cd073e302: jl     0x00007f8cd073e120
            │││││││     ╰│  0x00007f8cd073e308: jmpq   0x00007f8cd073e13e
            ↘││││││      │  0x00007f8cd073e30d: mov    %rdx,0x40(%rsp)
             ││││││      ╰  0x00007f8cd073e312: jmpq   0x00007f8cd073e166
             ↘↘↘↘↘↘         0x00007f8cd073e317: mov    $0xffffff7e,%esi
                            0x00007f8cd073e31c: mov    %rdx,0x40(%rsp)
                            0x00007f8cd073e321: mov    %edi,0x18(%rsp)
                            0x00007f8cd073e325: data16 xchg %ax,%ax
....................................................................................................
 96.09%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.09%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (471 bytes) 
  1.85%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.89%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (65 bytes) 
  0.14%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.14%   [kernel.kallsyms]  [unknown] (41 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (27 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.04%           libjvm.so  _ZN12PeriodicTask14real_time_tickEi (0 bytes) 
  0.04%  libpthread-2.23.so  pthread_cond_timedwait@@GLIBC_2.3.2 (3 bytes) 
  0.04%        libc-2.23.so  pthread_mutex_unlock (6 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.43%  <...other 22 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.09%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 
  2.72%   [kernel.kallsyms]  [unknown] 
  0.89%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
  0.04%        libc-2.23.so  pthread_mutex_unlock 
  0.04%           libjvm.so  _ZN12PeriodicTask14real_time_tickEi 
  0.04%  libpthread-2.23.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.02%  libpthread-2.23.so  __lll_unlock_wake 
  0.02%         interpreter  checkcast  192 checkcast  
  0.02%           libjvm.so  _ZN13WatcherThread3runEv 
  0.02%           libjvm.so  _ZN5Chunk9next_chopEv 
  0.02%           libjvm.so  _ZNK13WatcherThread5sleepEv 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN7Monitor6unlockEv 
  0.02%           libjvm.so  _ZN15StatSamplerTask4taskEv 
  0.02%           libjvm.so  _ZN21ThreadStateTransition22transition_from_nativeEP10JavaThread15JavaThreadState.constprop.205 
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 96.98%                  c2
  2.72%   [kernel.kallsyms]
  0.16%           libjvm.so
  0.06%  libpthread-2.23.so
  0.04%        libc-2.23.so
  0.04%         interpreter
....................................................................................................
100.00%  <totals>

PrintAssembly processed: 51156 total address lines.
Perf output processed (skipped 6.622 seconds):
 Column 1: cycles (5043 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (471 bytes) 

                                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@48 (line 149)
                            0x00007fd040317e0c: vzeroupper 
                            0x00007fd040317e0f: add    $0x30,%rsp
                            0x00007fd040317e13: pop    %rbp
                            0x00007fd040317e14: mov    0x108(%r15),%r10
                            0x00007fd040317e1b: test   %eax,(%r10)                    ;   {poll_return}
                            0x00007fd040317e1e: retq   
                            0x00007fd040317e1f: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                                      ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
                                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.04%  ↗             ↗    0x00007fd040317e20: vmovdqu 0x10(%r9,%r10,4),%ymm0
  0.26%  │             │    0x00007fd040317e27: vaddps 0x10(%r8,%r10,4),%ymm0,%ymm0
  0.48%  │             │    0x00007fd040317e2e: vmovdqu %ymm0,0x10(%r11,%r10,4)       ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.18%  │             │    0x00007fd040317e35: add    $0x8,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
         │             │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.24%  │             │    0x00007fd040317e39: cmp    %ebx,%r10d
         ╰             │    0x00007fd040317e3c: jl     0x00007fd040317e20             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                       │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
                       │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    ↗  │↗   0x00007fd040317e3e: cmp    %edi,%r10d
          ╭         │  ││   0x00007fd040317e41: jge    0x00007fd040317e61
          │         │  ││   0x00007fd040317e43: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.44%   │↗        │  ││   0x00007fd040317e44: vmovss 0x10(%r9,%r10,4),%xmm1
          ││        │  ││   0x00007fd040317e4b: vaddss 0x10(%r8,%r10,4),%xmm1,%xmm0
  0.85%   ││        │  ││   0x00007fd040317e52: vmovss %xmm0,0x10(%r11,%r10,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  1.01%   ││        │  ││   0x00007fd040317e59: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
          ││        │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
          ││        │  ││   0x00007fd040317e5c: cmp    %edi,%r10d
          │╰        │  ││   0x00007fd040317e5f: jl     0x00007fd040317e44             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
          │         │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
          ↘         │  ││   0x00007fd040317e61: mov    %rdx,0x40(%rsp)                ;*invokevirtual verticalSum {reexecute=0 rethrow=0 return_oop=0}
                    │  ││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  ││↗  0x00007fd040317e66: mov    %rcx,%rdx
  0.16%             │  │││  0x00007fd040317e69: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007fd040317e6d: mov    (%rsp),%rsi
                    │  │││  0x00007fd040317e71: data16 xchg %ax,%ax
                    │  │││  0x00007fd040317e74: vzeroupper 
  0.20%             │  │││  0x00007fd040317e77: callq  0x00007fd040299900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                    │  │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@22 (line 145)
                    │  │││                                                            ;   {optimized virtual_call}
                    │  │││  0x00007fd040317e7c: mov    0x40(%rsp),%rdx
  0.16%             │  │││  0x00007fd040317e81: movzbl 0x94(%rdx),%r10d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007fd040317e89: mov    0x108(%r15),%r11
                    │  │││  0x00007fd040317e90: add    $0x1,%rbp                      ; ImmutableOopMap{rdx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                    │  │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@35 (line 147)
  0.18%             │  │││  0x00007fd040317e94: test   %eax,(%r11)                    ;   {poll}
                    │  │││  0x00007fd040317e97: test   %r10d,%r10d
                    │  │││  0x00007fd040317e9a: jne    0x00007fd040317de7             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@38 (line 148)
                    │  │││  0x00007fd040317ea0: mov    0x50(%rsp),%r10
                    │  │││  0x00007fd040317ea5: mov    0x20(%r10),%ecx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@11 (line 108)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.16%             │  │││  0x00007fd040317ea9: mov    0xc(%r10),%edi                 ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@4 (line 107)
                    │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
                    │  │││  0x00007fd040317ead: test   %edi,%edi
            ╭       │  │││  0x00007fd040317eaf: jle    0x00007fd04031800d             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │       │  │││  0x00007fd040317eb5: mov    0x18(%r10),%r9d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@16 (line 108)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │       │  │││  0x00007fd040317eb9: mov    0xc(%r12,%r9,8),%r11d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@20 (line 108)
            │       │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │       │  │││                                                            ; implicit exception: dispatches to 0x00007fd040318017
  0.10%     │       │  │││  0x00007fd040317ebe: test   %r11d,%r11d
            │╭      │  │││  0x00007fd040317ec1: jbe    0x00007fd040318017
            ││      │  │││  0x00007fd040317ec7: movslq %r11d,%r10
            ││      │  │││  0x00007fd040317eca: movslq %edi,%r11
            ││      │  │││  0x00007fd040317ecd: dec    %r11
  0.28%     ││      │  │││  0x00007fd040317ed0: cmp    %r10,%r11
            ││╭     │  │││  0x00007fd040317ed3: jae    0x00007fd040318017
            │││     │  │││  0x00007fd040317ed9: mov    0x50(%rsp),%r10
            │││     │  │││  0x00007fd040317ede: mov    0x1c(%r10),%ebx                ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@22 (line 108)
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││     │  │││  0x00007fd040317ee2: mov    0xc(%r12,%rbx,8),%r8d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@26 (line 108)
            │││     │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││     │  │││                                                            ; implicit exception: dispatches to 0x00007fd040318017
  0.12%     │││     │  │││  0x00007fd040317ee7: test   %r8d,%r8d
            │││╭    │  │││  0x00007fd040317eea: jbe    0x00007fd040318017
            ││││    │  │││  0x00007fd040317ef0: movslq %r8d,%r10
            ││││    │  │││  0x00007fd040317ef3: cmp    %r10,%r11
            ││││╭   │  │││  0x00007fd040317ef6: jae    0x00007fd040318017
            │││││   │  │││  0x00007fd040317efc: mov    0xc(%r12,%rcx,8),%r10d         ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││   │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││   │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││   │  │││                                                            ; implicit exception: dispatches to 0x00007fd040318017
  0.12%     │││││   │  │││  0x00007fd040317f01: test   %r10d,%r10d
            │││││╭  │  │││  0x00007fd040317f04: jbe    0x00007fd040318017
            ││││││  │  │││  0x00007fd040317f0a: movslq %r10d,%r10
            ││││││  │  │││  0x00007fd040317f0d: cmp    %r10,%r11
            ││││││╭ │  │││  0x00007fd040317f10: jae    0x00007fd040318017
            │││││││ │  │││  0x00007fd040317f16: lea    (%r12,%rcx,8),%r11
  0.14%     │││││││ │  │││  0x00007fd040317f1a: lea    (%r12,%r9,8),%r8
            │││││││ │  │││  0x00007fd040317f1e: mov    %r11d,%r10d
            │││││││ │  │││  0x00007fd040317f21: lea    (%r12,%rbx,8),%r9
  0.02%     │││││││ │  │││  0x00007fd040317f25: shr    $0x2,%r10d
  0.10%     │││││││ │  │││  0x00007fd040317f29: and    $0x7,%r10d
            │││││││ │  │││  0x00007fd040317f2d: mov    $0x3,%ebx
            │││││││ │  │││  0x00007fd040317f32: sub    %r10d,%ebx
            │││││││ │  │││  0x00007fd040317f35: and    $0x7,%ebx
  0.08%     │││││││ │  │││  0x00007fd040317f38: inc    %ebx
            │││││││ │  │││  0x00007fd040317f3a: cmp    %edi,%ebx
            │││││││ │  │││  0x00007fd040317f3c: cmovg  %edi,%ebx
  0.04%     │││││││ │  │││  0x00007fd040317f3f: xor    %r10d,%r10d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.16%     │││││││↗│  │││  0x00007fd040317f42: vmovss 0x10(%r9,%r10,4),%xmm0
            │││││││││  │││  0x00007fd040317f49: vaddss 0x10(%r8,%r10,4),%xmm0,%xmm1
  0.20%     │││││││││  │││  0x00007fd040317f50: vmovss %xmm1,0x10(%r11,%r10,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.12%     │││││││││  │││  0x00007fd040317f57: inc    %r10d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
            │││││││││  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.02%     │││││││││  │││  0x00007fd040317f5a: cmp    %ebx,%r10d
            │││││││╰│  │││  0x00007fd040317f5d: jl     0x00007fd040317f42             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@7 (line 107)
            │││││││ │  │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.10%     │││││││ │  │││  0x00007fd040317f5f: mov    %edi,%ebx
            │││││││ │  │││  0x00007fd040317f61: add    $0xffffffe1,%ebx
            │││││││ │  │││  0x00007fd040317f64: cmp    %ebx,%edi
  0.02%     │││││││ │  │││  0x00007fd040317f66: mov    $0x80000000,%esi
  0.08%     │││││││ │  │││  0x00007fd040317f6b: cmovl  %esi,%ebx
            │││││││ │  │││  0x00007fd040317f6e: cmp    %ebx,%r10d
            │││││││ ╰  │││  0x00007fd040317f71: jge    0x00007fd040317e3e
            │││││││    │││  0x00007fd040317f77: nopw   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
            │││││││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@10 (line 108)
            │││││││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.02%     │││││││  ↗↗│││  0x00007fd040317f80: vmovdqu 0x10(%r9,%r10,4),%ymm0
  0.52%     │││││││  │││││  0x00007fd040317f87: vaddps 0x10(%r8,%r10,4),%ymm0,%ymm0
  9.00%     │││││││  │││││  0x00007fd040317f8e: vmovdqu %ymm0,0x10(%r11,%r10,4)
  4.64%     │││││││  │││││  0x00007fd040317f95: movslq %r10d,%rsi
  0.04%     │││││││  │││││  0x00007fd040317f98: vmovdqu 0x30(%r9,%rsi,4),%ymm0
 16.44%     │││││││  │││││  0x00007fd040317f9f: vaddps 0x30(%r8,%rsi,4),%ymm0,%ymm0
 13.11%     │││││││  │││││  0x00007fd040317fa6: vmovdqu %ymm0,0x30(%r11,%rsi,4)
  1.96%     │││││││  │││││  0x00007fd040317fad: vmovdqu 0x50(%r9,%rsi,4),%ymm0
  4.34%     │││││││  │││││  0x00007fd040317fb4: vaddps 0x50(%r8,%rsi,4),%ymm0,%ymm0
 10.05%     │││││││  │││││  0x00007fd040317fbb: vmovdqu %ymm0,0x50(%r11,%rsi,4)
  4.32%     │││││││  │││││  0x00007fd040317fc2: vmovdqu 0x70(%r9,%rsi,4),%ymm0
 12.16%     │││││││  │││││  0x00007fd040317fc9: vaddps 0x70(%r8,%rsi,4),%ymm0,%ymm0
  8.76%     │││││││  │││││  0x00007fd040317fd0: vmovdqu %ymm0,0x70(%r11,%rsi,4)       ;*fastore {reexecute=0 rethrow=0 return_oop=0}
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@28 (line 108)
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  4.74%     │││││││  │││││  0x00007fd040317fd7: add    $0x20,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@29 (line 107)
            │││││││  │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
  0.22%     │││││││  │││││  0x00007fd040317fdb: cmp    %ebx,%r10d
            │││││││  ╰││││  0x00007fd040317fde: jl     0x00007fd040317f80             ;*goto {reexecute=0 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││   ││││  0x00007fd040317fe0: mov    0x108(%r15),%r13               ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop rcx=NarrowOop rdx=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││││││   ││││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││   ││││  0x00007fd040317fe7: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSum@32 (line 107)
            │││││││   ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub@19 (line 145)
            │││││││   ││││                                                            ;   {poll}
  0.06%     │││││││   ││││  0x00007fd040317feb: cmp    %ebx,%r10d
            │││││││   ╰│││  0x00007fd040317fee: jl     0x00007fd040317f80
            │││││││    │││  0x00007fd040317ff0: mov    %edi,%ebx
            │││││││    │││  0x00007fd040317ff2: add    $0xfffffff9,%ebx
            │││││││    │││  0x00007fd040317ff5: cmp    %ebx,%edi
  0.24%     │││││││    │││  0x00007fd040317ff7: mov    $0x80000000,%esi
            │││││││    │││  0x00007fd040317ffc: cmovl  %esi,%ebx
            │││││││    │││  0x00007fd040317fff: cmp    %ebx,%r10d
            │││││││    ╰││  0x00007fd040318002: jl     0x00007fd040317e20
            │││││││     ╰│  0x00007fd040318008: jmpq   0x00007fd040317e3e
            ↘││││││      │  0x00007fd04031800d: mov    %rdx,0x40(%rsp)
             ││││││      ╰  0x00007fd040318012: jmpq   0x00007fd040317e66
             ↘↘↘↘↘↘         0x00007fd040318017: mov    $0xffffff7e,%esi
                            0x00007fd04031801c: mov    %rdx,0x40(%rsp)
                            0x00007fd040318021: mov    %edi,0x18(%rsp)
                            0x00007fd040318025: data16 xchg %ax,%ax
....................................................................................................
 96.65%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.65%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 (471 bytes) 
  1.98%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.87%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (75 bytes) 
  0.14%   [kernel.kallsyms]  [unknown] (13 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%           libjvm.so  _ZN15ClassFileParser19parse_constant_poolEPK15ClassFileStreamP12ConstantPooliP6Thread.part.118 (0 bytes) 
  0.02%           libjvm.so  _ZN10Dictionary4findEjP6Symbol6Handle (0 bytes) 
  0.02%           libjvm.so  _ZNK13InstanceKlass22uncached_lookup_methodEPK6SymbolS2_N5Klass18OverpassLookupModeENS3_17PrivateLookupModeE (0 bytes) 
  0.02%           libjvm.so  _ZN18InterpreterRuntime19prepare_native_callEP10JavaThreadP6Method (0 bytes) 
  0.02%  <...other 1 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.65%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSum_jmhTest::verticalSum_thrpt_jmhStub, version 129 
  2.36%   [kernel.kallsyms]  [unknown] 
  0.87%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
  0.02%           libjvm.so  _ZN15ClassFileParser19parse_constant_poolEPK15ClassFileStreamP12ConstantPooliP6Thread.part.118 
  0.02%           libjvm.so  _ZNK13InstanceKlass22uncached_lookup_methodEPK6SymbolS2_N5Klass18OverpassLookupModeENS3_17PrivateLookupModeE 
  0.02%           libjvm.so  _ZN17PackageEntryTable11lookup_onlyEP6Symbol 
  0.02%           libjvm.so  _ZN10Dictionary4findEjP6Symbol6Handle 
  0.02%           libjvm.so  _ZN18InterpreterRuntime19prepare_native_callEP10JavaThreadP6Method 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.52%                  c2
  2.36%   [kernel.kallsyms]
  0.10%           libjvm.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBuffer
# Parameters: (probabilityOfNaN = 0, size = 1024)

# Run progress: 11.11% complete, ETA 00:14:33
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1129.519 ops/ms
# Warmup Iteration   2: 1188.344 ops/ms
# Warmup Iteration   3: 1292.205 ops/ms
# Warmup Iteration   4: 1298.616 ops/ms
# Warmup Iteration   5: 1302.239 ops/ms
Iteration   1: 1303.049 ops/ms
Iteration   2: 1303.454 ops/ms
Iteration   3: 1290.654 ops/ms
Iteration   4: 1297.793 ops/ms
Iteration   5: 1293.311 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 12.35% complete, ETA 00:14:21
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1154.332 ops/ms
# Warmup Iteration   2: 1190.742 ops/ms
# Warmup Iteration   3: 1289.374 ops/ms
# Warmup Iteration   4: 1301.790 ops/ms
# Warmup Iteration   5: 1300.028 ops/ms
Iteration   1: 1291.676 ops/ms
Iteration   2: 1312.269 ops/ms
Iteration   3: 1307.963 ops/ms
Iteration   4: 1301.722 ops/ms
Iteration   5: 1298.297 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 13.58% complete, ETA 00:14:08
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1140.325 ops/ms
# Warmup Iteration   2: 1185.884 ops/ms
# Warmup Iteration   3: 1270.297 ops/ms
# Warmup Iteration   4: 1258.808 ops/ms
# Warmup Iteration   5: 1295.645 ops/ms
Iteration   1: 1266.290 ops/ms
Iteration   2: 1288.785 ops/ms
Iteration   3: 1288.609 ops/ms
Iteration   4: 1285.671 ops/ms
Iteration   5: 1292.255 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBuffer":
  1294.787 ±(99.9%) 11.769 ops/ms [Average]
  (min, avg, max) = (1266.290, 1294.787, 1312.269), stdev = 11.009
  CI (99.9%): [1283.017, 1306.556] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBuffer:·asm":
PrintAssembly processed: 53079 total address lines.
Perf output processed (skipped 6.613 seconds):
 Column 1: cycles (5072 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (804 bytes) 

                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007ff4636a2f3f: movzbl 0x29(%rbx),%r11d
                0x00007ff4636a2f44: test   %r11d,%r11d
                0x00007ff4636a2f47: jne    0x00007ff4636a3312
                0x00007ff4636a2f4d: mov    0x8(%r12,%r8,8),%r10d          ; implicit exception: dispatches to 0x00007ff4636a3312
                0x00007ff4636a2f52: cmp    $0x2c20c,%r10d                 ;   {metadata(&apos;java/nio/DirectByteBuffer&apos;)}
                0x00007ff4636a2f59: jne    0x00007ff4636a3312
                0x00007ff4636a2f5f: lea    (%r12,%r8,8),%r10              ;*invokevirtual putFloat {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%         0x00007ff4636a2f63: movzbl 0x29(%r10),%r11d
                0x00007ff4636a2f68: test   %r11d,%r11d
                0x00007ff4636a2f6b: jne    0x00007ff4636a3312
                0x00007ff4636a2f71: cmp    $0x7ffffffe,%r13d
                0x00007ff4636a2f78: jg     0x00007ff4636a32d5             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007ff4636a2f7e: vmovd  %r8d,%xmm1
  0.04%         0x00007ff4636a2f83: vmovq  %rbp,%xmm0
                0x00007ff4636a2f88: mov    %rcx,0x70(%rsp)
                0x00007ff4636a2f8d: mov    0x10(%r10),%r11
                0x00007ff4636a2f91: vmovq  %r10,%xmm4
  0.04%         0x00007ff4636a2f96: mov    %r11,%rbp                      ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
                                                                          ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
                                                                          ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007ff4636a2f99: mov    0x1c(%rdi),%r9d                ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.nio.Buffer::checkIndex@6 (line 687)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007ff4636a2f9d: mov    0x10(%rdi),%r10
                0x00007ff4636a2fa1: vmovq  %rdi,%xmm2
  0.06%         0x00007ff4636a2fa6: mov    %r10,%rcx                      ;*invokevirtual getIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.misc.Unsafe::getIntUnaligned@5 (line 3446)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@9 (line 943)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007ff4636a2fa9: vmovd  %r9d,%xmm6
                0x00007ff4636a2fae: neg    %r9d
                0x00007ff4636a2fb1: mov    0x1c(%rbx),%edi                ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.nio.Buffer::checkIndex@6 (line 687)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%         0x00007ff4636a2fb4: vmovq  %rbx,%xmm3
                0x00007ff4636a2fb9: mov    %r9d,%r11d
                0x00007ff4636a2fbc: sar    $0x1f,%r11d
                0x00007ff4636a2fc0: and    %r9d,%r11d
                0x00007ff4636a2fc3: mov    $0x80000001,%r10d
                0x00007ff4636a2fc9: sub    %r11d,%r10d
                0x00007ff4636a2fcc: vmovd  %edi,%xmm5
                0x00007ff4636a2fd0: neg    %edi
  0.02%         0x00007ff4636a2fd2: mov    0x10(%rbx),%r11
                0x00007ff4636a2fd6: mov    %r11,%rbx                      ;*invokevirtual getIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.misc.Unsafe::getIntUnaligned@5 (line 3446)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@9 (line 943)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007ff4636a2fd9: mov    %edi,%r8d
                0x00007ff4636a2fdc: sar    $0x1f,%r8d
  0.02%         0x00007ff4636a2fe0: and    %edi,%r8d
                0x00007ff4636a2fe3: mov    $0x80000001,%r11d
                0x00007ff4636a2fe9: sub    %r8d,%r11d
                0x00007ff4636a2fec: cmp    %r11d,%r10d
  0.06%         0x00007ff4636a2fef: cmovl  %r11d,%r10d
                0x00007ff4636a2ff3: vmovq  %xmm4,%r11
                0x00007ff4636a2ff8: mov    0x1c(%r11),%r14d               ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.nio.Buffer::checkIndex@6 (line 687)
                                                                          ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007ff4636a2ffc: mov    %r14d,%edx
  0.02%         0x00007ff4636a2fff: neg    %edx
                0x00007ff4636a3001: mov    %edx,%r8d
                0x00007ff4636a3004: sar    $0x1f,%r8d
                0x00007ff4636a3008: and    %edx,%r8d
  0.08%         0x00007ff4636a300b: mov    $0x80000001,%eax
                0x00007ff4636a3010: sub    %r8d,%eax
                0x00007ff4636a3013: cmp    %r10d,%eax
                0x00007ff4636a3016: cmovl  %r10d,%eax
  0.12%         0x00007ff4636a301a: mov    $0x2,%r10d
                0x00007ff4636a3020: cmp    %r10d,%eax
                0x00007ff4636a3023: mov    $0x2,%r11d
                0x00007ff4636a3029: cmovl  %r11d,%eax
  0.12%         0x00007ff4636a302d: cmp    %r13d,%eax
                0x00007ff4636a3030: cmovg  %r13d,%eax
                0x00007ff4636a3034: xor    %r10d,%r10d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         ↗      0x00007ff4636a3037: vmovd  %xmm6,%r8d
  0.02%  │      0x00007ff4636a303c: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@10 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007ff4636a303f: cmp    $0x4,%r8d
         │      0x00007ff4636a3043: jl     0x00007ff4636a334e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@11 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007ff4636a3049: vmovd  %xmm5,%r8d
         │      0x00007ff4636a304e: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@10 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%  │      0x00007ff4636a3051: movslq %r10d,%r11                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.DirectByteBuffer::ix@5 (line 258)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007ff4636a3054: mov    (%rcx,%r11,1),%esi
         │      0x00007ff4636a3058: vmovd  %esi,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007ff4636a305c: cmp    $0x4,%r8d
         │      0x00007ff4636a3060: jl     0x00007ff4636a33b2             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@11 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%  │      0x00007ff4636a3066: mov    (%rbx,%r11,1),%esi
         │      0x00007ff4636a306a: mov    %r14d,%r8d
         │      0x00007ff4636a306d: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@10 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007ff4636a3070: vmovd  %esi,%xmm7
  0.06%  │      0x00007ff4636a3074: vaddss %xmm8,%xmm7,%xmm8              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007ff4636a3079: cmp    $0x4,%r8d
         │      0x00007ff4636a307d: jl     0x00007ff4636a33fe             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@11 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007ff4636a3083: vmovd  %xmm8,%r8d
         │      0x00007ff4636a3088: mov    %r8d,0x0(%rbp,%r11,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%  │      0x00007ff4636a308d: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007ff4636a3091: cmp    %eax,%r10d
         ╰      0x00007ff4636a3094: jl     0x00007ff4636a3037             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007ff4636a3096: mov    $0xfffffffc,%r8d
                0x00007ff4636a309c: sub    %edx,%r8d
  0.04%         0x00007ff4636a309f: mov    $0xfffffffc,%r11d
                0x00007ff4636a30a5: sub    %r9d,%r11d
                0x00007ff4636a30a8: mov    $0xfffffffc,%edx
                0x00007ff4636a30ad: sub    %edi,%edx
  0.04%         0x00007ff4636a30af: inc    %r8d
                0x00007ff4636a30b2: inc    %edx
                0x00007ff4636a30b4: inc    %r11d
                0x00007ff4636a30b7: cmp    %r11d,%edx
  0.06%         0x00007ff4636a30ba: cmovg  %r11d,%edx
                0x00007ff4636a30be: cmp    %edx,%r8d
                0x00007ff4636a30c1: cmovg  %edx,%r8d
                0x00007ff4636a30c5: cmp    %r13d,%r8d
                0x00007ff4636a30c8: cmovg  %r13d,%r8d
                0x00007ff4636a30cc: mov    %r8d,%edx
                0x00007ff4636a30cf: add    $0xfffffff2,%edx
                0x00007ff4636a30d2: cmp    %edx,%r8d
  0.02%         0x00007ff4636a30d5: mov    $0x80000000,%r8d
                0x00007ff4636a30db: cmovl  %r8d,%edx
                0x00007ff4636a30df: cmp    %edx,%r10d
          ╭     0x00007ff4636a30e2: jge    0x00007ff4636a3223
          │     0x00007ff4636a30e8: nopl   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
          │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.76%   │↗↗   0x00007ff4636a30f0: movslq %r10d,%r8
  0.02%   │││   0x00007ff4636a30f3: movslq %r10d,%rsi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │││                                                             ; - java.nio.DirectByteBuffer::ix@5 (line 258)
          │││                                                             ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.90%   │││   0x00007ff4636a30f6: mov    %rcx,%r11
  0.08%   │││   0x00007ff4636a30f9: add    %r8,%r11
  2.58%   │││   0x00007ff4636a30fc: mov    (%rbx,%rsi,1),%r9d
  0.06%   │││   0x00007ff4636a3100: vmovd  %r9d,%xmm7
  2.82%   │││   0x00007ff4636a3105: mov    (%rcx,%rsi,1),%r9d
  0.12%   │││   0x00007ff4636a3109: vmovd  %r9d,%xmm9
  2.72%   │││   0x00007ff4636a310e: vaddss %xmm7,%xmm9,%xmm7
  0.02%   │││   0x00007ff4636a3112: mov    %rbx,%r9
  2.43%   │││   0x00007ff4636a3115: add    %r8,%r9
  0.12%   │││   0x00007ff4636a3118: mov    %rbp,%rdi
  2.43%   │││   0x00007ff4636a311b: add    %r8,%rdi
  0.12%   │││   0x00007ff4636a311e: vmovd  %xmm7,%r8d
  2.90%   │││   0x00007ff4636a3123: mov    %r8d,0x0(%rbp,%rsi,1)
  0.18%   │││   0x00007ff4636a3128: mov    0x2(%r9),%r8d
  2.68%   │││   0x00007ff4636a312c: vmovd  %r8d,%xmm8
  0.10%   │││   0x00007ff4636a3131: mov    0x2(%r11),%r8d
  2.76%   │││   0x00007ff4636a3135: vmovd  %r8d,%xmm7
  0.18%   │││   0x00007ff4636a313a: vaddss %xmm7,%xmm8,%xmm8
  2.60%   │││   0x00007ff4636a313e: vmovd  %xmm8,%r8d
  0.06%   │││   0x00007ff4636a3143: mov    %r8d,0x2(%rdi)
  2.54%   │││   0x00007ff4636a3147: mov    0x4(%r11),%r8d
  0.08%   │││   0x00007ff4636a314b: vmovd  %r8d,%xmm7
  2.48%   │││   0x00007ff4636a3150: mov    0x4(%r9),%r8d
  0.02%   │││   0x00007ff4636a3154: vmovd  %r8d,%xmm9
  2.37%   │││   0x00007ff4636a3159: vaddss %xmm9,%xmm7,%xmm7
  0.12%   │││   0x00007ff4636a315e: vmovd  %xmm7,%r8d
  2.88%   │││   0x00007ff4636a3163: mov    %r8d,0x4(%rdi)
  0.18%   │││   0x00007ff4636a3167: mov    0x6(%r9),%r8d
  2.66%   │││   0x00007ff4636a316b: vmovd  %r8d,%xmm8
  0.08%   │││   0x00007ff4636a3170: mov    0x6(%r11),%r8d
  2.98%   │││   0x00007ff4636a3174: vmovd  %r8d,%xmm7
  0.14%   │││   0x00007ff4636a3179: vaddss %xmm7,%xmm8,%xmm8
  2.50%   │││   0x00007ff4636a317d: vmovd  %xmm8,%r8d
  0.08%   │││   0x00007ff4636a3182: mov    %r8d,0x6(%rdi)
  2.41%   │││   0x00007ff4636a3186: mov    0x8(%r11),%r8d
  0.04%   │││   0x00007ff4636a318a: vmovd  %r8d,%xmm7
  2.54%   │││   0x00007ff4636a318f: mov    0x8(%r9),%r8d
          │││   0x00007ff4636a3193: vmovd  %r8d,%xmm9
  2.92%   │││   0x00007ff4636a3198: vaddss %xmm9,%xmm7,%xmm7
  0.06%   │││   0x00007ff4636a319d: vmovd  %xmm7,%r8d
  2.86%   │││   0x00007ff4636a31a2: mov    %r8d,0x8(%rdi)
  0.14%   │││   0x00007ff4636a31a6: mov    0xa(%r9),%r8d
  2.44%   │││   0x00007ff4636a31aa: vmovd  %r8d,%xmm8
  0.04%   │││   0x00007ff4636a31af: mov    0xa(%r11),%r8d
  2.60%   │││   0x00007ff4636a31b3: vmovd  %r8d,%xmm7
  0.14%   │││   0x00007ff4636a31b8: vaddss %xmm7,%xmm8,%xmm8
  2.37%   │││   0x00007ff4636a31bc: vmovd  %xmm8,%r8d
  0.04%   │││   0x00007ff4636a31c1: mov    %r8d,0xa(%rdi)
  3.06%   │││   0x00007ff4636a31c5: mov    0xc(%r11),%r8d
  0.14%   │││   0x00007ff4636a31c9: vmovd  %r8d,%xmm7
  2.94%   │││   0x00007ff4636a31ce: mov    0xc(%r9),%r8d
  0.10%   │││   0x00007ff4636a31d2: vmovd  %r8d,%xmm9
  2.78%   │││   0x00007ff4636a31d7: vaddss %xmm9,%xmm7,%xmm7
  0.24%   │││   0x00007ff4636a31dc: vmovd  %xmm7,%r8d
  2.50%   │││   0x00007ff4636a31e1: mov    %r8d,0xc(%rdi)
  1.30%   │││   0x00007ff4636a31e5: mov    0xe(%r11),%eax
  2.78%   │││   0x00007ff4636a31e9: vmovd  %eax,%xmm8
  0.04%   │││   0x00007ff4636a31ed: mov    0xe(%r9),%r11d
  2.82%   │││   0x00007ff4636a31f1: vmovd  %r11d,%xmm7
  0.26%   │││   0x00007ff4636a31f6: vaddss %xmm7,%xmm8,%xmm8
  2.76%   │││   0x00007ff4636a31fa: vmovd  %xmm8,%r8d
  0.02%   │││   0x00007ff4636a31ff: mov    %r8d,0xe(%rdi)                 ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
          │││                                                             ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
          │││                                                             ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
          │││                                                             ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.94%   │││   0x00007ff4636a3203: add    $0x10,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%   │││   0x00007ff4636a3207: cmp    %edx,%r10d
          │╰│   0x00007ff4636a320a: jl     0x00007ff4636a30f0             ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │ │   0x00007ff4636a3210: mov    0x108(%r15),%r11               ; ImmutableOopMap{xmm1=NarrowOop xmm2=Oop xmm3=Oop xmm4=Oop [112]=Oop [128]=Oop [0]=Oop [16]=Oop [24]=Oop }
          │ │                                                             ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │ │   0x00007ff4636a3217: test   %eax,(%r11)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │ │                                                             ;   {poll}
  0.47%   │ │   0x00007ff4636a321a: cmp    %edx,%r10d
          │ ╰   0x00007ff4636a321d: jl     0x00007ff4636a30f0
          ↘     0x00007ff4636a3223: cmp    %r13d,%r10d
                0x00007ff4636a3226: jge    0x00007ff4636a2ea5             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%      ↗  0x00007ff4636a322c: vmovd  %xmm6,%r8d
  0.04%      │  0x00007ff4636a3231: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.14%      │  0x00007ff4636a3234: cmp    $0x4,%r8d
             │  0x00007ff4636a3238: jl     0x00007ff4636a334e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%      │  0x00007ff4636a323e: vmovd  %xmm5,%r8d
  0.16%      │  0x00007ff4636a3243: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%      │  0x00007ff4636a3246: movslq %r10d,%rdi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%      │  0x00007ff4636a3249: mov    (%rcx,%rdi,1),%r9d
  0.04%      │  0x00007ff4636a324d: vmovd  %r9d,%xmm7                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%      │  0x00007ff4636a3252: cmp    $0x4,%r8d
             │  0x00007ff4636a3256: jl     0x00007ff4636a33b8             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%      │  0x00007ff4636a325c: mov    (%rbx,%rdi,1),%r11d
  0.08%      │  0x00007ff4636a3260: mov    %r14d,%r8d
  0.10%      │  0x00007ff4636a3263: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.12%      │  0x00007ff4636a3266: vmovd  %r11d,%xmm9
  0.12%      │  0x00007ff4636a326b: vaddss %xmm7,%xmm9,%xmm7              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%      │  0x00007ff4636a326f: cmp    $0x4,%r8d
             │  0x00007ff4636a3273: jl     0x00007ff4636a3404             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%      │  0x00007ff4636a3279: vmovd  %xmm7,%r8d
  0.14%      │  0x00007ff4636a327e: mov    %r8d,0x0(%rbp,%rdi,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%      │  0x00007ff4636a3283: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%      │  0x00007ff4636a3287: cmp    %r13d,%r10d
             ╰  0x00007ff4636a328a: jl     0x00007ff4636a322c             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007ff4636a328c: jmpq   0x00007ff4636a2ea5
                0x00007ff4636a3291: mov    %rcx,0x70(%rsp)
                0x00007ff4636a3296: jmpq   0x00007ff4636a2eaf
                0x00007ff4636a329b: mov    $0x1,%ebp                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@38 (line 148)
....................................................................................................
 96.27%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.27%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (804 bytes) 
  1.93%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.65%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.26%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (40 bytes) 
  0.22%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 (63 bytes) 
  0.12%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (53 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (27 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (15 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.14%  <...other 7 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.65%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 
  3.04%   [kernel.kallsyms]  [unknown] 
  0.22%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 
  0.02%         interpreter  ireturn  172 ireturn  
  0.02%           libjvm.so  _ZN2os13javaTimeNanosEv 
  0.02%           libjvm.so  _ZN12PeriodicTask14real_time_tickEi 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.87%                  c2
  3.04%   [kernel.kallsyms]
  0.06%           libjvm.so
  0.02%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53084 total address lines.
Perf output processed (skipped 6.672 seconds):
 Column 1: cycles (5093 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (716 bytes) 

                0x00007f36d4525529: vmovd  %r9d,%xmm6
                0x00007f36d452552e: neg    %r9d
                0x00007f36d4525531: mov    0x1c(%rbx),%edi                ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.nio.Buffer::checkIndex@6 (line 687)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007f36d4525534: vmovq  %rbx,%xmm3
                0x00007f36d4525539: mov    %r9d,%r11d
                0x00007f36d452553c: sar    $0x1f,%r11d
  0.02%         0x00007f36d4525540: and    %r9d,%r11d
                0x00007f36d4525543: mov    $0x80000001,%r10d
                0x00007f36d4525549: sub    %r11d,%r10d
                0x00007f36d452554c: vmovd  %edi,%xmm5
  0.06%         0x00007f36d4525550: neg    %edi
                0x00007f36d4525552: mov    0x10(%rbx),%r11
                0x00007f36d4525556: mov    %r11,%rbx                      ;*invokevirtual getIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.misc.Unsafe::getIntUnaligned@5 (line 3446)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@9 (line 943)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007f36d4525559: mov    %edi,%r8d
  0.02%         0x00007f36d452555c: sar    $0x1f,%r8d
  0.02%         0x00007f36d4525560: and    %edi,%r8d
                0x00007f36d4525563: mov    $0x80000001,%r11d
                0x00007f36d4525569: sub    %r8d,%r11d
                0x00007f36d452556c: cmp    %r11d,%r10d
                0x00007f36d452556f: cmovl  %r11d,%r10d
                0x00007f36d4525573: vmovq  %xmm4,%r11
                0x00007f36d4525578: mov    0x1c(%r11),%r14d               ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.nio.Buffer::checkIndex@6 (line 687)
                                                                          ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%         0x00007f36d452557c: mov    %r14d,%edx
                0x00007f36d452557f: neg    %edx
                0x00007f36d4525581: mov    %edx,%r8d
                0x00007f36d4525584: sar    $0x1f,%r8d
  0.02%         0x00007f36d4525588: and    %edx,%r8d
                0x00007f36d452558b: mov    $0x80000001,%eax
                0x00007f36d4525590: sub    %r8d,%eax
                0x00007f36d4525593: cmp    %r10d,%eax
  0.10%         0x00007f36d4525596: cmovl  %r10d,%eax
                0x00007f36d452559a: mov    $0x2,%r10d
                0x00007f36d45255a0: cmp    %r10d,%eax
                0x00007f36d45255a3: mov    $0x2,%r11d
  0.04%         0x00007f36d45255a9: cmovl  %r11d,%eax
  0.04%         0x00007f36d45255ad: cmp    %r13d,%eax
                0x00007f36d45255b0: cmovg  %r13d,%eax
                0x00007f36d45255b4: xor    %r10d,%r10d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%  ↗      0x00007f36d45255b7: vmovd  %xmm6,%r8d
         │      0x00007f36d45255bc: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@10 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007f36d45255bf: cmp    $0x4,%r8d
         │      0x00007f36d45255c3: jl     0x00007f36d45258ce             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@11 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007f36d45255c9: vmovd  %xmm5,%r8d
  0.02%  │      0x00007f36d45255ce: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@10 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007f36d45255d1: movslq %r10d,%r11                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.DirectByteBuffer::ix@5 (line 258)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007f36d45255d4: mov    (%rcx,%r11,1),%esi
         │      0x00007f36d45255d8: vmovd  %esi,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%  │      0x00007f36d45255dc: cmp    $0x4,%r8d
         │      0x00007f36d45255e0: jl     0x00007f36d4525932             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@11 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007f36d45255e6: mov    (%rbx,%r11,1),%esi
         │      0x00007f36d45255ea: mov    %r14d,%r8d
         │      0x00007f36d45255ed: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@10 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%  │      0x00007f36d45255f0: vmovd  %esi,%xmm7
  0.02%  │      0x00007f36d45255f4: vaddss %xmm8,%xmm7,%xmm8              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007f36d45255f9: cmp    $0x4,%r8d
  0.02%  │      0x00007f36d45255fd: jl     0x00007f36d452597e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@11 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007f36d4525603: vmovd  %xmm8,%r8d
  0.02%  │      0x00007f36d4525608: mov    %r8d,0x0(%rbp,%r11,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007f36d452560d: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007f36d4525611: cmp    %eax,%r10d
         ╰      0x00007f36d4525614: jl     0x00007f36d45255b7             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007f36d4525616: mov    $0xfffffffc,%r8d
  0.02%         0x00007f36d452561c: sub    %edx,%r8d
  0.02%         0x00007f36d452561f: mov    $0xfffffffc,%r11d
                0x00007f36d4525625: sub    %r9d,%r11d
                0x00007f36d4525628: mov    $0xfffffffc,%edx
  0.06%         0x00007f36d452562d: sub    %edi,%edx
  0.02%         0x00007f36d452562f: inc    %r8d
                0x00007f36d4525632: inc    %edx
                0x00007f36d4525634: inc    %r11d
                0x00007f36d4525637: cmp    %r11d,%edx
  0.02%         0x00007f36d452563a: cmovg  %r11d,%edx
                0x00007f36d452563e: cmp    %edx,%r8d
                0x00007f36d4525641: cmovg  %edx,%r8d
  0.02%         0x00007f36d4525645: cmp    %r13d,%r8d
  0.02%         0x00007f36d4525648: cmovg  %r13d,%r8d
                0x00007f36d452564c: mov    %r8d,%edx
                0x00007f36d452564f: add    $0xfffffff2,%edx
  0.02%         0x00007f36d4525652: cmp    %edx,%r8d
  0.02%         0x00007f36d4525655: mov    $0x80000000,%r8d
                0x00007f36d452565b: cmovl  %r8d,%edx
                0x00007f36d452565f: cmp    %edx,%r10d
          ╭     0x00007f36d4525662: jge    0x00007f36d45257a3
  0.02%   │     0x00007f36d4525668: nopl   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
          │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.49%   │↗↗   0x00007f36d4525670: movslq %r10d,%r8
  2.40%   │││   0x00007f36d4525673: movslq %r10d,%rsi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │││                                                             ; - java.nio.DirectByteBuffer::ix@5 (line 258)
          │││                                                             ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.61%   │││   0x00007f36d4525676: mov    %rcx,%r11
  2.22%   │││   0x00007f36d4525679: add    %r8,%r11
  0.45%   │││   0x00007f36d452567c: mov    (%rbx,%rsi,1),%r9d
  2.20%   │││   0x00007f36d4525680: vmovd  %r9d,%xmm7
  0.65%   │││   0x00007f36d4525685: mov    (%rcx,%rsi,1),%r9d
  2.26%   │││   0x00007f36d4525689: vmovd  %r9d,%xmm9
  0.53%   │││   0x00007f36d452568e: vaddss %xmm7,%xmm9,%xmm7
  2.28%   │││   0x00007f36d4525692: mov    %rbx,%r9
  0.49%   │││   0x00007f36d4525695: add    %r8,%r9
  2.38%   │││   0x00007f36d4525698: mov    %rbp,%rdi
  0.41%   │││   0x00007f36d452569b: add    %r8,%rdi
  2.30%   │││   0x00007f36d452569e: vmovd  %xmm7,%r8d
  0.61%   │││   0x00007f36d45256a3: mov    %r8d,0x0(%rbp,%rsi,1)
  2.42%   │││   0x00007f36d45256a8: mov    0x2(%r9),%r8d
  0.29%   │││   0x00007f36d45256ac: vmovd  %r8d,%xmm8
  2.32%   │││   0x00007f36d45256b1: mov    0x2(%r11),%r8d
  0.61%   │││   0x00007f36d45256b5: vmovd  %r8d,%xmm7
  2.81%   │││   0x00007f36d45256ba: vaddss %xmm7,%xmm8,%xmm8
  0.59%   │││   0x00007f36d45256be: vmovd  %xmm8,%r8d
  2.20%   │││   0x00007f36d45256c3: mov    %r8d,0x2(%rdi)
  0.53%   │││   0x00007f36d45256c7: mov    0x4(%r11),%r8d
  2.10%   │││   0x00007f36d45256cb: vmovd  %r8d,%xmm7
  0.51%   │││   0x00007f36d45256d0: mov    0x4(%r9),%r8d
  2.08%   │││   0x00007f36d45256d4: vmovd  %r8d,%xmm9
  0.55%   │││   0x00007f36d45256d9: vaddss %xmm9,%xmm7,%xmm7
  2.55%   │││   0x00007f36d45256de: vmovd  %xmm7,%r8d
  0.55%   │││   0x00007f36d45256e3: mov    %r8d,0x4(%rdi)
  2.18%   │││   0x00007f36d45256e7: mov    0x6(%r9),%r8d
  0.65%   │││   0x00007f36d45256eb: vmovd  %r8d,%xmm8
  2.12%   │││   0x00007f36d45256f0: mov    0x6(%r11),%r8d
  0.35%   │││   0x00007f36d45256f4: vmovd  %r8d,%xmm7
  2.12%   │││   0x00007f36d45256f9: vaddss %xmm7,%xmm8,%xmm8
  0.55%   │││   0x00007f36d45256fd: vmovd  %xmm8,%r8d
  2.22%   │││   0x00007f36d4525702: mov    %r8d,0x6(%rdi)
  0.67%   │││   0x00007f36d4525706: mov    0x8(%r11),%r8d
  2.26%   │││   0x00007f36d452570a: vmovd  %r8d,%xmm7
  0.53%   │││   0x00007f36d452570f: mov    0x8(%r9),%r8d
  1.92%   │││   0x00007f36d4525713: vmovd  %r8d,%xmm9
  0.59%   │││   0x00007f36d4525718: vaddss %xmm9,%xmm7,%xmm7
  1.94%   │││   0x00007f36d452571d: vmovd  %xmm7,%r8d
  0.49%   │││   0x00007f36d4525722: mov    %r8d,0x8(%rdi)
  2.47%   │││   0x00007f36d4525726: mov    0xa(%r9),%r8d
  0.39%   │││   0x00007f36d452572a: vmovd  %r8d,%xmm8
  2.47%   │││   0x00007f36d452572f: mov    0xa(%r11),%r8d
  0.61%   │││   0x00007f36d4525733: vmovd  %r8d,%xmm7
  2.12%   │││   0x00007f36d4525738: vaddss %xmm7,%xmm8,%xmm8
  0.47%   │││   0x00007f36d452573c: vmovd  %xmm8,%r8d
  2.16%   │││   0x00007f36d4525741: mov    %r8d,0xa(%rdi)
  0.49%   │││   0x00007f36d4525745: mov    0xc(%r11),%r8d
  2.36%   │││   0x00007f36d4525749: vmovd  %r8d,%xmm7
  0.65%   │││   0x00007f36d452574e: mov    0xc(%r9),%r8d
  2.32%   │││   0x00007f36d4525752: vmovd  %r8d,%xmm9
  0.43%   │││   0x00007f36d4525757: vaddss %xmm9,%xmm7,%xmm7
  2.20%   │││   0x00007f36d452575c: vmovd  %xmm7,%r8d
  0.47%   │││   0x00007f36d4525761: mov    %r8d,0xc(%rdi)
  3.53%   │││   0x00007f36d4525765: mov    0xe(%r11),%eax
  0.55%   │││   0x00007f36d4525769: vmovd  %eax,%xmm8
  2.18%   │││   0x00007f36d452576d: mov    0xe(%r9),%r11d
  0.55%   │││   0x00007f36d4525771: vmovd  %r11d,%xmm7
  2.55%   │││   0x00007f36d4525776: vaddss %xmm7,%xmm8,%xmm8
  0.55%   │││   0x00007f36d452577a: vmovd  %xmm8,%r8d
  2.18%   │││   0x00007f36d452577f: mov    %r8d,0xe(%rdi)                 ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
          │││                                                             ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
          │││                                                             ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
          │││                                                             ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.61%   │││   0x00007f36d4525783: add    $0x10,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.36%   │││   0x00007f36d4525787: cmp    %edx,%r10d
          │╰│   0x00007f36d452578a: jl     0x00007f36d4525670             ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │ │   0x00007f36d4525790: mov    0x108(%r15),%r11               ; ImmutableOopMap{xmm1=NarrowOop xmm2=Oop xmm3=Oop xmm4=Oop [112]=Oop [128]=Oop [0]=Oop [16]=Oop [24]=Oop }
          │ │                                                             ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%   │ │   0x00007f36d4525797: test   %eax,(%r11)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │ │                                                             ;   {poll}
  0.06%   │ │   0x00007f36d452579a: cmp    %edx,%r10d
          │ ╰   0x00007f36d452579d: jl     0x00007f36d4525670
          ↘     0x00007f36d45257a3: cmp    %r13d,%r10d
                0x00007f36d45257a6: jge    0x00007f36d4525425             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%      ↗  0x00007f36d45257ac: vmovd  %xmm6,%r8d
  0.10%      │  0x00007f36d45257b1: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%      │  0x00007f36d45257b4: cmp    $0x4,%r8d
             │  0x00007f36d45257b8: jl     0x00007f36d45258ce             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%      │  0x00007f36d45257be: vmovd  %xmm5,%r8d
  0.02%      │  0x00007f36d45257c3: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%      │  0x00007f36d45257c6: movslq %r10d,%rdi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%      │  0x00007f36d45257c9: mov    (%rcx,%rdi,1),%r9d
  0.12%      │  0x00007f36d45257cd: vmovd  %r9d,%xmm7                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%      │  0x00007f36d45257d2: cmp    $0x4,%r8d
             │  0x00007f36d45257d6: jl     0x00007f36d4525938             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%      │  0x00007f36d45257dc: mov    (%rbx,%rdi,1),%r11d
  0.10%      │  0x00007f36d45257e0: mov    %r14d,%r8d
  0.10%      │  0x00007f36d45257e3: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%      │  0x00007f36d45257e6: vmovd  %r11d,%xmm9
  0.04%      │  0x00007f36d45257eb: vaddss %xmm7,%xmm9,%xmm7              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%      │  0x00007f36d45257ef: cmp    $0x4,%r8d
             │  0x00007f36d45257f3: jl     0x00007f36d4525984             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%      │  0x00007f36d45257f9: vmovd  %xmm7,%r8d
  0.06%      │  0x00007f36d45257fe: mov    %r8d,0x0(%rbp,%rdi,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%      │  0x00007f36d4525803: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%      │  0x00007f36d4525807: cmp    %r13d,%r10d
             ╰  0x00007f36d452580a: jl     0x00007f36d45257ac             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%         0x00007f36d452580c: jmpq   0x00007f36d4525425
                0x00007f36d4525811: mov    %rcx,0x70(%rsp)
                0x00007f36d4525816: jmpq   0x00007f36d452542f
                0x00007f36d452581b: mov    $0x1,%ebp                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@38 (line 148)
                0x00007f36d4525820: movabs $0x7f36e5fc6f50,%r10
                0x00007f36d452582a: callq  *%r10                          ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@39 (line 148)
                0x00007f36d452582d: mov    0x80(%rsp),%r10
....................................................................................................
 95.94%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.94%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (716 bytes) 
  2.63%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.35%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (142 bytes) 
  0.29%   [kernel.kallsyms]  [unknown] (67 bytes) 
  0.14%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 (27 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (19 bytes) 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm (8 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.20%  <...other 10 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.35%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 
  3.30%   [kernel.kallsyms]  [unknown] 
  0.16%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%           libjvm.so  _ZNK8CodeBlob9is_zombieEv 
  0.02%           libjvm.so  _ZNK13InstanceKlass21should_be_initializedEv 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%  libpthread-2.23.so  __new_sem_wait_slow.constprop.0 
  0.02%           libjvm.so  _ZN2os12elapsedVTimeEv 
  0.02%           libjvm.so  _ZN12stringStreamC1Em 
  0.02%           libjvm.so  _ZN18HighResTimeSampler11take_sampleEv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.51%                  c2
  3.30%   [kernel.kallsyms]
  0.14%           libjvm.so
  0.02%  libpthread-2.23.so
  0.02%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53111 total address lines.
Perf output processed (skipped 6.690 seconds):
 Column 1: cycles (5075 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (545 bytes) 

                                                                         ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                                                                         ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007f0097adc9dc: cmp    $0x4,%r8d
               0x00007f0097adc9e0: jl     0x00007f0097adcd32             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.nio.Buffer::checkIndex@11 (line 687)
                                                                         ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%        0x00007f0097adc9e6: mov    (%rbx,%r11,1),%esi
               0x00007f0097adc9ea: mov    %r14d,%r8d
               0x00007f0097adc9ed: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.nio.Buffer::checkIndex@10 (line 687)
                                                                         ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007f0097adc9f0: vmovd  %esi,%xmm7
  0.04%        0x00007f0097adc9f4: vaddss %xmm8,%xmm7,%xmm8              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%        0x00007f0097adc9f9: cmp    $0x4,%r8d
               0x00007f0097adc9fd: jl     0x00007f0097adcd7e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.nio.Buffer::checkIndex@11 (line 687)
                                                                         ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007f0097adca03: vmovd  %xmm8,%r8d
               0x00007f0097adca08: mov    %r8d,0x0(%rbp,%r11,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
                                                                         ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
                                                                         ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%        0x00007f0097adca0d: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007f0097adca11: cmp    %eax,%r10d
               0x00007f0097adca14: jl     0x00007f0097adc9b7             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007f0097adca16: mov    $0xfffffffc,%r8d
               0x00007f0097adca1c: sub    %edx,%r8d
  0.08%        0x00007f0097adca1f: mov    $0xfffffffc,%r11d
               0x00007f0097adca25: sub    %r9d,%r11d
               0x00007f0097adca28: mov    $0xfffffffc,%edx
               0x00007f0097adca2d: sub    %edi,%edx
  0.06%        0x00007f0097adca2f: inc    %r8d
               0x00007f0097adca32: inc    %edx
               0x00007f0097adca34: inc    %r11d
               0x00007f0097adca37: cmp    %r11d,%edx
               0x00007f0097adca3a: cmovg  %r11d,%edx
               0x00007f0097adca3e: cmp    %edx,%r8d
               0x00007f0097adca41: cmovg  %edx,%r8d
               0x00007f0097adca45: cmp    %r13d,%r8d
  0.04%        0x00007f0097adca48: cmovg  %r13d,%r8d
               0x00007f0097adca4c: mov    %r8d,%edx
               0x00007f0097adca4f: add    $0xfffffff2,%edx
               0x00007f0097adca52: cmp    %edx,%r8d
  0.04%        0x00007f0097adca55: mov    $0x80000000,%r8d
               0x00007f0097adca5b: cmovl  %r8d,%edx
               0x00007f0097adca5f: cmp    %edx,%r10d
         ╭     0x00007f0097adca62: jge    0x00007f0097adcba3
         │     0x00007f0097adca68: nopl   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
         │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.82%  │↗↗   0x00007f0097adca70: movslq %r10d,%r8
  0.04%  │││   0x00007f0097adca73: movslq %r10d,%rsi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
         │││                                                             ; - java.nio.DirectByteBuffer::ix@5 (line 258)
         │││                                                             ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.76%  │││   0x00007f0097adca76: mov    %rcx,%r11
  0.06%  │││   0x00007f0097adca79: add    %r8,%r11
  2.86%  │││   0x00007f0097adca7c: mov    (%rbx,%rsi,1),%r9d
  0.04%  │││   0x00007f0097adca80: vmovd  %r9d,%xmm7
  2.36%  │││   0x00007f0097adca85: mov    (%rcx,%rsi,1),%r9d
  0.04%  │││   0x00007f0097adca89: vmovd  %r9d,%xmm9
  2.70%  │││   0x00007f0097adca8e: vaddss %xmm7,%xmm9,%xmm7
  0.18%  │││   0x00007f0097adca92: mov    %rbx,%r9
  2.70%  │││   0x00007f0097adca95: add    %r8,%r9
  0.10%  │││   0x00007f0097adca98: mov    %rbp,%rdi
  2.64%  │││   0x00007f0097adca9b: add    %r8,%rdi
  0.04%  │││   0x00007f0097adca9e: vmovd  %xmm7,%r8d
  2.64%  │││   0x00007f0097adcaa3: mov    %r8d,0x0(%rbp,%rsi,1)
  0.20%  │││   0x00007f0097adcaa8: mov    0x2(%r9),%r8d
  2.74%  │││   0x00007f0097adcaac: vmovd  %r8d,%xmm8
  0.02%  │││   0x00007f0097adcab1: mov    0x2(%r11),%r8d
  3.19%  │││   0x00007f0097adcab5: vmovd  %r8d,%xmm7
  0.14%  │││   0x00007f0097adcaba: vaddss %xmm7,%xmm8,%xmm8
  2.64%  │││   0x00007f0097adcabe: vmovd  %xmm8,%r8d
  0.04%  │││   0x00007f0097adcac3: mov    %r8d,0x2(%rdi)
  2.78%  │││   0x00007f0097adcac7: mov    0x4(%r11),%r8d
  0.12%  │││   0x00007f0097adcacb: vmovd  %r8d,%xmm7
  2.66%  │││   0x00007f0097adcad0: mov    0x4(%r9),%r8d
  0.04%  │││   0x00007f0097adcad4: vmovd  %r8d,%xmm9
  3.15%  │││   0x00007f0097adcad9: vaddss %xmm9,%xmm7,%xmm7
  0.02%  │││   0x00007f0097adcade: vmovd  %xmm7,%r8d
  2.86%  │││   0x00007f0097adcae3: mov    %r8d,0x4(%rdi)
  0.20%  │││   0x00007f0097adcae7: mov    0x6(%r9),%r8d
  2.58%  │││   0x00007f0097adcaeb: vmovd  %r8d,%xmm8
  0.04%  │││   0x00007f0097adcaf0: mov    0x6(%r11),%r8d
  2.46%  │││   0x00007f0097adcaf4: vmovd  %r8d,%xmm7
  0.04%  │││   0x00007f0097adcaf9: vaddss %xmm7,%xmm8,%xmm8
  2.36%  │││   0x00007f0097adcafd: vmovd  %xmm8,%r8d
  0.06%  │││   0x00007f0097adcb02: mov    %r8d,0x6(%rdi)
  2.96%  │││   0x00007f0097adcb06: mov    0x8(%r11),%r8d
  0.08%  │││   0x00007f0097adcb0a: vmovd  %r8d,%xmm7
  2.78%  │││   0x00007f0097adcb0f: mov    0x8(%r9),%r8d
  0.06%  │││   0x00007f0097adcb13: vmovd  %r8d,%xmm9
  2.66%  │││   0x00007f0097adcb18: vaddss %xmm9,%xmm7,%xmm7
  0.04%  │││   0x00007f0097adcb1d: vmovd  %xmm7,%r8d
  2.72%  │││   0x00007f0097adcb22: mov    %r8d,0x8(%rdi)
  0.22%  │││   0x00007f0097adcb26: mov    0xa(%r9),%r8d
  2.94%  │││   0x00007f0097adcb2a: vmovd  %r8d,%xmm8
  0.04%  │││   0x00007f0097adcb2f: mov    0xa(%r11),%r8d
  2.90%  │││   0x00007f0097adcb33: vmovd  %r8d,%xmm7
  0.12%  │││   0x00007f0097adcb38: vaddss %xmm7,%xmm8,%xmm8
  3.09%  │││   0x00007f0097adcb3c: vmovd  %xmm8,%r8d
  0.04%  │││   0x00007f0097adcb41: mov    %r8d,0xa(%rdi)
  2.29%  │││   0x00007f0097adcb45: mov    0xc(%r11),%r8d
  0.08%  │││   0x00007f0097adcb49: vmovd  %r8d,%xmm7
  2.94%  │││   0x00007f0097adcb4e: mov    0xc(%r9),%r8d
  0.16%  │││   0x00007f0097adcb52: vmovd  %r8d,%xmm9
  2.15%  │││   0x00007f0097adcb57: vaddss %xmm9,%xmm7,%xmm7
  0.12%  │││   0x00007f0097adcb5c: vmovd  %xmm7,%r8d
  2.54%  │││   0x00007f0097adcb61: mov    %r8d,0xc(%rdi)
  1.04%  │││   0x00007f0097adcb65: mov    0xe(%r11),%eax
  2.80%  │││   0x00007f0097adcb69: vmovd  %eax,%xmm8
  0.02%  │││   0x00007f0097adcb6d: mov    0xe(%r9),%r11d
  2.66%  │││   0x00007f0097adcb71: vmovd  %r11d,%xmm7
  0.18%  │││   0x00007f0097adcb76: vaddss %xmm7,%xmm8,%xmm8
  2.70%  │││   0x00007f0097adcb7a: vmovd  %xmm8,%r8d
  0.02%  │││   0x00007f0097adcb7f: mov    %r8d,0xe(%rdi)                 ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
         │││                                                             ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
         │││                                                             ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
         │││                                                             ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.94%  │││   0x00007f0097adcb83: add    $0x10,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.14%  │││   0x00007f0097adcb87: cmp    %edx,%r10d
         │╰│   0x00007f0097adcb8a: jl     0x00007f0097adca70             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │ │   0x00007f0097adcb90: mov    0x108(%r15),%r11               ; ImmutableOopMap{xmm1=NarrowOop xmm2=Oop xmm3=Oop xmm4=Oop [112]=Oop [128]=Oop [0]=Oop [16]=Oop [24]=Oop }
         │ │                                                             ;*goto {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │ │   0x00007f0097adcb97: test   %eax,(%r11)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │ │                                                             ;   {poll}
  0.59%  │ │   0x00007f0097adcb9a: cmp    %edx,%r10d
         │ ╰   0x00007f0097adcb9d: jl     0x00007f0097adca70
         ↘     0x00007f0097adcba3: cmp    %r13d,%r10d
               0x00007f0097adcba6: jge    0x00007f0097adc825             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%     ↗  0x00007f0097adcbac: vmovd  %xmm6,%r8d
  0.02%     │  0x00007f0097adcbb1: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%     │  0x00007f0097adcbb4: cmp    $0x4,%r8d
            │  0x00007f0097adcbb8: jl     0x00007f0097adccce             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.12%     │  0x00007f0097adcbbe: vmovd  %xmm5,%r8d
  0.06%     │  0x00007f0097adcbc3: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%     │  0x00007f0097adcbc6: movslq %r10d,%rdi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%     │  0x00007f0097adcbc9: mov    (%rcx,%rdi,1),%r9d
  0.10%     │  0x00007f0097adcbcd: vmovd  %r9d,%xmm7                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%     │  0x00007f0097adcbd2: cmp    $0x4,%r8d
            │  0x00007f0097adcbd6: jl     0x00007f0097adcd38             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
            │  0x00007f0097adcbdc: mov    (%rbx,%rdi,1),%r11d
  0.06%     │  0x00007f0097adcbe0: mov    %r14d,%r8d
  0.04%     │  0x00007f0097adcbe3: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.12%     │  0x00007f0097adcbe6: vmovd  %r11d,%xmm9
  0.02%     │  0x00007f0097adcbeb: vaddss %xmm7,%xmm9,%xmm7              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
            │  0x00007f0097adcbef: cmp    $0x4,%r8d
            │  0x00007f0097adcbf3: jl     0x00007f0097adcd84             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%     │  0x00007f0097adcbf9: vmovd  %xmm7,%r8d
            │  0x00007f0097adcbfe: mov    %r8d,0x0(%rbp,%rdi,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%     │  0x00007f0097adcc03: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.14%     │  0x00007f0097adcc07: cmp    %r13d,%r10d
            ╰  0x00007f0097adcc0a: jl     0x00007f0097adcbac             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007f0097adcc0c: jmpq   0x00007f0097adc825
               0x00007f0097adcc11: mov    %rcx,0x70(%rsp)
               0x00007f0097adcc16: jmpq   0x00007f0097adc82f
               0x00007f0097adcc1b: mov    $0x1,%ebp                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@38 (line 148)
....................................................................................................
 95.61%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.61%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (545 bytes) 
  2.56%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.61%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (156 bytes) 
  0.28%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (132 bytes) 
  0.22%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 (75 bytes) 
  0.16%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (15 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (3 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (8 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         classes.jsa  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%       perf-5480.map  [unknown] (0 bytes) 
  0.02%           libjvm.so  _ZN12ConstantPool16impl_name_ref_atEib (0 bytes) 
  0.08%  <...other 4 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.65%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 
  2.92%   [kernel.kallsyms]  [unknown] 
  0.22%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN21ThreadStateTransition22transition_from_nativeEP10JavaThread15JavaThreadState.constprop.178 
  0.02%           libjvm.so  _ZN4UTF814unicode_lengthEPKciRbS2_ 
  0.02%       perf-5480.map  [unknown] 
  0.02%  libpthread-2.23.so  __pthread_mutex_cond_lock 
  0.02%         classes.jsa  [unknown] 
  0.02%           libjvm.so  _ZN12ConstantPool16impl_name_ref_atEib 
  0.02%           libjvm.so  _ZNK17interpretedVFrame8monitorsEv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.87%                  c2
  2.92%   [kernel.kallsyms]
  0.08%           libjvm.so
  0.06%         interpreter
  0.02%         classes.jsa
  0.02%  libpthread-2.23.so
  0.02%       perf-5480.map
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBuffer
# Parameters: (probabilityOfNaN = 0.001, size = 1024)

# Run progress: 14.81% complete, ETA 00:13:55
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1112.284 ops/ms
# Warmup Iteration   2: 1177.194 ops/ms
# Warmup Iteration   3: 1279.842 ops/ms
# Warmup Iteration   4: 1295.620 ops/ms
# Warmup Iteration   5: 1296.544 ops/ms
Iteration   1: 1302.614 ops/ms
Iteration   2: 1289.947 ops/ms
Iteration   3: 1292.856 ops/ms
Iteration   4: 1302.130 ops/ms
Iteration   5: 1300.916 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 16.05% complete, ETA 00:13:42
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1142.841 ops/ms
# Warmup Iteration   2: 1201.693 ops/ms
# Warmup Iteration   3: 1316.615 ops/ms
# Warmup Iteration   4: 1318.873 ops/ms
# Warmup Iteration   5: 1315.387 ops/ms
Iteration   1: 1305.032 ops/ms
Iteration   2: 1319.270 ops/ms
Iteration   3: 1312.567 ops/ms
Iteration   4: 1304.412 ops/ms
Iteration   5: 1299.852 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 17.28% complete, ETA 00:13:29
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1139.487 ops/ms
# Warmup Iteration   2: 1181.274 ops/ms
# Warmup Iteration   3: 1317.122 ops/ms
# Warmup Iteration   4: 1277.793 ops/ms
# Warmup Iteration   5: 1297.339 ops/ms
Iteration   1: 1303.445 ops/ms
Iteration   2: 1288.520 ops/ms
Iteration   3: 1301.799 ops/ms
Iteration   4: 1300.985 ops/ms
Iteration   5: 1278.078 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBuffer":
  1300.162 ±(99.9%) 10.562 ops/ms [Average]
  (min, avg, max) = (1278.078, 1300.162, 1319.270), stdev = 9.879
  CI (99.9%): [1289.600, 1310.723] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBuffer:·asm":
PrintAssembly processed: 53082 total address lines.
Perf output processed (skipped 6.596 seconds):
 Column 1: cycles (5092 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (531 bytes) 

                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007fc7087431e6: mov    (%rbx,%r11,1),%esi
               0x00007fc7087431ea: mov    %r14d,%r8d
               0x00007fc7087431ed: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.nio.Buffer::checkIndex@10 (line 687)
                                                                         ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007fc7087431f0: vmovd  %esi,%xmm7
  0.02%        0x00007fc7087431f4: vaddss %xmm8,%xmm7,%xmm8              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007fc7087431f9: cmp    $0x4,%r8d
               0x00007fc7087431fd: jl     0x00007fc70874357e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.nio.Buffer::checkIndex@11 (line 687)
                                                                         ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007fc708743203: vmovd  %xmm8,%r8d
               0x00007fc708743208: mov    %r8d,0x0(%rbp,%r11,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
                                                                         ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
                                                                         ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%        0x00007fc70874320d: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007fc708743211: cmp    %eax,%r10d
               0x00007fc708743214: jl     0x00007fc7087431b7             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007fc708743216: mov    $0xfffffffc,%r8d
               0x00007fc70874321c: sub    %edx,%r8d
  0.04%        0x00007fc70874321f: mov    $0xfffffffc,%r11d
               0x00007fc708743225: sub    %r9d,%r11d
               0x00007fc708743228: mov    $0xfffffffc,%edx
               0x00007fc70874322d: sub    %edi,%edx
  0.04%        0x00007fc70874322f: inc    %r8d
               0x00007fc708743232: inc    %edx
               0x00007fc708743234: inc    %r11d
               0x00007fc708743237: cmp    %r11d,%edx
  0.02%        0x00007fc70874323a: cmovg  %r11d,%edx
               0x00007fc70874323e: cmp    %edx,%r8d
               0x00007fc708743241: cmovg  %edx,%r8d
               0x00007fc708743245: cmp    %r13d,%r8d
  0.04%        0x00007fc708743248: cmovg  %r13d,%r8d
               0x00007fc70874324c: mov    %r8d,%edx
               0x00007fc70874324f: add    $0xfffffff2,%edx
               0x00007fc708743252: cmp    %edx,%r8d
  0.04%        0x00007fc708743255: mov    $0x80000000,%r8d
               0x00007fc70874325b: cmovl  %r8d,%edx
               0x00007fc70874325f: cmp    %edx,%r10d
         ╭     0x00007fc708743262: jge    0x00007fc7087433a3
         │     0x00007fc708743268: nopl   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
         │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.65%  │↗↗   0x00007fc708743270: movslq %r10d,%r8
  0.08%  │││   0x00007fc708743273: movslq %r10d,%rsi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
         │││                                                             ; - java.nio.DirectByteBuffer::ix@5 (line 258)
         │││                                                             ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.75%  │││   0x00007fc708743276: mov    %rcx,%r11
  0.06%  │││   0x00007fc708743279: add    %r8,%r11
  2.69%  │││   0x00007fc70874327c: mov    (%rbx,%rsi,1),%r9d
  0.06%  │││   0x00007fc708743280: vmovd  %r9d,%xmm7
  2.79%  │││   0x00007fc708743285: mov    (%rcx,%rsi,1),%r9d
  0.06%  │││   0x00007fc708743289: vmovd  %r9d,%xmm9
  2.57%  │││   0x00007fc70874328e: vaddss %xmm7,%xmm9,%xmm7
  0.18%  │││   0x00007fc708743292: mov    %rbx,%r9
  2.91%  │││   0x00007fc708743295: add    %r8,%r9
  0.08%  │││   0x00007fc708743298: mov    %rbp,%rdi
  2.51%  │││   0x00007fc70874329b: add    %r8,%rdi
  0.04%  │││   0x00007fc70874329e: vmovd  %xmm7,%r8d
  2.87%  │││   0x00007fc7087432a3: mov    %r8d,0x0(%rbp,%rsi,1)
  0.12%  │││   0x00007fc7087432a8: mov    0x2(%r9),%r8d
  2.63%  │││   0x00007fc7087432ac: vmovd  %r8d,%xmm8
  0.02%  │││   0x00007fc7087432b1: mov    0x2(%r11),%r8d
  2.42%  │││   0x00007fc7087432b5: vmovd  %r8d,%xmm7
  0.22%  │││   0x00007fc7087432ba: vaddss %xmm7,%xmm8,%xmm8
  2.67%  │││   0x00007fc7087432be: vmovd  %xmm8,%r8d
  0.14%  │││   0x00007fc7087432c3: mov    %r8d,0x2(%rdi)
  2.45%  │││   0x00007fc7087432c7: mov    0x4(%r11),%r8d
  0.04%  │││   0x00007fc7087432cb: vmovd  %r8d,%xmm7
  2.38%  │││   0x00007fc7087432d0: mov    0x4(%r9),%r8d
         │││   0x00007fc7087432d4: vmovd  %r8d,%xmm9
  3.02%  │││   0x00007fc7087432d9: vaddss %xmm9,%xmm7,%xmm7
  0.04%  │││   0x00007fc7087432de: vmovd  %xmm7,%r8d
  2.83%  │││   0x00007fc7087432e3: mov    %r8d,0x4(%rdi)
  0.16%  │││   0x00007fc7087432e7: mov    0x6(%r9),%r8d
  2.83%  │││   0x00007fc7087432eb: vmovd  %r8d,%xmm8
  0.04%  │││   0x00007fc7087432f0: mov    0x6(%r11),%r8d
  2.53%  │││   0x00007fc7087432f4: vmovd  %r8d,%xmm7
  0.10%  │││   0x00007fc7087432f9: vaddss %xmm7,%xmm8,%xmm8
  2.47%  │││   0x00007fc7087432fd: vmovd  %xmm8,%r8d
  0.04%  │││   0x00007fc708743302: mov    %r8d,0x6(%rdi)
  2.73%  │││   0x00007fc708743306: mov    0x8(%r11),%r8d
  0.08%  │││   0x00007fc70874330a: vmovd  %r8d,%xmm7
  2.65%  │││   0x00007fc70874330f: mov    0x8(%r9),%r8d
  0.08%  │││   0x00007fc708743313: vmovd  %r8d,%xmm9
  2.57%  │││   0x00007fc708743318: vaddss %xmm9,%xmm7,%xmm7
  0.02%  │││   0x00007fc70874331d: vmovd  %xmm7,%r8d
  3.12%  │││   0x00007fc708743322: mov    %r8d,0x8(%rdi)
  0.16%  │││   0x00007fc708743326: mov    0xa(%r9),%r8d
  2.85%  │││   0x00007fc70874332a: vmovd  %r8d,%xmm8
  0.02%  │││   0x00007fc70874332f: mov    0xa(%r11),%r8d
  2.47%  │││   0x00007fc708743333: vmovd  %r8d,%xmm7
  0.06%  │││   0x00007fc708743338: vaddss %xmm7,%xmm8,%xmm8
  2.57%  │││   0x00007fc70874333c: vmovd  %xmm8,%r8d
  0.02%  │││   0x00007fc708743341: mov    %r8d,0xa(%rdi)
  2.99%  │││   0x00007fc708743345: mov    0xc(%r11),%r8d
  0.04%  │││   0x00007fc708743349: vmovd  %r8d,%xmm7
  2.91%  │││   0x00007fc70874334e: mov    0xc(%r9),%r8d
  0.10%  │││   0x00007fc708743352: vmovd  %r8d,%xmm9
  2.91%  │││   0x00007fc708743357: vaddss %xmm9,%xmm7,%xmm7
  0.18%  │││   0x00007fc70874335c: vmovd  %xmm7,%r8d
  3.06%  │││   0x00007fc708743361: mov    %r8d,0xc(%rdi)
  1.34%  │││   0x00007fc708743365: mov    0xe(%r11),%eax
  2.57%  │││   0x00007fc708743369: vmovd  %eax,%xmm8
  0.04%  │││   0x00007fc70874336d: mov    0xe(%r9),%r11d
  2.95%  │││   0x00007fc708743371: vmovd  %r11d,%xmm7
  0.18%  │││   0x00007fc708743376: vaddss %xmm7,%xmm8,%xmm8
  2.40%  │││   0x00007fc70874337a: vmovd  %xmm8,%r8d
  0.02%  │││   0x00007fc70874337f: mov    %r8d,0xe(%rdi)                 ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
         │││                                                             ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
         │││                                                             ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
         │││                                                             ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.51%  │││   0x00007fc708743383: add    $0x10,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.18%  │││   0x00007fc708743387: cmp    %edx,%r10d
         │╰│   0x00007fc70874338a: jl     0x00007fc708743270             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │ │   0x00007fc708743390: mov    0x108(%r15),%r11               ; ImmutableOopMap{xmm1=NarrowOop xmm2=Oop xmm3=Oop xmm4=Oop [112]=Oop [128]=Oop [0]=Oop [16]=Oop [24]=Oop }
         │ │                                                             ;*goto {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │ │   0x00007fc708743397: test   %eax,(%r11)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │ │                                                             ;   {poll}
  0.39%  │ │   0x00007fc70874339a: cmp    %edx,%r10d
         │ ╰   0x00007fc70874339d: jl     0x00007fc708743270
         ↘     0x00007fc7087433a3: cmp    %r13d,%r10d
               0x00007fc7087433a6: jge    0x00007fc708743025             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%     ↗  0x00007fc7087433ac: vmovd  %xmm6,%r8d
  0.06%     │  0x00007fc7087433b1: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.18%     │  0x00007fc7087433b4: cmp    $0x4,%r8d
            │  0x00007fc7087433b8: jl     0x00007fc7087434ce             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.14%     │  0x00007fc7087433be: vmovd  %xmm5,%r8d
  0.10%     │  0x00007fc7087433c3: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%     │  0x00007fc7087433c6: movslq %r10d,%rdi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.24%     │  0x00007fc7087433c9: mov    (%rcx,%rdi,1),%r9d
  0.06%     │  0x00007fc7087433cd: vmovd  %r9d,%xmm7                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.12%     │  0x00007fc7087433d2: cmp    $0x4,%r8d
            │  0x00007fc7087433d6: jl     0x00007fc708743538             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
            │  0x00007fc7087433dc: mov    (%rbx,%rdi,1),%r11d
  0.10%     │  0x00007fc7087433e0: mov    %r14d,%r8d
  0.10%     │  0x00007fc7087433e3: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%     │  0x00007fc7087433e6: vmovd  %r11d,%xmm9
  0.04%     │  0x00007fc7087433eb: vaddss %xmm7,%xmm9,%xmm7              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%     │  0x00007fc7087433ef: cmp    $0x4,%r8d
            │  0x00007fc7087433f3: jl     0x00007fc708743584             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%     │  0x00007fc7087433f9: vmovd  %xmm7,%r8d
  0.06%     │  0x00007fc7087433fe: mov    %r8d,0x0(%rbp,%rdi,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%     │  0x00007fc708743403: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%     │  0x00007fc708743407: cmp    %r13d,%r10d
            ╰  0x00007fc70874340a: jl     0x00007fc7087433ac             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007fc70874340c: jmpq   0x00007fc708743025
               0x00007fc708743411: mov    %rcx,0x70(%rsp)
               0x00007fc708743416: jmpq   0x00007fc70874302f
               0x00007fc70874341b: mov    $0x1,%ebp                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@38 (line 148)
....................................................................................................
 95.37%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.37%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (531 bytes) 
  1.43%   [kernel.kallsyms]  [unknown] (0 bytes) 
  1.34%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.81%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (296 bytes) 
  0.16%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 (12 bytes) 
  0.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (17 bytes) 
  0.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (16 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (9 bytes) 
  0.08%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 (15 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (26 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (12 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (1 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.12%  <...other 6 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.37%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 
  3.34%   [kernel.kallsyms]  [unknown] 
  0.24%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%           libjvm.so  _ZN18InterpreterRuntime31exception_handler_for_exceptionEP10JavaThreadP7oopDesc 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.60%                  c2
  3.34%   [kernel.kallsyms]
  0.02%           libjvm.so
  0.02%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53070 total address lines.
Perf output processed (skipped 6.620 seconds):
 Column 1: cycles (5074 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (702 bytes) 

                0x00007f1288743fb1: mov    0x1c(%rbx),%edi                ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.nio.Buffer::checkIndex@6 (line 687)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007f1288743fb4: vmovq  %rbx,%xmm3
                0x00007f1288743fb9: mov    %r9d,%r11d
                0x00007f1288743fbc: sar    $0x1f,%r11d
                0x00007f1288743fc0: and    %r9d,%r11d
                0x00007f1288743fc3: mov    $0x80000001,%r10d
  0.02%         0x00007f1288743fc9: sub    %r11d,%r10d
                0x00007f1288743fcc: vmovd  %edi,%xmm5
  0.02%         0x00007f1288743fd0: neg    %edi
  0.02%         0x00007f1288743fd2: mov    0x10(%rbx),%r11
                0x00007f1288743fd6: mov    %r11,%rbx                      ;*invokevirtual getIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.misc.Unsafe::getIntUnaligned@5 (line 3446)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@9 (line 943)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007f1288743fd9: mov    %edi,%r8d
  0.04%         0x00007f1288743fdc: sar    $0x1f,%r8d
                0x00007f1288743fe0: and    %edi,%r8d
                0x00007f1288743fe3: mov    $0x80000001,%r11d
                0x00007f1288743fe9: sub    %r8d,%r11d
  0.04%         0x00007f1288743fec: cmp    %r11d,%r10d
                0x00007f1288743fef: cmovl  %r11d,%r10d
                0x00007f1288743ff3: vmovq  %xmm4,%r11
                0x00007f1288743ff8: mov    0x1c(%r11),%r14d               ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.nio.Buffer::checkIndex@6 (line 687)
                                                                          ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%         0x00007f1288743ffc: mov    %r14d,%edx
                0x00007f1288743fff: neg    %edx
  0.04%         0x00007f1288744001: mov    %edx,%r8d
                0x00007f1288744004: sar    $0x1f,%r8d
  0.02%         0x00007f1288744008: and    %edx,%r8d
                0x00007f128874400b: mov    $0x80000001,%eax
  0.02%         0x00007f1288744010: sub    %r8d,%eax
                0x00007f1288744013: cmp    %r10d,%eax
  0.04%         0x00007f1288744016: cmovl  %r10d,%eax
                0x00007f128874401a: mov    $0x2,%r10d
                0x00007f1288744020: cmp    %r10d,%eax
                0x00007f1288744023: mov    $0x2,%r11d
  0.12%         0x00007f1288744029: cmovl  %r11d,%eax
                0x00007f128874402d: cmp    %r13d,%eax
  0.08%         0x00007f1288744030: cmovg  %r13d,%eax
                0x00007f1288744034: xor    %r10d,%r10d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%  ↗      0x00007f1288744037: vmovd  %xmm6,%r8d
         │      0x00007f128874403c: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@10 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007f128874403f: cmp    $0x4,%r8d
         │      0x00007f1288744043: jl     0x00007f128874434e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@11 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%  │      0x00007f1288744049: vmovd  %xmm5,%r8d
  0.04%  │      0x00007f128874404e: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@10 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007f1288744051: movslq %r10d,%r11                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.DirectByteBuffer::ix@5 (line 258)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007f1288744054: mov    (%rcx,%r11,1),%esi
         │      0x00007f1288744058: vmovd  %esi,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%  │      0x00007f128874405c: cmp    $0x4,%r8d
         │      0x00007f1288744060: jl     0x00007f12887443b2             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@11 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007f1288744066: mov    (%rbx,%r11,1),%esi
         │      0x00007f128874406a: mov    %r14d,%r8d
  0.02%  │      0x00007f128874406d: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@10 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%  │      0x00007f1288744070: vmovd  %esi,%xmm7
         │      0x00007f1288744074: vaddss %xmm8,%xmm7,%xmm8              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%  │      0x00007f1288744079: cmp    $0x4,%r8d
         │      0x00007f128874407d: jl     0x00007f12887443fe             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@11 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007f1288744083: vmovd  %xmm8,%r8d
  0.02%  │      0x00007f1288744088: mov    %r8d,0x0(%rbp,%r11,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007f128874408d: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%  │      0x00007f1288744091: cmp    %eax,%r10d
         ╰      0x00007f1288744094: jl     0x00007f1288744037             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007f1288744096: mov    $0xfffffffc,%r8d
  0.02%         0x00007f128874409c: sub    %edx,%r8d
                0x00007f128874409f: mov    $0xfffffffc,%r11d
                0x00007f12887440a5: sub    %r9d,%r11d
  0.04%         0x00007f12887440a8: mov    $0xfffffffc,%edx
  0.02%         0x00007f12887440ad: sub    %edi,%edx
                0x00007f12887440af: inc    %r8d
                0x00007f12887440b2: inc    %edx
                0x00007f12887440b4: inc    %r11d
  0.02%         0x00007f12887440b7: cmp    %r11d,%edx
                0x00007f12887440ba: cmovg  %r11d,%edx
  0.02%         0x00007f12887440be: cmp    %edx,%r8d
  0.04%         0x00007f12887440c1: cmovg  %edx,%r8d
  0.02%         0x00007f12887440c5: cmp    %r13d,%r8d
                0x00007f12887440c8: cmovg  %r13d,%r8d
                0x00007f12887440cc: mov    %r8d,%edx
  0.02%         0x00007f12887440cf: add    $0xfffffff2,%edx
                0x00007f12887440d2: cmp    %edx,%r8d
                0x00007f12887440d5: mov    $0x80000000,%r8d
                0x00007f12887440db: cmovl  %r8d,%edx
                0x00007f12887440df: cmp    %edx,%r10d
          ╭     0x00007f12887440e2: jge    0x00007f1288744223
  0.04%   │     0x00007f12887440e8: nopl   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
          │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.01%   │↗↗   0x00007f12887440f0: movslq %r10d,%r8
  1.04%   │││   0x00007f12887440f3: movslq %r10d,%rsi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │││                                                             ; - java.nio.DirectByteBuffer::ix@5 (line 258)
          │││                                                             ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  1.79%   │││   0x00007f12887440f6: mov    %rcx,%r11
  1.18%   │││   0x00007f12887440f9: add    %r8,%r11
  1.69%   │││   0x00007f12887440fc: mov    (%rbx,%rsi,1),%r9d
  1.24%   │││   0x00007f1288744100: vmovd  %r9d,%xmm7
  1.60%   │││   0x00007f1288744105: mov    (%rcx,%rsi,1),%r9d
  1.01%   │││   0x00007f1288744109: vmovd  %r9d,%xmm9
  1.77%   │││   0x00007f128874410e: vaddss %xmm7,%xmm9,%xmm7
  1.02%   │││   0x00007f1288744112: mov    %rbx,%r9
  2.05%   │││   0x00007f1288744115: add    %r8,%r9
  1.02%   │││   0x00007f1288744118: mov    %rbp,%rdi
  1.66%   │││   0x00007f128874411b: add    %r8,%rdi
  0.81%   │││   0x00007f128874411e: vmovd  %xmm7,%r8d
  1.56%   │││   0x00007f1288744123: mov    %r8d,0x0(%rbp,%rsi,1)
  0.99%   │││   0x00007f1288744128: mov    0x2(%r9),%r8d
  1.83%   │││   0x00007f128874412c: vmovd  %r8d,%xmm8
  0.83%   │││   0x00007f1288744131: mov    0x2(%r11),%r8d
  1.58%   │││   0x00007f1288744135: vmovd  %r8d,%xmm7
  0.97%   │││   0x00007f128874413a: vaddss %xmm7,%xmm8,%xmm8
  2.01%   │││   0x00007f128874413e: vmovd  %xmm8,%r8d
  0.77%   │││   0x00007f1288744143: mov    %r8d,0x2(%rdi)
  1.64%   │││   0x00007f1288744147: mov    0x4(%r11),%r8d
  1.02%   │││   0x00007f128874414b: vmovd  %r8d,%xmm7
  1.71%   │││   0x00007f1288744150: mov    0x4(%r9),%r8d
  0.71%   │││   0x00007f1288744154: vmovd  %r8d,%xmm9
  1.77%   │││   0x00007f1288744159: vaddss %xmm9,%xmm7,%xmm7
  0.91%   │││   0x00007f128874415e: vmovd  %xmm7,%r8d
  2.01%   │││   0x00007f1288744163: mov    %r8d,0x4(%rdi)
  1.12%   │││   0x00007f1288744167: mov    0x6(%r9),%r8d
  2.05%   │││   0x00007f128874416b: vmovd  %r8d,%xmm8
  0.99%   │││   0x00007f1288744170: mov    0x6(%r11),%r8d
  2.09%   │││   0x00007f1288744174: vmovd  %r8d,%xmm7
  0.97%   │││   0x00007f1288744179: vaddss %xmm7,%xmm8,%xmm8
  2.21%   │││   0x00007f128874417d: vmovd  %xmm8,%r8d
  1.02%   │││   0x00007f1288744182: mov    %r8d,0x6(%rdi)
  1.69%   │││   0x00007f1288744186: mov    0x8(%r11),%r8d
  1.01%   │││   0x00007f128874418a: vmovd  %r8d,%xmm7
  1.75%   │││   0x00007f128874418f: mov    0x8(%r9),%r8d
  0.97%   │││   0x00007f1288744193: vmovd  %r8d,%xmm9
  1.52%   │││   0x00007f1288744198: vaddss %xmm9,%xmm7,%xmm7
  1.26%   │││   0x00007f128874419d: vmovd  %xmm7,%r8d
  1.69%   │││   0x00007f12887441a2: mov    %r8d,0x8(%rdi)
  0.93%   │││   0x00007f12887441a6: mov    0xa(%r9),%r8d
  1.93%   │││   0x00007f12887441aa: vmovd  %r8d,%xmm8
  0.85%   │││   0x00007f12887441af: mov    0xa(%r11),%r8d
  1.93%   │││   0x00007f12887441b3: vmovd  %r8d,%xmm7
  1.22%   │││   0x00007f12887441b8: vaddss %xmm7,%xmm8,%xmm8
  1.93%   │││   0x00007f12887441bc: vmovd  %xmm8,%r8d
  0.91%   │││   0x00007f12887441c1: mov    %r8d,0xa(%rdi)
  2.09%   │││   0x00007f12887441c5: mov    0xc(%r11),%r8d
  0.95%   │││   0x00007f12887441c9: vmovd  %r8d,%xmm7
  1.89%   │││   0x00007f12887441ce: mov    0xc(%r9),%r8d
  0.99%   │││   0x00007f12887441d2: vmovd  %r8d,%xmm9
  2.03%   │││   0x00007f12887441d7: vaddss %xmm9,%xmm7,%xmm7
  1.12%   │││   0x00007f12887441dc: vmovd  %xmm7,%r8d
  1.69%   │││   0x00007f12887441e1: mov    %r8d,0xc(%rdi)
  1.08%   │││   0x00007f12887441e5: mov    0xe(%r11),%eax
  1.79%   │││   0x00007f12887441e9: vmovd  %eax,%xmm8
  0.95%   │││   0x00007f12887441ed: mov    0xe(%r9),%r11d
  1.71%   │││   0x00007f12887441f1: vmovd  %r11d,%xmm7
  0.85%   │││   0x00007f12887441f6: vaddss %xmm7,%xmm8,%xmm8
  1.71%   │││   0x00007f12887441fa: vmovd  %xmm8,%r8d
  1.02%   │││   0x00007f12887441ff: mov    %r8d,0xe(%rdi)                 ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
          │││                                                             ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
          │││                                                             ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
          │││                                                             ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  1.68%   │││   0x00007f1288744203: add    $0x10,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.87%   │││   0x00007f1288744207: cmp    %edx,%r10d
          │╰│   0x00007f128874420a: jl     0x00007f12887440f0             ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │ │   0x00007f1288744210: mov    0x108(%r15),%r11               ; ImmutableOopMap{xmm1=NarrowOop xmm2=Oop xmm3=Oop xmm4=Oop [112]=Oop [128]=Oop [0]=Oop [16]=Oop [24]=Oop }
          │ │                                                             ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%   │ │   0x00007f1288744217: test   %eax,(%r11)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │ │                                                             ;   {poll}
  0.20%   │ │   0x00007f128874421a: cmp    %edx,%r10d
          │ ╰   0x00007f128874421d: jl     0x00007f12887440f0
          ↘     0x00007f1288744223: cmp    %r13d,%r10d
                0x00007f1288744226: jge    0x00007f1288743ea5             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%      ↗  0x00007f128874422c: vmovd  %xmm6,%r8d
  0.16%      │  0x00007f1288744231: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.12%      │  0x00007f1288744234: cmp    $0x4,%r8d
             │  0x00007f1288744238: jl     0x00007f128874434e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%      │  0x00007f128874423e: vmovd  %xmm5,%r8d
  0.08%      │  0x00007f1288744243: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%      │  0x00007f1288744246: movslq %r10d,%rdi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.14%      │  0x00007f1288744249: mov    (%rcx,%rdi,1),%r9d
  0.10%      │  0x00007f128874424d: vmovd  %r9d,%xmm7                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%      │  0x00007f1288744252: cmp    $0x4,%r8d
             │  0x00007f1288744256: jl     0x00007f12887443b8             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%      │  0x00007f128874425c: mov    (%rbx,%rdi,1),%r11d
  0.12%      │  0x00007f1288744260: mov    %r14d,%r8d
  0.04%      │  0x00007f1288744263: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%      │  0x00007f1288744266: vmovd  %r11d,%xmm9
  0.02%      │  0x00007f128874426b: vaddss %xmm7,%xmm9,%xmm7              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.39%      │  0x00007f128874426f: cmp    $0x4,%r8d
             │  0x00007f1288744273: jl     0x00007f1288744404             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%      │  0x00007f1288744279: vmovd  %xmm7,%r8d
  0.16%      │  0x00007f128874427e: mov    %r8d,0x0(%rbp,%rdi,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.30%      │  0x00007f1288744283: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%      │  0x00007f1288744287: cmp    %r13d,%r10d
             ╰  0x00007f128874428a: jl     0x00007f128874422c             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007f128874428c: jmpq   0x00007f1288743ea5
                0x00007f1288744291: mov    %rcx,0x70(%rsp)
                0x00007f1288744296: jmpq   0x00007f1288743eaf
                0x00007f128874429b: mov    $0x1,%ebp                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@38 (line 148)
....................................................................................................
 95.96%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.96%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (702 bytes) 
  2.62%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.47%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (109 bytes) 
  0.26%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (98 bytes) 
  0.22%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 (58 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (14 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (4 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  iload_2  28 iload_2  (0 bytes) 
  0.12%  <...other 6 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.69%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 
  2.90%   [kernel.kallsyms]  [unknown] 
  0.22%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  nofast_iload  237 nofast_iload  
  0.02%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  0.02%           libjvm.so  _ZN12LinkResolver31check_method_loader_constraintsERK8LinkInfoRK12methodHandlePKcP6Thread 
  0.02%           libjvm.so  _ZNK17ObjArrayAllocator10initializeEP8HeapWord 
  0.02%         interpreter  iload_2  28 iload_2  
  0.02%         interpreter  getfield  180 getfield  
  0.02%           libjvm.so  _ZN6Events3logEP6ThreadPKcz 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.91%                  c2
  2.90%   [kernel.kallsyms]
  0.12%         interpreter
  0.06%           libjvm.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53081 total address lines.
Perf output processed (skipped 6.619 seconds):
 Column 1: cycles (5060 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (407 bytes) 

               0x00007f1b4031e24c: mov    %r8d,%edx
               0x00007f1b4031e24f: add    $0xfffffff2,%edx
               0x00007f1b4031e252: cmp    %edx,%r8d
               0x00007f1b4031e255: mov    $0x80000000,%r8d
               0x00007f1b4031e25b: cmovl  %r8d,%edx
               0x00007f1b4031e25f: cmp    %edx,%r10d
         ╭     0x00007f1b4031e262: jge    0x00007f1b4031e3a3
         │     0x00007f1b4031e268: nopl   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
         │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.75%  │↗↗   0x00007f1b4031e270: movslq %r10d,%r8
  0.04%  │││   0x00007f1b4031e273: movslq %r10d,%rsi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
         │││                                                             ; - java.nio.DirectByteBuffer::ix@5 (line 258)
         │││                                                             ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  3.02%  │││   0x00007f1b4031e276: mov    %rcx,%r11
  0.04%  │││   0x00007f1b4031e279: add    %r8,%r11
  2.79%  │││   0x00007f1b4031e27c: mov    (%rbx,%rsi,1),%r9d
  0.04%  │││   0x00007f1b4031e280: vmovd  %r9d,%xmm7
  2.39%  │││   0x00007f1b4031e285: mov    (%rcx,%rsi,1),%r9d
         │││   0x00007f1b4031e289: vmovd  %r9d,%xmm9
  2.89%  │││   0x00007f1b4031e28e: vaddss %xmm7,%xmm9,%xmm7
  0.04%  │││   0x00007f1b4031e292: mov    %rbx,%r9
  2.77%  │││   0x00007f1b4031e295: add    %r8,%r9
  0.04%  │││   0x00007f1b4031e298: mov    %rbp,%rdi
  2.92%  │││   0x00007f1b4031e29b: add    %r8,%rdi
         │││   0x00007f1b4031e29e: vmovd  %xmm7,%r8d
  2.79%  │││   0x00007f1b4031e2a3: mov    %r8d,0x0(%rbp,%rsi,1)
  0.06%  │││   0x00007f1b4031e2a8: mov    0x2(%r9),%r8d
  2.59%  │││   0x00007f1b4031e2ac: vmovd  %r8d,%xmm8
         │││   0x00007f1b4031e2b1: mov    0x2(%r11),%r8d
  2.08%  │││   0x00007f1b4031e2b5: vmovd  %r8d,%xmm7
  0.06%  │││   0x00007f1b4031e2ba: vaddss %xmm7,%xmm8,%xmm8
  2.47%  │││   0x00007f1b4031e2be: vmovd  %xmm8,%r8d
  0.12%  │││   0x00007f1b4031e2c3: mov    %r8d,0x2(%rdi)
  2.91%  │││   0x00007f1b4031e2c7: mov    0x4(%r11),%r8d
  0.04%  │││   0x00007f1b4031e2cb: vmovd  %r8d,%xmm7
  2.71%  │││   0x00007f1b4031e2d0: mov    0x4(%r9),%r8d
  0.06%  │││   0x00007f1b4031e2d4: vmovd  %r8d,%xmm9
  2.49%  │││   0x00007f1b4031e2d9: vaddss %xmm9,%xmm7,%xmm7
  0.04%  │││   0x00007f1b4031e2de: vmovd  %xmm7,%r8d
  2.92%  │││   0x00007f1b4031e2e3: mov    %r8d,0x4(%rdi)
  0.10%  │││   0x00007f1b4031e2e7: mov    0x6(%r9),%r8d
  2.65%  │││   0x00007f1b4031e2eb: vmovd  %r8d,%xmm8
  0.02%  │││   0x00007f1b4031e2f0: mov    0x6(%r11),%r8d
  2.51%  │││   0x00007f1b4031e2f4: vmovd  %r8d,%xmm7
  0.08%  │││   0x00007f1b4031e2f9: vaddss %xmm7,%xmm8,%xmm8
  2.57%  │││   0x00007f1b4031e2fd: vmovd  %xmm8,%r8d
  0.04%  │││   0x00007f1b4031e302: mov    %r8d,0x6(%rdi)
  2.85%  │││   0x00007f1b4031e306: mov    0x8(%r11),%r8d
         │││   0x00007f1b4031e30a: vmovd  %r8d,%xmm7
  2.91%  │││   0x00007f1b4031e30f: mov    0x8(%r9),%r8d
  0.02%  │││   0x00007f1b4031e313: vmovd  %r8d,%xmm9
  2.81%  │││   0x00007f1b4031e318: vaddss %xmm9,%xmm7,%xmm7
         │││   0x00007f1b4031e31d: vmovd  %xmm7,%r8d
  2.59%  │││   0x00007f1b4031e322: mov    %r8d,0x8(%rdi)
  0.08%  │││   0x00007f1b4031e326: mov    0xa(%r9),%r8d
  3.28%  │││   0x00007f1b4031e32a: vmovd  %r8d,%xmm8
  0.04%  │││   0x00007f1b4031e32f: mov    0xa(%r11),%r8d
  2.69%  │││   0x00007f1b4031e333: vmovd  %r8d,%xmm7
  0.12%  │││   0x00007f1b4031e338: vaddss %xmm7,%xmm8,%xmm8
  3.02%  │││   0x00007f1b4031e33c: vmovd  %xmm8,%r8d
  0.04%  │││   0x00007f1b4031e341: mov    %r8d,0xa(%rdi)
  2.92%  │││   0x00007f1b4031e345: mov    0xc(%r11),%r8d
  0.08%  │││   0x00007f1b4031e349: vmovd  %r8d,%xmm7
  2.87%  │││   0x00007f1b4031e34e: mov    0xc(%r9),%r8d
  0.08%  │││   0x00007f1b4031e352: vmovd  %r8d,%xmm9
  3.22%  │││   0x00007f1b4031e357: vaddss %xmm9,%xmm7,%xmm7
  0.10%  │││   0x00007f1b4031e35c: vmovd  %xmm7,%r8d
  2.83%  │││   0x00007f1b4031e361: mov    %r8d,0xc(%rdi)
  1.25%  │││   0x00007f1b4031e365: mov    0xe(%r11),%eax
  2.79%  │││   0x00007f1b4031e369: vmovd  %eax,%xmm8
  0.06%  │││   0x00007f1b4031e36d: mov    0xe(%r9),%r11d
  2.61%  │││   0x00007f1b4031e371: vmovd  %r11d,%xmm7
  0.16%  │││   0x00007f1b4031e376: vaddss %xmm7,%xmm8,%xmm8
  2.29%  │││   0x00007f1b4031e37a: vmovd  %xmm8,%r8d
  0.08%  │││   0x00007f1b4031e37f: mov    %r8d,0xe(%rdi)                 ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
         │││                                                             ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
         │││                                                             ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
         │││                                                             ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.79%  │││   0x00007f1b4031e383: add    $0x10,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%  │││   0x00007f1b4031e387: cmp    %edx,%r10d
         │╰│   0x00007f1b4031e38a: jl     0x00007f1b4031e270             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │ │   0x00007f1b4031e390: mov    0x108(%r15),%r11               ; ImmutableOopMap{xmm1=NarrowOop xmm2=Oop xmm3=Oop xmm4=Oop [112]=Oop [128]=Oop [0]=Oop [16]=Oop [24]=Oop }
         │ │                                                             ;*goto {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%  │ │   0x00007f1b4031e397: test   %eax,(%r11)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │ │                                                             ;   {poll}
  0.57%  │ │   0x00007f1b4031e39a: cmp    %edx,%r10d
         │ ╰   0x00007f1b4031e39d: jl     0x00007f1b4031e270
         ↘     0x00007f1b4031e3a3: cmp    %r13d,%r10d
               0x00007f1b4031e3a6: jge    0x00007f1b4031e025             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%     ↗  0x00007f1b4031e3ac: vmovd  %xmm6,%r8d
  0.14%     │  0x00007f1b4031e3b1: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%     │  0x00007f1b4031e3b4: cmp    $0x4,%r8d
            │  0x00007f1b4031e3b8: jl     0x00007f1b4031e4ce             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%     │  0x00007f1b4031e3be: vmovd  %xmm5,%r8d
  0.12%     │  0x00007f1b4031e3c3: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%     │  0x00007f1b4031e3c6: movslq %r10d,%rdi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%     │  0x00007f1b4031e3c9: mov    (%rcx,%rdi,1),%r9d
  0.10%     │  0x00007f1b4031e3cd: vmovd  %r9d,%xmm7                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.12%     │  0x00007f1b4031e3d2: cmp    $0x4,%r8d
            │  0x00007f1b4031e3d6: jl     0x00007f1b4031e538             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%     │  0x00007f1b4031e3dc: mov    (%rbx,%rdi,1),%r11d
  0.24%     │  0x00007f1b4031e3e0: mov    %r14d,%r8d
  0.08%     │  0x00007f1b4031e3e3: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.14%     │  0x00007f1b4031e3e6: vmovd  %r11d,%xmm9
  0.04%     │  0x00007f1b4031e3eb: vaddss %xmm7,%xmm9,%xmm7              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%     │  0x00007f1b4031e3ef: cmp    $0x4,%r8d
            │  0x00007f1b4031e3f3: jl     0x00007f1b4031e584             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%     │  0x00007f1b4031e3f9: vmovd  %xmm7,%r8d
  0.08%     │  0x00007f1b4031e3fe: mov    %r8d,0x0(%rbp,%rdi,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%     │  0x00007f1b4031e403: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%     │  0x00007f1b4031e407: cmp    %r13d,%r10d
            ╰  0x00007f1b4031e40a: jl     0x00007f1b4031e3ac             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007f1b4031e40c: jmpq   0x00007f1b4031e025
               0x00007f1b4031e411: mov    %rcx,0x70(%rsp)
               0x00007f1b4031e416: jmpq   0x00007f1b4031e02f
               0x00007f1b4031e41b: mov    $0x1,%ebp                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@38 (line 148)
....................................................................................................
 95.85%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.85%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (407 bytes) 
  2.21%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.67%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (276 bytes) 
  0.43%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (140 bytes) 
  0.16%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 (63 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (4 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (10 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.26%  <...other 13 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 
  2.57%   [kernel.kallsyms]  [unknown] 
  0.16%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 
  0.04%         interpreter  invokevirtual  182 invokevirtual  
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  invokestatic  184 invokestatic  
  0.02%           libjvm.so  _ZN12LinkResolver24lookup_method_in_klassesERK8LinkInfobb 
  0.02%           libjvm.so  _ZN12ConstantPool21impl_signature_ref_atEib 
  0.02%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  0.02%           libjvm.so  _ZN13InstanceKlass17find_method_indexEPK5ArrayIP6MethodEPK6SymbolS8_N5Klass18OverpassLookupModeENS9_16StaticLookupModeENS9_17PrivateLookupModeE.constprop.305 
  0.02%         interpreter  new  187 new  
  0.02%         interpreter  fast_aputfield  211 fast_aputfield  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.19%                  c2
  2.57%   [kernel.kallsyms]
  0.16%         interpreter
  0.06%           libjvm.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBuffer
# Parameters: (probabilityOfNaN = 0.01, size = 1024)

# Run progress: 18.52% complete, ETA 00:13:16
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1134.369 ops/ms
# Warmup Iteration   2: 1188.967 ops/ms
# Warmup Iteration   3: 1307.261 ops/ms
# Warmup Iteration   4: 1316.452 ops/ms
# Warmup Iteration   5: 1319.713 ops/ms
Iteration   1: 1320.601 ops/ms
Iteration   2: 1301.534 ops/ms
Iteration   3: 1298.002 ops/ms
Iteration   4: 1297.586 ops/ms
Iteration   5: 1315.381 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 19.75% complete, ETA 00:13:04
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1135.202 ops/ms
# Warmup Iteration   2: 1202.007 ops/ms
# Warmup Iteration   3: 1313.401 ops/ms
# Warmup Iteration   4: 1307.167 ops/ms
# Warmup Iteration   5: 1305.391 ops/ms
Iteration   1: 1291.211 ops/ms
Iteration   2: 1292.304 ops/ms
Iteration   3: 1304.855 ops/ms
Iteration   4: 1305.786 ops/ms
Iteration   5: 1304.198 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 20.99% complete, ETA 00:12:51
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1118.028 ops/ms
# Warmup Iteration   2: 1162.259 ops/ms
# Warmup Iteration   3: 1295.398 ops/ms
# Warmup Iteration   4: 1270.836 ops/ms
# Warmup Iteration   5: 1291.428 ops/ms
Iteration   1: 1304.956 ops/ms
Iteration   2: 1302.981 ops/ms
Iteration   3: 1301.892 ops/ms
Iteration   4: 1304.910 ops/ms
Iteration   5: 1306.114 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBuffer":
  1303.487 ±(99.9%) 8.083 ops/ms [Average]
  (min, avg, max) = (1291.211, 1303.487, 1320.601), stdev = 7.561
  CI (99.9%): [1295.404, 1311.571] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBuffer:·asm":
PrintAssembly processed: 53082 total address lines.
Perf output processed (skipped 6.612 seconds):
 Column 1: cycles (5115 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (989 bytes) 

                     0x00007f5edc747388: mov    0x78(%rsp),%rcx
                     0x00007f5edc74738d: movzbl 0x94(%rcx),%r10d               ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@32 (line 147)
                                                                               ; implicit exception: dispatches to 0x00007f5edc747ab2
                     0x00007f5edc747395: test   %r10d,%r10d
                     0x00007f5edc747398: jne    0x00007f5edc74779b             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@35 (line 147)
                     0x00007f5edc74739e: mov    $0x1,%ebp
         ╭           0x00007f5edc7473a3: jmp    0x00007f5edc7473e4
         │     ↗ ↗   0x00007f5edc7473a5: vmovq  %xmm0,%rbp
  0.04%  │     │ │   0x00007f5edc7473aa: vmovd  %xmm1,%r8d                     ;*invokevirtual verticalSumBuffer {reexecute=0 rethrow=0 return_oop=0}
         │     │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │     │ │↗  0x00007f5edc7473af: mov    %r8,%rdx
         │     │ ││  0x00007f5edc7473b2: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
         │     │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@13 (line 142)
         │     │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │     │ ││  0x00007f5edc7473b6: mov    0x10(%rsp),%rsi
  0.08%  │     │ ││  0x00007f5edc7473bb: callq  0x00007f5edc6bf900             ; ImmutableOopMap{[112]=Oop [128]=Oop [0]=Oop [16]=Oop [24]=Oop }
         │     │ ││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │     │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@22 (line 145)
         │     │ ││                                                            ;   {optimized virtual_call}
  0.12%  │     │ ││  0x00007f5edc7473c0: mov    0x70(%rsp),%rcx
         │     │ ││  0x00007f5edc7473c5: movzbl 0x94(%rcx),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │     │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
         │     │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │     │ ││  0x00007f5edc7473cd: mov    0x108(%r15),%r10
  0.02%  │     │ ││  0x00007f5edc7473d4: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [112]=Oop [128]=Oop [0]=Oop [16]=Oop [24]=Oop }
         │     │ ││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │     │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@35 (line 147)
         │     │ ││  0x00007f5edc7473d8: test   %eax,(%r10)                    ;   {poll}
         │     │ ││  0x00007f5edc7473db: test   %r11d,%r11d
         │     │ ││  0x00007f5edc7473de: jne    0x00007f5edc7477a0             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │     │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@38 (line 148)
         ↘     │ ││  0x00007f5edc7473e4: mov    0x18(%rsp),%r9
  0.02%        │ ││  0x00007f5edc7473e9: mov    0xc(%r9),%r13d
               │ ││  0x00007f5edc7473ed: mov    0x20(%r9),%r8d                 ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
               │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@13 (line 142)
               │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               │ ││  0x00007f5edc7473f1: shl    %r13d                          ;*imul {reexecute=0 rethrow=0 return_oop=0}
               │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@8 (line 141)
               │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               │ ││  0x00007f5edc7473f4: test   %r13d,%r13d
          ╭    │ ││  0x00007f5edc7473f7: jle    0x00007f5edc747791             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%   │    │ ││  0x00007f5edc7473fd: mov    0x18(%r9),%r10d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@18 (line 142)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │    │ ││  0x00007f5edc747401: mov    0x8(%r12,%r10,8),%r11d         ; implicit exception: dispatches to 0x00007f5edc747812
  0.04%   │    │ ││  0x00007f5edc747406: cmp    $0x2c20c,%r11d                 ;   {metadata(&apos;java/nio/DirectByteBuffer&apos;)}
          │    │ ││  0x00007f5edc74740d: jne    0x00007f5edc747812
  0.08%   │    │ ││  0x00007f5edc747413: lea    (%r12,%r10,8),%rdi             ;*invokevirtual getFloat {reexecute=0 rethrow=0 return_oop=0}
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%   │    │ ││  0x00007f5edc747417: movzbl 0x29(%rdi),%r10d
          │    │ ││  0x00007f5edc74741c: test   %r10d,%r10d
          │    │ ││  0x00007f5edc74741f: jne    0x00007f5edc747812
  0.02%   │    │ ││  0x00007f5edc747425: mov    0x1c(%r9),%r10d                ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@26 (line 142)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │    │ ││  0x00007f5edc747429: mov    0x8(%r12,%r10,8),%r11d         ; implicit exception: dispatches to 0x00007f5edc747812
  0.04%   │    │ ││  0x00007f5edc74742e: cmp    $0x2c20c,%r11d                 ;   {metadata(&apos;java/nio/DirectByteBuffer&apos;)}
          │    │ ││  0x00007f5edc747435: jne    0x00007f5edc747812
          │    │ ││  0x00007f5edc74743b: lea    (%r12,%r10,8),%rbx             ;*invokevirtual getFloat {reexecute=0 rethrow=0 return_oop=0}
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%   │    │ ││  0x00007f5edc74743f: movzbl 0x29(%rbx),%r11d
          │    │ ││  0x00007f5edc747444: test   %r11d,%r11d
          │    │ ││  0x00007f5edc747447: jne    0x00007f5edc747812
          │    │ ││  0x00007f5edc74744d: mov    0x8(%r12,%r8,8),%r10d          ; implicit exception: dispatches to 0x00007f5edc747812
  0.02%   │    │ ││  0x00007f5edc747452: cmp    $0x2c20c,%r10d                 ;   {metadata(&apos;java/nio/DirectByteBuffer&apos;)}
          │    │ ││  0x00007f5edc747459: jne    0x00007f5edc747812
  0.02%   │    │ ││  0x00007f5edc74745f: lea    (%r12,%r8,8),%r10              ;*invokevirtual putFloat {reexecute=0 rethrow=0 return_oop=0}
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │    │ ││  0x00007f5edc747463: movzbl 0x29(%r10),%r11d
          │    │ ││  0x00007f5edc747468: test   %r11d,%r11d
          │    │ ││  0x00007f5edc74746b: jne    0x00007f5edc747812
          │    │ ││  0x00007f5edc747471: cmp    $0x7ffffffe,%r13d
          │    │ ││  0x00007f5edc747478: jg     0x00007f5edc7477d5             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%   │    │ ││  0x00007f5edc74747e: vmovd  %r8d,%xmm1
          │    │ ││  0x00007f5edc747483: vmovq  %rbp,%xmm0
  0.02%   │    │ ││  0x00007f5edc747488: mov    %rcx,0x70(%rsp)
          │    │ ││  0x00007f5edc74748d: mov    0x10(%r10),%r11
  0.08%   │    │ ││  0x00007f5edc747491: vmovq  %r10,%xmm4
          │    │ ││  0x00007f5edc747496: mov    %r11,%rbp                      ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
          │    │ ││                                                            ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
          │    │ ││                                                            ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
          │    │ ││                                                            ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │    │ ││  0x00007f5edc747499: mov    0x1c(%rdi),%r9d                ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
          │    │ ││                                                            ; - java.nio.Buffer::checkIndex@6 (line 687)
          │    │ ││                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │    │ ││  0x00007f5edc74749d: mov    0x10(%rdi),%r10
  0.06%   │    │ ││  0x00007f5edc7474a1: vmovq  %rdi,%xmm2
          │    │ ││  0x00007f5edc7474a6: mov    %r10,%rcx                      ;*invokevirtual getIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
          │    │ ││                                                            ; - jdk.internal.misc.Unsafe::getIntUnaligned@5 (line 3446)
          │    │ ││                                                            ; - java.nio.DirectByteBuffer::getFloat@9 (line 943)
          │    │ ││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%   │    │ ││  0x00007f5edc7474a9: vmovd  %r9d,%xmm6
          │    │ ││  0x00007f5edc7474ae: neg    %r9d
  0.02%   │    │ ││  0x00007f5edc7474b1: mov    0x1c(%rbx),%edi                ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
          │    │ ││                                                            ; - java.nio.Buffer::checkIndex@6 (line 687)
          │    │ ││                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │    │ ││  0x00007f5edc7474b4: vmovq  %rbx,%xmm3
  0.04%   │    │ ││  0x00007f5edc7474b9: mov    %r9d,%r11d
          │    │ ││  0x00007f5edc7474bc: sar    $0x1f,%r11d
  0.04%   │    │ ││  0x00007f5edc7474c0: and    %r9d,%r11d
          │    │ ││  0x00007f5edc7474c3: mov    $0x80000001,%r10d
          │    │ ││  0x00007f5edc7474c9: sub    %r11d,%r10d
          │    │ ││  0x00007f5edc7474cc: vmovd  %edi,%xmm5
  0.04%   │    │ ││  0x00007f5edc7474d0: neg    %edi
          │    │ ││  0x00007f5edc7474d2: mov    0x10(%rbx),%r11
          │    │ ││  0x00007f5edc7474d6: mov    %r11,%rbx                      ;*invokevirtual getIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
          │    │ ││                                                            ; - jdk.internal.misc.Unsafe::getIntUnaligned@5 (line 3446)
          │    │ ││                                                            ; - java.nio.DirectByteBuffer::getFloat@9 (line 943)
          │    │ ││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │    │ ││  0x00007f5edc7474d9: mov    %edi,%r8d
  0.02%   │    │ ││  0x00007f5edc7474dc: sar    $0x1f,%r8d
          │    │ ││  0x00007f5edc7474e0: and    %edi,%r8d
          │    │ ││  0x00007f5edc7474e3: mov    $0x80000001,%r11d
  0.02%   │    │ ││  0x00007f5edc7474e9: sub    %r8d,%r11d
          │    │ ││  0x00007f5edc7474ec: cmp    %r11d,%r10d
          │    │ ││  0x00007f5edc7474ef: cmovl  %r11d,%r10d
          │    │ ││  0x00007f5edc7474f3: vmovq  %xmm4,%r11
          │    │ ││  0x00007f5edc7474f8: mov    0x1c(%r11),%r14d               ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
          │    │ ││                                                            ; - java.nio.Buffer::checkIndex@6 (line 687)
          │    │ ││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%   │    │ ││  0x00007f5edc7474fc: mov    %r14d,%edx
          │    │ ││  0x00007f5edc7474ff: neg    %edx
  0.02%   │    │ ││  0x00007f5edc747501: mov    %edx,%r8d
  0.02%   │    │ ││  0x00007f5edc747504: sar    $0x1f,%r8d
  0.06%   │    │ ││  0x00007f5edc747508: and    %edx,%r8d
          │    │ ││  0x00007f5edc74750b: mov    $0x80000001,%eax
  0.04%   │    │ ││  0x00007f5edc747510: sub    %r8d,%eax
          │    │ ││  0x00007f5edc747513: cmp    %r10d,%eax
  0.02%   │    │ ││  0x00007f5edc747516: cmovl  %r10d,%eax
          │    │ ││  0x00007f5edc74751a: mov    $0x2,%r10d
  0.02%   │    │ ││  0x00007f5edc747520: cmp    %r10d,%eax
          │    │ ││  0x00007f5edc747523: mov    $0x2,%r11d
  0.14%   │    │ ││  0x00007f5edc747529: cmovl  %r11d,%eax
          │    │ ││  0x00007f5edc74752d: cmp    %r13d,%eax
  0.02%   │    │ ││  0x00007f5edc747530: cmovg  %r13d,%eax
          │    │ ││  0x00007f5edc747534: xor    %r10d,%r10d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%   │↗   │ ││  0x00007f5edc747537: vmovd  %xmm6,%r8d
          ││   │ ││  0x00007f5edc74753c: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
          ││   │ ││                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
          ││   │ ││                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%   ││   │ ││  0x00007f5edc74753f: cmp    $0x4,%r8d
          ││   │ ││  0x00007f5edc747543: jl     0x00007f5edc74784e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
          ││   │ ││                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
          ││   │ ││                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          ││   │ ││  0x00007f5edc747549: vmovd  %xmm5,%r8d
          ││   │ ││  0x00007f5edc74754e: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
          ││   │ ││                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
          ││   │ ││                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          ││   │ ││  0x00007f5edc747551: movslq %r10d,%r11                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          ││   │ ││                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
          ││   │ ││                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%   ││   │ ││  0x00007f5edc747554: mov    (%rcx,%r11,1),%esi
          ││   │ ││  0x00007f5edc747558: vmovd  %esi,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          ││   │ ││                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          ││   │ ││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%   ││   │ ││  0x00007f5edc74755c: cmp    $0x4,%r8d
          ││   │ ││  0x00007f5edc747560: jl     0x00007f5edc7478b2             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
          ││   │ ││                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
          ││   │ ││                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          ││   │ ││  0x00007f5edc747566: mov    (%rbx,%r11,1),%esi
          ││   │ ││  0x00007f5edc74756a: mov    %r14d,%r8d
          ││   │ ││  0x00007f5edc74756d: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
          ││   │ ││                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
          ││   │ ││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%   ││   │ ││  0x00007f5edc747570: vmovd  %esi,%xmm7
          ││   │ ││  0x00007f5edc747574: vaddss %xmm8,%xmm7,%xmm8              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          ││   │ ││  0x00007f5edc747579: cmp    $0x4,%r8d
          ││   │ ││  0x00007f5edc74757d: jl     0x00007f5edc7478fe             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
          ││   │ ││                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
          ││   │ ││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          ││   │ ││  0x00007f5edc747583: vmovd  %xmm8,%r8d
  0.04%   ││   │ ││  0x00007f5edc747588: mov    %r8d,0x0(%rbp,%r11,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
          ││   │ ││                                                            ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
          ││   │ ││                                                            ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
          ││   │ ││                                                            ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          ││   │ ││  0x00007f5edc74758d: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
          ││   │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%   ││   │ ││  0x00007f5edc747591: cmp    %eax,%r10d
          │╰   │ ││  0x00007f5edc747594: jl     0x00007f5edc747537             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
          │    │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │    │ ││  0x00007f5edc747596: mov    $0xfffffffc,%r8d
  0.02%   │    │ ││  0x00007f5edc74759c: sub    %edx,%r8d
  0.02%   │    │ ││  0x00007f5edc74759f: mov    $0xfffffffc,%r11d
  0.02%   │    │ ││  0x00007f5edc7475a5: sub    %r9d,%r11d
          │    │ ││  0x00007f5edc7475a8: mov    $0xfffffffc,%edx
  0.06%   │    │ ││  0x00007f5edc7475ad: sub    %edi,%edx
          │    │ ││  0x00007f5edc7475af: inc    %r8d
          │    │ ││  0x00007f5edc7475b2: inc    %edx
          │    │ ││  0x00007f5edc7475b4: inc    %r11d
          │    │ ││  0x00007f5edc7475b7: cmp    %r11d,%edx
          │    │ ││  0x00007f5edc7475ba: cmovg  %r11d,%edx
  0.02%   │    │ ││  0x00007f5edc7475be: cmp    %edx,%r8d
  0.02%   │    │ ││  0x00007f5edc7475c1: cmovg  %edx,%r8d
  0.02%   │    │ ││  0x00007f5edc7475c5: cmp    %r13d,%r8d
          │    │ ││  0x00007f5edc7475c8: cmovg  %r13d,%r8d
  0.04%   │    │ ││  0x00007f5edc7475cc: mov    %r8d,%edx
          │    │ ││  0x00007f5edc7475cf: add    $0xfffffff2,%edx
  0.06%   │    │ ││  0x00007f5edc7475d2: cmp    %edx,%r8d
          │    │ ││  0x00007f5edc7475d5: mov    $0x80000000,%r8d
  0.02%   │    │ ││  0x00007f5edc7475db: cmovl  %r8d,%edx
          │    │ ││  0x00007f5edc7475df: cmp    %edx,%r10d
          │ ╭  │ ││  0x00007f5edc7475e2: jge    0x00007f5edc747723
  0.08%   │ │  │ ││  0x00007f5edc7475e8: nopl   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │ │  │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
          │ │  │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  1.88%   │ │↗↗│ ││  0x00007f5edc7475f0: movslq %r10d,%r8
  1.00%   │ ││││ ││  0x00007f5edc7475f3: movslq %r10d,%rsi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │ ││││ ││                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
          │ ││││ ││                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
          │ ││││ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          │ ││││ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  1.68%   │ ││││ ││  0x00007f5edc7475f6: mov    %rcx,%r11
  1.27%   │ ││││ ││  0x00007f5edc7475f9: add    %r8,%r11
  1.74%   │ ││││ ││  0x00007f5edc7475fc: mov    (%rbx,%rsi,1),%r9d
  1.11%   │ ││││ ││  0x00007f5edc747600: vmovd  %r9d,%xmm7
  1.70%   │ ││││ ││  0x00007f5edc747605: mov    (%rcx,%rsi,1),%r9d
  1.11%   │ ││││ ││  0x00007f5edc747609: vmovd  %r9d,%xmm9
  1.43%   │ ││││ ││  0x00007f5edc74760e: vaddss %xmm7,%xmm9,%xmm7
  1.19%   │ ││││ ││  0x00007f5edc747612: mov    %rbx,%r9
  1.84%   │ ││││ ││  0x00007f5edc747615: add    %r8,%r9
  0.84%   │ ││││ ││  0x00007f5edc747618: mov    %rbp,%rdi
  1.51%   │ ││││ ││  0x00007f5edc74761b: add    %r8,%rdi
  0.98%   │ ││││ ││  0x00007f5edc74761e: vmovd  %xmm7,%r8d
  1.68%   │ ││││ ││  0x00007f5edc747623: mov    %r8d,0x0(%rbp,%rsi,1)
  0.92%   │ ││││ ││  0x00007f5edc747628: mov    0x2(%r9),%r8d
  1.68%   │ ││││ ││  0x00007f5edc74762c: vmovd  %r8d,%xmm8
  0.96%   │ ││││ ││  0x00007f5edc747631: mov    0x2(%r11),%r8d
  1.88%   │ ││││ ││  0x00007f5edc747635: vmovd  %r8d,%xmm7
  0.98%   │ ││││ ││  0x00007f5edc74763a: vaddss %xmm7,%xmm8,%xmm8
  1.74%   │ ││││ ││  0x00007f5edc74763e: vmovd  %xmm8,%r8d
  1.06%   │ ││││ ││  0x00007f5edc747643: mov    %r8d,0x2(%rdi)
  1.82%   │ ││││ ││  0x00007f5edc747647: mov    0x4(%r11),%r8d
  1.35%   │ ││││ ││  0x00007f5edc74764b: vmovd  %r8d,%xmm7
  1.68%   │ ││││ ││  0x00007f5edc747650: mov    0x4(%r9),%r8d
  1.00%   │ ││││ ││  0x00007f5edc747654: vmovd  %r8d,%xmm9
  1.86%   │ ││││ ││  0x00007f5edc747659: vaddss %xmm9,%xmm7,%xmm7
  1.13%   │ ││││ ││  0x00007f5edc74765e: vmovd  %xmm7,%r8d
  1.74%   │ ││││ ││  0x00007f5edc747663: mov    %r8d,0x4(%rdi)
  1.21%   │ ││││ ││  0x00007f5edc747667: mov    0x6(%r9),%r8d
  2.07%   │ ││││ ││  0x00007f5edc74766b: vmovd  %r8d,%xmm8
  1.25%   │ ││││ ││  0x00007f5edc747670: mov    0x6(%r11),%r8d
  1.51%   │ ││││ ││  0x00007f5edc747674: vmovd  %r8d,%xmm7
  1.02%   │ ││││ ││  0x00007f5edc747679: vaddss %xmm7,%xmm8,%xmm8
  1.88%   │ ││││ ││  0x00007f5edc74767d: vmovd  %xmm8,%r8d
  0.74%   │ ││││ ││  0x00007f5edc747682: mov    %r8d,0x6(%rdi)
  1.86%   │ ││││ ││  0x00007f5edc747686: mov    0x8(%r11),%r8d
  1.04%   │ ││││ ││  0x00007f5edc74768a: vmovd  %r8d,%xmm7
  1.82%   │ ││││ ││  0x00007f5edc74768f: mov    0x8(%r9),%r8d
  1.13%   │ ││││ ││  0x00007f5edc747693: vmovd  %r8d,%xmm9
  1.47%   │ ││││ ││  0x00007f5edc747698: vaddss %xmm9,%xmm7,%xmm7
  0.92%   │ ││││ ││  0x00007f5edc74769d: vmovd  %xmm7,%r8d
  1.88%   │ ││││ ││  0x00007f5edc7476a2: mov    %r8d,0x8(%rdi)
  1.11%   │ ││││ ││  0x00007f5edc7476a6: mov    0xa(%r9),%r8d
  1.52%   │ ││││ ││  0x00007f5edc7476aa: vmovd  %r8d,%xmm8
  1.19%   │ ││││ ││  0x00007f5edc7476af: mov    0xa(%r11),%r8d
  1.60%   │ ││││ ││  0x00007f5edc7476b3: vmovd  %r8d,%xmm7
  1.19%   │ ││││ ││  0x00007f5edc7476b8: vaddss %xmm7,%xmm8,%xmm8
  1.78%   │ ││││ ││  0x00007f5edc7476bc: vmovd  %xmm8,%r8d
  1.06%   │ ││││ ││  0x00007f5edc7476c1: mov    %r8d,0xa(%rdi)
  1.86%   │ ││││ ││  0x00007f5edc7476c5: mov    0xc(%r11),%r8d
  1.09%   │ ││││ ││  0x00007f5edc7476c9: vmovd  %r8d,%xmm7
  1.62%   │ ││││ ││  0x00007f5edc7476ce: mov    0xc(%r9),%r8d
  0.92%   │ ││││ ││  0x00007f5edc7476d2: vmovd  %r8d,%xmm9
  1.66%   │ ││││ ││  0x00007f5edc7476d7: vaddss %xmm9,%xmm7,%xmm7
  1.19%   │ ││││ ││  0x00007f5edc7476dc: vmovd  %xmm7,%r8d
  1.56%   │ ││││ ││  0x00007f5edc7476e1: mov    %r8d,0xc(%rdi)
  1.31%   │ ││││ ││  0x00007f5edc7476e5: mov    0xe(%r11),%eax
  1.76%   │ ││││ ││  0x00007f5edc7476e9: vmovd  %eax,%xmm8
  1.04%   │ ││││ ││  0x00007f5edc7476ed: mov    0xe(%r9),%r11d
  1.41%   │ ││││ ││  0x00007f5edc7476f1: vmovd  %r11d,%xmm7
  1.31%   │ ││││ ││  0x00007f5edc7476f6: vaddss %xmm7,%xmm8,%xmm8
  1.64%   │ ││││ ││  0x00007f5edc7476fa: vmovd  %xmm8,%r8d
  1.31%   │ ││││ ││  0x00007f5edc7476ff: mov    %r8d,0xe(%rdi)                 ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
          │ ││││ ││                                                            ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
          │ ││││ ││                                                            ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
          │ ││││ ││                                                            ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
          │ ││││ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
          │ ││││ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  1.80%   │ ││││ ││  0x00007f5edc747703: add    $0x10,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │ ││││ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
          │ ││││ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.70%   │ ││││ ││  0x00007f5edc747707: cmp    %edx,%r10d
          │ │╰││ ││  0x00007f5edc74770a: jl     0x00007f5edc7475f0             ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
          │ │ ││ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │ │ ││ ││  0x00007f5edc747710: mov    0x108(%r15),%r11               ; ImmutableOopMap{xmm1=NarrowOop xmm2=Oop xmm3=Oop xmm4=Oop [112]=Oop [128]=Oop [0]=Oop [16]=Oop [24]=Oop }
          │ │ ││ ││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │ │ ││ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
          │ │ ││ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%   │ │ ││ ││  0x00007f5edc747717: test   %eax,(%r11)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
          │ │ ││ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │ │ ││ ││                                                            ;   {poll}
  0.20%   │ │ ││ ││  0x00007f5edc74771a: cmp    %edx,%r10d
          │ │ ╰│ ││  0x00007f5edc74771d: jl     0x00007f5edc7475f0
          │ ↘  │ ││  0x00007f5edc747723: cmp    %r13d,%r10d
          │    ╰ ││  0x00007f5edc747726: jge    0x00007f5edc7473a5             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │      ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
          │      ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%   │     ↗││  0x00007f5edc74772c: vmovd  %xmm6,%r8d
  0.02%   │     │││  0x00007f5edc747731: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
          │     │││                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
          │     │││                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%   │     │││  0x00007f5edc747734: cmp    $0x4,%r8d
          │     │││  0x00007f5edc747738: jl     0x00007f5edc74784e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
          │     │││                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
          │     │││                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%   │     │││  0x00007f5edc74773e: vmovd  %xmm5,%r8d
  0.04%   │     │││  0x00007f5edc747743: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
          │     │││                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
          │     │││                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │     │││  0x00007f5edc747746: movslq %r10d,%rdi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │     │││                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
          │     │││                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%   │     │││  0x00007f5edc747749: mov    (%rcx,%rdi,1),%r9d
  0.14%   │     │││  0x00007f5edc74774d: vmovd  %r9d,%xmm7                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │     │││                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │     │││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%   │     │││  0x00007f5edc747752: cmp    $0x4,%r8d
          │     │││  0x00007f5edc747756: jl     0x00007f5edc7478b8             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
          │     │││                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
          │     │││                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.14%   │     │││  0x00007f5edc74775c: mov    (%rbx,%rdi,1),%r11d
  0.08%   │     │││  0x00007f5edc747760: mov    %r14d,%r8d
  0.08%   │     │││  0x00007f5edc747763: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
          │     │││                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
          │     │││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%   │     │││  0x00007f5edc747766: vmovd  %r11d,%xmm9
          │     │││  0x00007f5edc74776b: vaddss %xmm7,%xmm9,%xmm7              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.29%   │     │││  0x00007f5edc74776f: cmp    $0x4,%r8d
          │     │││  0x00007f5edc747773: jl     0x00007f5edc747904             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
          │     │││                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
          │     │││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%   │     │││  0x00007f5edc747779: vmovd  %xmm7,%r8d
  0.10%   │     │││  0x00007f5edc74777e: mov    %r8d,0x0(%rbp,%rdi,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
          │     │││                                                            ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
          │     │││                                                            ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
          │     │││                                                            ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.23%   │     │││  0x00007f5edc747783: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
          │     │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%   │     │││  0x00007f5edc747787: cmp    %r13d,%r10d
          │     ╰││  0x00007f5edc74778a: jl     0x00007f5edc74772c             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │      ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
          │      ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │      ╰│  0x00007f5edc74778c: jmpq   0x00007f5edc7473a5
          ↘       │  0x00007f5edc747791: mov    %rcx,0x70(%rsp)
                  ╰  0x00007f5edc747796: jmpq   0x00007f5edc7473af
                     0x00007f5edc74779b: mov    $0x1,%ebp                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@38 (line 148)
....................................................................................................
 95.95%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.95%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (989 bytes) 
  2.91%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.18%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.16%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 (20 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (4 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.33%  <...other 17 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.95%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 
  3.58%   [kernel.kallsyms]  [unknown] 
  0.22%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 
  0.10%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN20ThreadSafepointState23examine_state_of_threadEv 
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%         interpreter  invoke return entry points  
  0.02%           libjvm.so  _ZN28G1YoungRemSetSamplingClosure14do_heap_regionEP10HeapRegion 
  0.02%         interpreter  new  187 new  
  0.02%           libjvm.so  _ZN7Monitor5IWaitEP6Threadl 
  0.02%         interpreter  invokeinterface  185 invokeinterface  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.17%                  c2
  3.58%   [kernel.kallsyms]
  0.18%         interpreter
  0.06%           libjvm.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53083 total address lines.
Perf output processed (skipped 6.637 seconds):
 Column 1: cycles (5067 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (767 bytes) 

                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007fe323f031e3: movzbl 0x29(%r10),%r11d
                0x00007fe323f031e8: test   %r11d,%r11d
                0x00007fe323f031eb: jne    0x00007fe323f03592
                0x00007fe323f031f1: cmp    $0x7ffffffe,%r13d
                0x00007fe323f031f8: jg     0x00007fe323f03555             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007fe323f031fe: vmovd  %r8d,%xmm1
                0x00007fe323f03203: vmovq  %rbp,%xmm0
  0.04%         0x00007fe323f03208: mov    %rcx,0x70(%rsp)
                0x00007fe323f0320d: mov    0x10(%r10),%r11
                0x00007fe323f03211: vmovq  %r10,%xmm4
                0x00007fe323f03216: mov    %r11,%rbp                      ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
                                                                          ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
                                                                          ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%         0x00007fe323f03219: mov    0x1c(%rdi),%r9d                ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.nio.Buffer::checkIndex@6 (line 687)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007fe323f0321d: mov    0x10(%rdi),%r10
                0x00007fe323f03221: vmovq  %rdi,%xmm2
                0x00007fe323f03226: mov    %r10,%rcx                      ;*invokevirtual getIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.misc.Unsafe::getIntUnaligned@5 (line 3446)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@9 (line 943)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%         0x00007fe323f03229: vmovd  %r9d,%xmm6
                0x00007fe323f0322e: neg    %r9d
                0x00007fe323f03231: mov    0x1c(%rbx),%edi                ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.nio.Buffer::checkIndex@6 (line 687)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007fe323f03234: vmovq  %rbx,%xmm3
  0.02%         0x00007fe323f03239: mov    %r9d,%r11d
                0x00007fe323f0323c: sar    $0x1f,%r11d
                0x00007fe323f03240: and    %r9d,%r11d
                0x00007fe323f03243: mov    $0x80000001,%r10d
  0.02%         0x00007fe323f03249: sub    %r11d,%r10d
                0x00007fe323f0324c: vmovd  %edi,%xmm5
                0x00007fe323f03250: neg    %edi
                0x00007fe323f03252: mov    0x10(%rbx),%r11
  0.04%         0x00007fe323f03256: mov    %r11,%rbx                      ;*invokevirtual getIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.misc.Unsafe::getIntUnaligned@5 (line 3446)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@9 (line 943)
                                                                          ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007fe323f03259: mov    %edi,%r8d
                0x00007fe323f0325c: sar    $0x1f,%r8d
                0x00007fe323f03260: and    %edi,%r8d
  0.02%         0x00007fe323f03263: mov    $0x80000001,%r11d
                0x00007fe323f03269: sub    %r8d,%r11d
                0x00007fe323f0326c: cmp    %r11d,%r10d
                0x00007fe323f0326f: cmovl  %r11d,%r10d
  0.04%         0x00007fe323f03273: vmovq  %xmm4,%r11
                0x00007fe323f03278: mov    0x1c(%r11),%r14d               ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.nio.Buffer::checkIndex@6 (line 687)
                                                                          ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007fe323f0327c: mov    %r14d,%edx
                0x00007fe323f0327f: neg    %edx
  0.04%         0x00007fe323f03281: mov    %edx,%r8d
                0x00007fe323f03284: sar    $0x1f,%r8d
                0x00007fe323f03288: and    %edx,%r8d
                0x00007fe323f0328b: mov    $0x80000001,%eax
  0.02%         0x00007fe323f03290: sub    %r8d,%eax
                0x00007fe323f03293: cmp    %r10d,%eax
                0x00007fe323f03296: cmovl  %r10d,%eax
                0x00007fe323f0329a: mov    $0x2,%r10d
                0x00007fe323f032a0: cmp    %r10d,%eax
                0x00007fe323f032a3: mov    $0x2,%r11d
                0x00007fe323f032a9: cmovl  %r11d,%eax
                0x00007fe323f032ad: cmp    %r13d,%eax
  0.10%         0x00007fe323f032b0: cmovg  %r13d,%eax
                0x00007fe323f032b4: xor    %r10d,%r10d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         ↗      0x00007fe323f032b7: vmovd  %xmm6,%r8d
         │      0x00007fe323f032bc: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@10 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%  │      0x00007fe323f032bf: cmp    $0x4,%r8d
         │      0x00007fe323f032c3: jl     0x00007fe323f035ce             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@11 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007fe323f032c9: vmovd  %xmm5,%r8d
         │      0x00007fe323f032ce: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@10 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007fe323f032d1: movslq %r10d,%r11                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.DirectByteBuffer::ix@5 (line 258)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%  │      0x00007fe323f032d4: mov    (%rcx,%r11,1),%esi
         │      0x00007fe323f032d8: vmovd  %esi,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007fe323f032dc: cmp    $0x4,%r8d
         │      0x00007fe323f032e0: jl     0x00007fe323f03632             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@11 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007fe323f032e6: mov    (%rbx,%r11,1),%esi
  0.04%  │      0x00007fe323f032ea: mov    %r14d,%r8d
         │      0x00007fe323f032ed: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@10 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007fe323f032f0: vmovd  %esi,%xmm7
         │      0x00007fe323f032f4: vaddss %xmm8,%xmm7,%xmm8              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%  │      0x00007fe323f032f9: cmp    $0x4,%r8d
         │      0x00007fe323f032fd: jl     0x00007fe323f0367e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - java.nio.Buffer::checkIndex@11 (line 687)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007fe323f03303: vmovd  %xmm8,%r8d
         │      0x00007fe323f03308: mov    %r8d,0x0(%rbp,%r11,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
         │                                                                ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │      0x00007fe323f0330d: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%  │      0x00007fe323f03311: cmp    %eax,%r10d
         ╰      0x00007fe323f03314: jl     0x00007fe323f032b7             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007fe323f03316: mov    $0xfffffffc,%r8d
                0x00007fe323f0331c: sub    %edx,%r8d
                0x00007fe323f0331f: mov    $0xfffffffc,%r11d
  0.04%         0x00007fe323f03325: sub    %r9d,%r11d
                0x00007fe323f03328: mov    $0xfffffffc,%edx
                0x00007fe323f0332d: sub    %edi,%edx
                0x00007fe323f0332f: inc    %r8d
  0.04%         0x00007fe323f03332: inc    %edx
                0x00007fe323f03334: inc    %r11d
                0x00007fe323f03337: cmp    %r11d,%edx
                0x00007fe323f0333a: cmovg  %r11d,%edx
  0.02%         0x00007fe323f0333e: cmp    %edx,%r8d
                0x00007fe323f03341: cmovg  %edx,%r8d
                0x00007fe323f03345: cmp    %r13d,%r8d
                0x00007fe323f03348: cmovg  %r13d,%r8d
  0.04%         0x00007fe323f0334c: mov    %r8d,%edx
                0x00007fe323f0334f: add    $0xfffffff2,%edx
                0x00007fe323f03352: cmp    %edx,%r8d
                0x00007fe323f03355: mov    $0x80000000,%r8d
  0.08%         0x00007fe323f0335b: cmovl  %r8d,%edx
                0x00007fe323f0335f: cmp    %edx,%r10d
          ╭     0x00007fe323f03362: jge    0x00007fe323f034a3
          │     0x00007fe323f03368: nopl   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
          │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.12%   │↗↗   0x00007fe323f03370: movslq %r10d,%r8
  2.64%   │││   0x00007fe323f03373: movslq %r10d,%rsi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │││                                                             ; - java.nio.DirectByteBuffer::ix@5 (line 258)
          │││                                                             ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%   │││   0x00007fe323f03376: mov    %rcx,%r11
  2.80%   │││   0x00007fe323f03379: add    %r8,%r11
  0.22%   │││   0x00007fe323f0337c: mov    (%rbx,%rsi,1),%r9d
  3.00%   │││   0x00007fe323f03380: vmovd  %r9d,%xmm7
  0.08%   │││   0x00007fe323f03385: mov    (%rcx,%rsi,1),%r9d
  2.84%   │││   0x00007fe323f03389: vmovd  %r9d,%xmm9
  0.12%   │││   0x00007fe323f0338e: vaddss %xmm7,%xmm9,%xmm7
  3.04%   │││   0x00007fe323f03392: mov    %rbx,%r9
  0.16%   │││   0x00007fe323f03395: add    %r8,%r9
  2.57%   │││   0x00007fe323f03398: mov    %rbp,%rdi
  0.08%   │││   0x00007fe323f0339b: add    %r8,%rdi
  2.62%   │││   0x00007fe323f0339e: vmovd  %xmm7,%r8d
  0.12%   │││   0x00007fe323f033a3: mov    %r8d,0x0(%rbp,%rsi,1)
  2.53%   │││   0x00007fe323f033a8: mov    0x2(%r9),%r8d
  0.14%   │││   0x00007fe323f033ac: vmovd  %r8d,%xmm8
  2.45%   │││   0x00007fe323f033b1: mov    0x2(%r11),%r8d
  0.16%   │││   0x00007fe323f033b5: vmovd  %r8d,%xmm7
  2.51%   │││   0x00007fe323f033ba: vaddss %xmm7,%xmm8,%xmm8
  0.10%   │││   0x00007fe323f033be: vmovd  %xmm8,%r8d
  2.61%   │││   0x00007fe323f033c3: mov    %r8d,0x2(%rdi)
  0.20%   │││   0x00007fe323f033c7: mov    0x4(%r11),%r8d
  2.43%   │││   0x00007fe323f033cb: vmovd  %r8d,%xmm7
  0.16%   │││   0x00007fe323f033d0: mov    0x4(%r9),%r8d
  2.57%   │││   0x00007fe323f033d4: vmovd  %r8d,%xmm9
  0.22%   │││   0x00007fe323f033d9: vaddss %xmm9,%xmm7,%xmm7
  2.61%   │││   0x00007fe323f033de: vmovd  %xmm7,%r8d
  0.10%   │││   0x00007fe323f033e3: mov    %r8d,0x4(%rdi)
  2.62%   │││   0x00007fe323f033e7: mov    0x6(%r9),%r8d
  0.10%   │││   0x00007fe323f033eb: vmovd  %r8d,%xmm8
  2.59%   │││   0x00007fe323f033f0: mov    0x6(%r11),%r8d
  0.10%   │││   0x00007fe323f033f4: vmovd  %r8d,%xmm7
  2.66%   │││   0x00007fe323f033f9: vaddss %xmm7,%xmm8,%xmm8
  0.20%   │││   0x00007fe323f033fd: vmovd  %xmm8,%r8d
  2.72%   │││   0x00007fe323f03402: mov    %r8d,0x6(%rdi)
  0.18%   │││   0x00007fe323f03406: mov    0x8(%r11),%r8d
  2.53%   │││   0x00007fe323f0340a: vmovd  %r8d,%xmm7
  0.18%   │││   0x00007fe323f0340f: mov    0x8(%r9),%r8d
  2.66%   │││   0x00007fe323f03413: vmovd  %r8d,%xmm9
  0.14%   │││   0x00007fe323f03418: vaddss %xmm9,%xmm7,%xmm7
  2.86%   │││   0x00007fe323f0341d: vmovd  %xmm7,%r8d
  0.10%   │││   0x00007fe323f03422: mov    %r8d,0x8(%rdi)
  2.59%   │││   0x00007fe323f03426: mov    0xa(%r9),%r8d
  0.22%   │││   0x00007fe323f0342a: vmovd  %r8d,%xmm8
  2.59%   │││   0x00007fe323f0342f: mov    0xa(%r11),%r8d
  0.10%   │││   0x00007fe323f03433: vmovd  %r8d,%xmm7
  2.59%   │││   0x00007fe323f03438: vaddss %xmm7,%xmm8,%xmm8
  0.04%   │││   0x00007fe323f0343c: vmovd  %xmm8,%r8d
  2.68%   │││   0x00007fe323f03441: mov    %r8d,0xa(%rdi)
  0.12%   │││   0x00007fe323f03445: mov    0xc(%r11),%r8d
  2.62%   │││   0x00007fe323f03449: vmovd  %r8d,%xmm7
  0.24%   │││   0x00007fe323f0344e: mov    0xc(%r9),%r8d
  3.22%   │││   0x00007fe323f03452: vmovd  %r8d,%xmm9
  0.18%   │││   0x00007fe323f03457: vaddss %xmm9,%xmm7,%xmm7
  2.61%   │││   0x00007fe323f0345c: vmovd  %xmm7,%r8d
  0.34%   │││   0x00007fe323f03461: mov    %r8d,0xc(%rdi)
  3.83%   │││   0x00007fe323f03465: mov    0xe(%r11),%eax
  0.06%   │││   0x00007fe323f03469: vmovd  %eax,%xmm8
  2.74%   │││   0x00007fe323f0346d: mov    0xe(%r9),%r11d
  0.08%   │││   0x00007fe323f03471: vmovd  %r11d,%xmm7
  2.90%   │││   0x00007fe323f03476: vaddss %xmm7,%xmm8,%xmm8
  0.28%   │││   0x00007fe323f0347a: vmovd  %xmm8,%r8d
  2.39%   │││   0x00007fe323f0347f: mov    %r8d,0xe(%rdi)                 ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
          │││                                                             ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
          │││                                                             ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
          │││                                                             ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.16%   │││   0x00007fe323f03483: add    $0x10,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
          │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.53%   │││   0x00007fe323f03487: cmp    %edx,%r10d
          │╰│   0x00007fe323f0348a: jl     0x00007fe323f03370             ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │ │   0x00007fe323f03490: mov    0x108(%r15),%r11               ; ImmutableOopMap{xmm1=NarrowOop xmm2=Oop xmm3=Oop xmm4=Oop [112]=Oop [128]=Oop [0]=Oop [16]=Oop [24]=Oop }
          │ │                                                             ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │ │   0x00007fe323f03497: test   %eax,(%r11)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
          │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
          │ │                                                             ;   {poll}
  0.04%   │ │   0x00007fe323f0349a: cmp    %edx,%r10d
          │ ╰   0x00007fe323f0349d: jl     0x00007fe323f03370
  0.04%   ↘     0x00007fe323f034a3: cmp    %r13d,%r10d
                0x00007fe323f034a6: jge    0x00007fe323f03125             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%      ↗  0x00007fe323f034ac: vmovd  %xmm6,%r8d
  0.14%      │  0x00007fe323f034b1: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%      │  0x00007fe323f034b4: cmp    $0x4,%r8d
             │  0x00007fe323f034b8: jl     0x00007fe323f035ce             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.12%      │  0x00007fe323f034be: vmovd  %xmm5,%r8d
  0.10%      │  0x00007fe323f034c3: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%      │  0x00007fe323f034c6: movslq %r10d,%rdi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%      │  0x00007fe323f034c9: mov    (%rcx,%rdi,1),%r9d
  0.08%      │  0x00007fe323f034cd: vmovd  %r9d,%xmm7                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%      │  0x00007fe323f034d2: cmp    $0x4,%r8d
             │  0x00007fe323f034d6: jl     0x00007fe323f03638             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%      │  0x00007fe323f034dc: mov    (%rbx,%rdi,1),%r11d
  0.10%      │  0x00007fe323f034e0: mov    %r14d,%r8d
  0.10%      │  0x00007fe323f034e3: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%      │  0x00007fe323f034e6: vmovd  %r11d,%xmm9
  0.14%      │  0x00007fe323f034eb: vaddss %xmm7,%xmm9,%xmm7              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%      │  0x00007fe323f034ef: cmp    $0x4,%r8d
             │  0x00007fe323f034f3: jl     0x00007fe323f03684             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%      │  0x00007fe323f034f9: vmovd  %xmm7,%r8d
  0.06%      │  0x00007fe323f034fe: mov    %r8d,0x0(%rbp,%rdi,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
             │                                                            ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%      │  0x00007fe323f03503: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%      │  0x00007fe323f03507: cmp    %r13d,%r10d
             ╰  0x00007fe323f0350a: jl     0x00007fe323f034ac             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
                0x00007fe323f0350c: jmpq   0x00007fe323f03125
                0x00007fe323f03511: mov    %rcx,0x70(%rsp)
                0x00007fe323f03516: jmpq   0x00007fe323f0312f
                0x00007fe323f0351b: mov    $0x1,%ebp                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@38 (line 148)
....................................................................................................
 96.55%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.55%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (767 bytes) 
  2.11%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.37%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (163 bytes) 
  0.14%   [kernel.kallsyms]  [unknown] (67 bytes) 
  0.12%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 (38 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (9 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  nofast_putfield  235 nofast_putfield  (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.28%  <...other 14 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.92%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 
  2.64%   [kernel.kallsyms]  [unknown] 
  0.12%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 
  0.04%         interpreter  nofast_putfield  235 nofast_putfield  
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%           libjvm.so  _ZN16PlaceholderTable12find_and_addEijP6SymbolP15ClassLoaderDataNS_15classloadActionES1_P6Thread 
  0.02%           libjvm.so  JVM_Clone 
  0.02%         interpreter  aaload  50 aaload  
  0.02%           libjvm.so  _ZN15ClassLoaderData18metaspace_non_nullEv 
  0.02%           libjvm.so  _ZN7Monitor28lock_without_safepoint_checkEv 
  0.02%         interpreter  method entry point (kind = native)  
  0.02%         interpreter  nofast_getfield  234 nofast_getfield  
  0.02%         interpreter  nofast_aload_0  236 nofast_aload_0  
  0.02%           libjvm.so  _ZN9JavaCalls11call_helperEP9JavaValueRK12methodHandleP17JavaCallArgumentsP6Thread 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.04%                  c2
  2.64%   [kernel.kallsyms]
  0.16%         interpreter
  0.14%           libjvm.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53083 total address lines.
Perf output processed (skipped 6.656 seconds):
 Column 1: cycles (5081 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (506 bytes) 

                                                                         ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007f3de38b1c03: vmovd  %xmm8,%r8d
               0x00007f3de38b1c08: mov    %r8d,0x0(%rbp,%r11,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
                                                                         ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
                                                                         ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%        0x00007f3de38b1c0d: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007f3de38b1c11: cmp    %eax,%r10d
               0x00007f3de38b1c14: jl     0x00007f3de38b1bb7             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007f3de38b1c16: mov    $0xfffffffc,%r8d
               0x00007f3de38b1c1c: sub    %edx,%r8d
  0.02%        0x00007f3de38b1c1f: mov    $0xfffffffc,%r11d
               0x00007f3de38b1c25: sub    %r9d,%r11d
               0x00007f3de38b1c28: mov    $0xfffffffc,%edx
               0x00007f3de38b1c2d: sub    %edi,%edx
               0x00007f3de38b1c2f: inc    %r8d
               0x00007f3de38b1c32: inc    %edx
               0x00007f3de38b1c34: inc    %r11d
               0x00007f3de38b1c37: cmp    %r11d,%edx
  0.02%        0x00007f3de38b1c3a: cmovg  %r11d,%edx
               0x00007f3de38b1c3e: cmp    %edx,%r8d
               0x00007f3de38b1c41: cmovg  %edx,%r8d
               0x00007f3de38b1c45: cmp    %r13d,%r8d
  0.06%        0x00007f3de38b1c48: cmovg  %r13d,%r8d
               0x00007f3de38b1c4c: mov    %r8d,%edx
               0x00007f3de38b1c4f: add    $0xfffffff2,%edx
               0x00007f3de38b1c52: cmp    %edx,%r8d
  0.04%        0x00007f3de38b1c55: mov    $0x80000000,%r8d
               0x00007f3de38b1c5b: cmovl  %r8d,%edx
               0x00007f3de38b1c5f: cmp    %edx,%r10d
         ╭     0x00007f3de38b1c62: jge    0x00007f3de38b1da3
         │     0x00007f3de38b1c68: nopl   0x0(%rax,%rax,1)               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
         │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.52%  │↗↗   0x00007f3de38b1c70: movslq %r10d,%r8
  0.04%  │││   0x00007f3de38b1c73: movslq %r10d,%rsi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
         │││                                                             ; - java.nio.DirectByteBuffer::ix@5 (line 258)
         │││                                                             ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  2.64%  │││   0x00007f3de38b1c76: mov    %rcx,%r11
  0.04%  │││   0x00007f3de38b1c79: add    %r8,%r11
  2.44%  │││   0x00007f3de38b1c7c: mov    (%rbx,%rsi,1),%r9d
  0.02%  │││   0x00007f3de38b1c80: vmovd  %r9d,%xmm7
  2.68%  │││   0x00007f3de38b1c85: mov    (%rcx,%rsi,1),%r9d
  0.06%  │││   0x00007f3de38b1c89: vmovd  %r9d,%xmm9
  3.03%  │││   0x00007f3de38b1c8e: vaddss %xmm7,%xmm9,%xmm7
  0.10%  │││   0x00007f3de38b1c92: mov    %rbx,%r9
  2.34%  │││   0x00007f3de38b1c95: add    %r8,%r9
  0.10%  │││   0x00007f3de38b1c98: mov    %rbp,%rdi
  2.78%  │││   0x00007f3de38b1c9b: add    %r8,%rdi
  0.08%  │││   0x00007f3de38b1c9e: vmovd  %xmm7,%r8d
  2.62%  │││   0x00007f3de38b1ca3: mov    %r8d,0x0(%rbp,%rsi,1)
  0.10%  │││   0x00007f3de38b1ca8: mov    0x2(%r9),%r8d
  2.42%  │││   0x00007f3de38b1cac: vmovd  %r8d,%xmm8
  0.04%  │││   0x00007f3de38b1cb1: mov    0x2(%r11),%r8d
  2.46%  │││   0x00007f3de38b1cb5: vmovd  %r8d,%xmm7
  0.10%  │││   0x00007f3de38b1cba: vaddss %xmm7,%xmm8,%xmm8
  3.09%  │││   0x00007f3de38b1cbe: vmovd  %xmm8,%r8d
  0.06%  │││   0x00007f3de38b1cc3: mov    %r8d,0x2(%rdi)
  2.89%  │││   0x00007f3de38b1cc7: mov    0x4(%r11),%r8d
  0.02%  │││   0x00007f3de38b1ccb: vmovd  %r8d,%xmm7
  2.13%  │││   0x00007f3de38b1cd0: mov    0x4(%r9),%r8d
  0.02%  │││   0x00007f3de38b1cd4: vmovd  %r8d,%xmm9
  2.66%  │││   0x00007f3de38b1cd9: vaddss %xmm9,%xmm7,%xmm7
  0.02%  │││   0x00007f3de38b1cde: vmovd  %xmm7,%r8d
  2.68%  │││   0x00007f3de38b1ce3: mov    %r8d,0x4(%rdi)
  0.10%  │││   0x00007f3de38b1ce7: mov    0x6(%r9),%r8d
  2.79%  │││   0x00007f3de38b1ceb: vmovd  %r8d,%xmm8
  0.02%  │││   0x00007f3de38b1cf0: mov    0x6(%r11),%r8d
  3.17%  │││   0x00007f3de38b1cf4: vmovd  %r8d,%xmm7
  0.02%  │││   0x00007f3de38b1cf9: vaddss %xmm7,%xmm8,%xmm8
  2.64%  │││   0x00007f3de38b1cfd: vmovd  %xmm8,%r8d
  0.10%  │││   0x00007f3de38b1d02: mov    %r8d,0x6(%rdi)
  2.56%  │││   0x00007f3de38b1d06: mov    0x8(%r11),%r8d
  0.02%  │││   0x00007f3de38b1d0a: vmovd  %r8d,%xmm7
  2.85%  │││   0x00007f3de38b1d0f: mov    0x8(%r9),%r8d
  0.02%  │││   0x00007f3de38b1d13: vmovd  %r8d,%xmm9
  2.89%  │││   0x00007f3de38b1d18: vaddss %xmm9,%xmm7,%xmm7
  0.06%  │││   0x00007f3de38b1d1d: vmovd  %xmm7,%r8d
  2.56%  │││   0x00007f3de38b1d22: mov    %r8d,0x8(%rdi)
  0.12%  │││   0x00007f3de38b1d26: mov    0xa(%r9),%r8d
  2.74%  │││   0x00007f3de38b1d2a: vmovd  %r8d,%xmm8
  0.04%  │││   0x00007f3de38b1d2f: mov    0xa(%r11),%r8d
  2.44%  │││   0x00007f3de38b1d33: vmovd  %r8d,%xmm7
  0.06%  │││   0x00007f3de38b1d38: vaddss %xmm7,%xmm8,%xmm8
  2.50%  │││   0x00007f3de38b1d3c: vmovd  %xmm8,%r8d
  0.02%  │││   0x00007f3de38b1d41: mov    %r8d,0xa(%rdi)
  2.81%  │││   0x00007f3de38b1d45: mov    0xc(%r11),%r8d
  0.12%  │││   0x00007f3de38b1d49: vmovd  %r8d,%xmm7
  2.62%  │││   0x00007f3de38b1d4e: mov    0xc(%r9),%r8d
  0.06%  │││   0x00007f3de38b1d52: vmovd  %r8d,%xmm9
  2.64%  │││   0x00007f3de38b1d57: vaddss %xmm9,%xmm7,%xmm7
  0.20%  │││   0x00007f3de38b1d5c: vmovd  %xmm7,%r8d
  2.93%  │││   0x00007f3de38b1d61: mov    %r8d,0xc(%rdi)
  1.26%  │││   0x00007f3de38b1d65: mov    0xe(%r11),%eax
  3.15%  │││   0x00007f3de38b1d69: vmovd  %eax,%xmm8
         │││   0x00007f3de38b1d6d: mov    0xe(%r9),%r11d
  3.15%  │││   0x00007f3de38b1d71: vmovd  %r11d,%xmm7
  0.12%  │││   0x00007f3de38b1d76: vaddss %xmm7,%xmm8,%xmm8
  2.89%  │││   0x00007f3de38b1d7a: vmovd  %xmm8,%r8d
         │││   0x00007f3de38b1d7f: mov    %r8d,0xe(%rdi)                 ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
         │││                                                             ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
         │││                                                             ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
         │││                                                             ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  3.29%  │││   0x00007f3de38b1d83: add    $0x10,%r10d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
         │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.12%  │││   0x00007f3de38b1d87: cmp    %edx,%r10d
         │╰│   0x00007f3de38b1d8a: jl     0x00007f3de38b1c70             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │ │   0x00007f3de38b1d90: mov    0x108(%r15),%r11               ; ImmutableOopMap{xmm1=NarrowOop xmm2=Oop xmm3=Oop xmm4=Oop [112]=Oop [128]=Oop [0]=Oop [16]=Oop [24]=Oop }
         │ │                                                             ;*goto {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │ │   0x00007f3de38b1d97: test   %eax,(%r11)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@41 (line 141)
         │ │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
         │ │                                                             ;   {poll}
  0.43%  │ │   0x00007f3de38b1d9a: cmp    %edx,%r10d
         │ ╰   0x00007f3de38b1d9d: jl     0x00007f3de38b1c70
         ↘     0x00007f3de38b1da3: cmp    %r13d,%r10d
               0x00007f3de38b1da6: jge    0x00007f3de38b1a25             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@12 (line 142)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%     ↗  0x00007f3de38b1dac: vmovd  %xmm6,%r8d
            │  0x00007f3de38b1db1: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.18%     │  0x00007f3de38b1db4: cmp    $0x4,%r8d
            │  0x00007f3de38b1db8: jl     0x00007f3de38b1ece             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%     │  0x00007f3de38b1dbe: vmovd  %xmm5,%r8d
  0.06%     │  0x00007f3de38b1dc3: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.04%     │  0x00007f3de38b1dc6: movslq %r10d,%rdi                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%     │  0x00007f3de38b1dc9: mov    (%rcx,%rdi,1),%r9d
  0.08%     │  0x00007f3de38b1dcd: vmovd  %r9d,%xmm7                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@22 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%     │  0x00007f3de38b1dd2: cmp    $0x4,%r8d
            │  0x00007f3de38b1dd6: jl     0x00007f3de38b1f38             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@30 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%     │  0x00007f3de38b1ddc: mov    (%rbx,%rdi,1),%r11d
  0.04%     │  0x00007f3de38b1de0: mov    %r14d,%r8d
  0.10%     │  0x00007f3de38b1de3: sub    %r10d,%r8d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.10%     │  0x00007f3de38b1de6: vmovd  %r11d,%xmm9
  0.08%     │  0x00007f3de38b1deb: vaddss %xmm7,%xmm9,%xmm7              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@33 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.12%     │  0x00007f3de38b1def: cmp    $0x4,%r8d
            │  0x00007f3de38b1df3: jl     0x00007f3de38b1f84             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.06%     │  0x00007f3de38b1df9: vmovd  %xmm7,%r8d
  0.18%     │  0x00007f3de38b1dfe: mov    %r8d,0x0(%rbp,%rdi,1)          ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
            │                                                            ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@34 (line 142)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.02%     │  0x00007f3de38b1e03: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@38 (line 141)
            │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
  0.08%     │  0x00007f3de38b1e07: cmp    %r13d,%r10d
            ╰  0x00007f3de38b1e0a: jl     0x00007f3de38b1dac             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBuffer@9 (line 141)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@19 (line 145)
               0x00007f3de38b1e0c: jmpq   0x00007f3de38b1a25
               0x00007f3de38b1e11: mov    %rcx,0x70(%rsp)
               0x00007f3de38b1e16: jmpq   0x00007f3de38b1a2f
               0x00007f3de38b1e1b: mov    $0x1,%ebp                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub@38 (line 148)
....................................................................................................
 95.28%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.28%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (506 bytes) 
  2.13%   [kernel.kallsyms]  [unknown] (5 bytes) 
  1.24%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 (435 bytes) 
  0.65%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.08%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 (5 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 (15 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.28%  <...other 14 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.52%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBuffer_jmhTest::verticalSumBuffer_thrpt_jmhStub, version 144 
  3.07%   [kernel.kallsyms]  [unknown] 
  0.12%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%  libpthread-2.23.so  pthread_self 
  0.02%         interpreter  invoke return entry points  
  0.02%           libjvm.so  _ZNK5Klass12class_loaderEv 
  0.02%           libjvm.so  _ZN15SignatureStream18next_non_primitiveEi 
  0.02%           libjvm.so  _ZN17SignatureIterator18iterate_returntypeEv 
  0.02%         interpreter  return  177 return  
  0.02%         interpreter  arraylength  190 arraylength  
  0.02%           libjvm.so  _Z23resource_allocate_bytesmN17AllocFailStrategy13AllocFailEnumE 
  0.02%                      <unknown> 
  0.02%         interpreter  istore_3  62 istore_3  
  0.02%         classes.jsa  [unknown] 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  aload  25 aload  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.63%                  c2
  3.07%   [kernel.kallsyms]
  0.14%         interpreter
  0.08%           libjvm.so
  0.02%                    
  0.02%         classes.jsa
  0.02%  libpthread-2.23.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckOptimistic
# Parameters: (probabilityOfNaN = 0, size = 1024)

# Run progress: 22.22% complete, ETA 00:12:39
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 331.780 ops/ms
# Warmup Iteration   2: 350.299 ops/ms
# Warmup Iteration   3: 355.727 ops/ms
# Warmup Iteration   4: 355.175 ops/ms
# Warmup Iteration   5: 354.267 ops/ms
Iteration   1: 352.218 ops/ms
Iteration   2: 353.929 ops/ms
Iteration   3: 352.288 ops/ms
Iteration   4: 351.918 ops/ms
Iteration   5: 353.603 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 23.46% complete, ETA 00:12:27
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 311.394 ops/ms
# Warmup Iteration   2: 341.131 ops/ms
# Warmup Iteration   3: 353.581 ops/ms
# Warmup Iteration   4: 353.836 ops/ms
# Warmup Iteration   5: 352.827 ops/ms
Iteration   1: 353.660 ops/ms
Iteration   2: 348.852 ops/ms
Iteration   3: 347.548 ops/ms
Iteration   4: 350.595 ops/ms
Iteration   5: 350.047 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 24.69% complete, ETA 00:12:15
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 319.349 ops/ms
# Warmup Iteration   2: 345.477 ops/ms
# Warmup Iteration   3: 360.430 ops/ms
# Warmup Iteration   4: 362.880 ops/ms
# Warmup Iteration   5: 360.790 ops/ms
Iteration   1: 354.440 ops/ms
Iteration   2: 354.793 ops/ms
Iteration   3: 356.062 ops/ms
Iteration   4: 357.123 ops/ms
Iteration   5: 359.122 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckOptimistic":
  353.080 ±(99.9%) 3.313 ops/ms [Average]
  (min, avg, max) = (347.548, 353.080, 359.122), stdev = 3.099
  CI (99.9%): [349.767, 356.393] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckOptimistic:·asm":
PrintAssembly processed: 53650 total address lines.
Perf output processed (skipped 6.658 seconds):
 Column 1: cycles (5073 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (308 bytes) 

                      0x00007fbec0748223: cmp    %ecx,%edx
                      0x00007fbec0748225: jl     0x00007fbec0748189             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@9 (line 161)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007fbec074822b: mov    $0xfffffffc,%ebx
                      0x00007fbec0748230: sub    %r10d,%ebx
                      0x00007fbec0748233: mov    $0xfffffffc,%r10d
                      0x00007fbec0748239: sub    %r8d,%r10d
                      0x00007fbec074823c: mov    $0xfffffffc,%r8d
                      0x00007fbec0748242: sub    %r11d,%r8d
  0.04%               0x00007fbec0748245: inc    %ebx
                      0x00007fbec0748247: inc    %r8d
                      0x00007fbec074824a: cmp    %ebx,%r8d
                      0x00007fbec074824d: cmovg  %ebx,%r8d
                      0x00007fbec0748251: inc    %r10d
  0.02%               0x00007fbec0748254: cmp    %r8d,%r10d
                      0x00007fbec0748257: cmovg  %r8d,%r10d
                      0x00007fbec074825b: cmp    0x70(%rsp),%r10d
  0.02%               0x00007fbec0748260: mov    0x70(%rsp),%r11d
                      0x00007fbec0748265: cmovg  %r11d,%r10d
                      0x00007fbec0748269: mov    %r10d,%r11d
                      0x00007fbec074826c: add    $0xfffffffe,%r11d
  0.02%               0x00007fbec0748270: cmp    %r11d,%r10d
                      0x00007fbec0748273: mov    $0x80000000,%r8d
  0.02%               0x00007fbec0748279: cmovl  %r8d,%r11d
                      0x00007fbec074827d: cmp    %r11d,%edx
                      0x00007fbec0748280: jge    0x00007fbec0747f40
         ╭            0x00007fbec0748286: jmpq   0x00007fbec074831a
         │            0x00007fbec074828b: nopl   0x0(%rax,%rax,1)
  1.64%  │      ↗     0x00007fbec0748290: vaddss %xmm8,%xmm5,%xmm7
  1.18%  │      │     0x00007fbec0748295: vmovd  %xmm7,%r8d
  1.14%  │      │     0x00007fbec074829a: mov    %r8d,0x0(%rbp,%rax,1)          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │      │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
         │      │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.29%  │     ↗│     0x00007fbec074829f: mov    0x2(%rdi,%rcx,1),%r8d
  1.68%  │     ││     0x00007fbec07482a4: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │     ││                                                               ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.40%  │     ││     0x00007fbec07482a9: vucomiss %xmm5,%xmm5
  1.87%  │     ││     0x00007fbec07482ad: jp     0x00007fbec074842e
  3.75%  │     ││     0x00007fbec07482b3: jne    0x00007fbec074842e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.lang.Float::isNaN@3 (line 467)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.89%  │     ││     0x00007fbec07482b9: xor    %r9d,%r9d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.lang.Float::isNaN@11 (line 467)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.06%  │     ││     0x00007fbec07482bc: mov    0x2(%rsi,%rcx,1),%r8d
  1.04%  │     ││     0x00007fbec07482c1: vmovd  %r8d,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │     ││                                                               ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.95%  │     ││     0x00007fbec07482c6: vucomiss %xmm8,%xmm8
  1.87%  │     ││     0x00007fbec07482cb: jp     0x00007fbec0748439
  3.08%  │     ││     0x00007fbec07482d1: jne    0x00007fbec0748439             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.lang.Float::isNaN@3 (line 467)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.17%  │     ││     0x00007fbec07482d7: xor    %ebx,%ebx                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.lang.Float::isNaN@11 (line 467)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.81%  │     ││     0x00007fbec07482d9: vucomiss %xmm5,%xmm5
  1.40%  │╭    ││     0x00007fbec07482dd: jp     0x00007fbec0748389
  1.40%  ││╭   ││     0x00007fbec07482e3: jne    0x00007fbec0748389             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         │││   ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
         │││   ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.93%  │││   ││  ↗  0x00007fbec07482e9: vucomiss %xmm8,%xmm8
  1.54%  │││   ││  │  0x00007fbec07482ee: jp     0x00007fbec07483cd
  1.58%  │││   ││  │  0x00007fbec07482f4: jne    0x00007fbec07483cd             ;*iload {reexecute=0 rethrow=0 return_oop=0}
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.73%  │││   ││  │  0x00007fbec07482fa: test   %r9d,%r9d
         │││╭  ││  │  0x00007fbec07482fd: jne    0x00007fbec074830e             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         ││││  ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
         ││││  ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.31%  ││││  ││  │  0x00007fbec07482ff: vaddss %xmm8,%xmm5,%xmm7
  1.85%  ││││  ││  │  0x00007fbec0748304: vmovd  %xmm7,%r8d
  1.36%  ││││  ││  │  0x00007fbec0748309: mov    %r8d,0x2(%rbp,%rcx,1)          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││││  ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
         ││││  ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.52%  │││↘  ││  │  0x00007fbec074830e: cmp    %r11d,%r10d
         │││   ││  │  0x00007fbec0748311: jge    0x00007fbec07483fe             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@9 (line 161)
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.17%  │││   ││  │  0x00007fbec0748317: mov    %r10d,%edx                     ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@12 (line 162)
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.54%  ↘││   ││  │  0x00007fbec074831a: movslq %edx,%rax                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.20%   ││   ││  │  0x00007fbec074831d: mov    (%rdi,%rax,1),%r8d
  1.70%   ││   ││  │  0x00007fbec0748321: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.36%   ││   ││  │  0x00007fbec0748326: vucomiss %xmm5,%xmm5
  1.87%   ││   ││  │  0x00007fbec074832a: jp     0x00007fbec0748419
  4.57%   ││   ││  │  0x00007fbec0748330: jne    0x00007fbec0748419             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.lang.Float::isNaN@3 (line 467)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.31%   ││   ││  │  0x00007fbec0748336: xor    %r9d,%r9d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.lang.Float::isNaN@11 (line 467)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.48%   ││   ││  │  0x00007fbec0748339: mov    (%rsi,%rax,1),%r10d
  1.73%   ││   ││  │  0x00007fbec074833d: vmovd  %r10d,%xmm8                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.64%   ││   ││  │  0x00007fbec0748342: vucomiss %xmm8,%xmm8
  1.64%   ││   ││  │  0x00007fbec0748347: jp     0x00007fbec0748424
  5.30%   ││   ││  │  0x00007fbec074834d: jne    0x00007fbec0748424             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.lang.Float::isNaN@3 (line 467)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.93%   ││   ││  │  0x00007fbec0748353: xor    %ebx,%ebx                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.lang.Float::isNaN@11 (line 467)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.52%   ││   ││  │  0x00007fbec0748355: vucomiss %xmm5,%xmm5
  1.44%   ││ ╭ ││  │  0x00007fbec0748359: jp     0x00007fbec074837e
  2.60%   ││ │╭││  │  0x00007fbec074835b: jne    0x00007fbec074837e             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
          ││ ││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.87%   ││ ││││↗↗│  0x00007fbec074835d: vucomiss %xmm8,%xmm8
  1.77%   ││ │││││││  0x00007fbec0748362: jp     0x00007fbec07483c6
  1.71%   ││ │││││││  0x00007fbec0748364: jne    0x00007fbec07483c6             ;*iload {reexecute=0 rethrow=0 return_oop=0}
          ││ │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
          ││ │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.64%   ││ │││││││  0x00007fbec0748366: movslq %edx,%rcx
  1.66%   ││ │││││││  0x00007fbec0748369: mov    %edx,%r10d
  1.52%   ││ │││││││  0x00007fbec074836c: add    $0x4,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││ │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
          ││ │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.12%   ││ │││││││  0x00007fbec0748370: test   %r9d,%r9d
          ││ ││╰││││  0x00007fbec0748373: jne    0x00007fbec074829f             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││ ││ ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
          ││ ││ ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.07%   ││ ││ ╰│││  0x00007fbec0748379: jmpq   0x00007fbec0748290
          ││ ↘↘  │││  0x00007fbec074837e: vucomiss %xmm8,%xmm8
          ││     ╰││  0x00007fbec0748383: jp     0x00007fbec074835d
          ││      ╰│  0x00007fbec0748385: jne    0x00007fbec074835d
          ││       │  0x00007fbec0748387: jmp    0x00007fbec074839d
          ↘↘       │  0x00007fbec0748389: vucomiss %xmm8,%xmm8
                   ╰  0x00007fbec074838e: jp     0x00007fbec07482e9
                      0x00007fbec0748394: jne    0x00007fbec07482e9             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
....................................................................................................
 95.92%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.92%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (308 bytes) 
  2.48%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.37%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (33 bytes) 
  0.20%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (77 bytes) 
  0.12%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (73 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (21 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (5 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.39%  <...other 20 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.83%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 
  2.84%   [kernel.kallsyms]  [unknown] 
  0.06%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.02%         interpreter  checkcast  192 checkcast  
  0.02%         interpreter  ifnull  198 ifnull  
  0.02%       perf-5775.map  [unknown] 
  0.02%           libjvm.so  _ZN18constantPoolHandleD1Ev 
  0.02%        libc-2.23.so  _int_free 
  0.02%           libjvm.so  _ZN12ConstantPool13klass_at_implERK18constantPoolHandleibP6Thread 
  0.02%           libjvm.so  _ZN2os18pd_uncommit_memoryEPcm 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  0.02%                  c2  java.lang.AbstractStringBuilder::ensureCapacityInternal, version 114 
  0.02%           libjvm.so  _ZN12LinkResolver19resolve_static_callER8CallInfoRK8LinkInfobP6Thread 
  0.02%         interpreter  method entry point (kind = zerolocals_synchronized)  
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.91%                  c2
  2.84%   [kernel.kallsyms]
  0.10%           libjvm.so
  0.10%         interpreter
  0.02%        libc-2.23.so
  0.02%       perf-5775.map
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53507 total address lines.
Perf output processed (skipped 6.647 seconds):
 Column 1: cycles (5072 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (270 bytes) 

                       0x00007f2237cea54a: cmp    %ebx,%r8d
                       0x00007f2237cea54d: cmovg  %ebx,%r8d
                       0x00007f2237cea551: inc    %r10d
                       0x00007f2237cea554: cmp    %r8d,%r10d
                       0x00007f2237cea557: cmovg  %r8d,%r10d
                       0x00007f2237cea55b: cmp    0x70(%rsp),%r10d
                       0x00007f2237cea560: mov    0x70(%rsp),%r11d
                       0x00007f2237cea565: cmovg  %r11d,%r10d
                       0x00007f2237cea569: mov    %r10d,%r11d
                       0x00007f2237cea56c: add    $0xfffffffe,%r11d
  0.02%                0x00007f2237cea570: cmp    %r11d,%r10d
                       0x00007f2237cea573: mov    $0x80000000,%r8d
                       0x00007f2237cea579: cmovl  %r8d,%r11d
                       0x00007f2237cea57d: cmp    %r11d,%edx
                       0x00007f2237cea580: jge    0x00007f2237cea240
         ╭             0x00007f2237cea586: jmpq   0x00007f2237cea61a
         │             0x00007f2237cea58b: nopl   0x0(%rax,%rax,1)
  1.79%  │      ↗      0x00007f2237cea590: vaddss %xmm8,%xmm5,%xmm7
  1.22%  │      │      0x00007f2237cea595: vmovd  %xmm7,%r8d
  1.06%  │      │      0x00007f2237cea59a: mov    %r8d,0x0(%rbp,%rax,1)          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │      │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
         │      │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.68%  │     ↗│      0x00007f2237cea59f: mov    0x2(%rdi,%rcx,1),%r8d
  1.58%  │     ││      0x00007f2237cea5a4: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │     ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.66%  │     ││      0x00007f2237cea5a9: vucomiss %xmm5,%xmm5
  1.72%  │     ││      0x00007f2237cea5ad: jp     0x00007f2237cea72e
  3.98%  │     ││      0x00007f2237cea5b3: jne    0x00007f2237cea72e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.09%  │     ││      0x00007f2237cea5b9: xor    %r9d,%r9d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                                ; - java.lang.Float::isNaN@11 (line 467)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.22%  │     ││      0x00007f2237cea5bc: mov    0x2(%rsi,%rcx,1),%r8d
  1.30%  │     ││      0x00007f2237cea5c1: vmovd  %r8d,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │     ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.66%  │     ││      0x00007f2237cea5c6: vucomiss %xmm8,%xmm8
  1.72%  │     ││      0x00007f2237cea5cb: jp     0x00007f2237cea739
  3.39%  │     ││      0x00007f2237cea5d1: jne    0x00007f2237cea739             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.33%  │     ││      0x00007f2237cea5d7: xor    %ebx,%ebx                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                                ; - java.lang.Float::isNaN@11 (line 467)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.56%  │     ││      0x00007f2237cea5d9: vucomiss %xmm5,%xmm5
  1.26%  │╭    ││      0x00007f2237cea5dd: jp     0x00007f2237cea689
  1.60%  ││╭   ││      0x00007f2237cea5e3: jne    0x00007f2237cea689             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         │││   ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
         │││   ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.48%  │││   ││  ↗↗  0x00007f2237cea5e9: vucomiss %xmm8,%xmm8
  1.52%  │││   ││  ││  0x00007f2237cea5ee: jp     0x00007f2237cea6cd
  1.72%  │││   ││  ││  0x00007f2237cea5f4: jne    0x00007f2237cea6cd             ;*iload {reexecute=0 rethrow=0 return_oop=0}
         │││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
         │││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.38%  │││   ││  ││  0x00007f2237cea5fa: test   %r9d,%r9d
         │││╭  ││  ││  0x00007f2237cea5fd: jne    0x00007f2237cea60e             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         ││││  ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
         ││││  ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.19%  ││││  ││  ││  0x00007f2237cea5ff: vaddss %xmm8,%xmm5,%xmm7
  1.52%  ││││  ││  ││  0x00007f2237cea604: vmovd  %xmm7,%r8d
  1.46%  ││││  ││  ││  0x00007f2237cea609: mov    %r8d,0x2(%rbp,%rcx,1)          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││││  ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
         ││││  ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.83%  │││↘  ││  ││  0x00007f2237cea60e: cmp    %r11d,%r10d
         │││   ││  ││  0x00007f2237cea611: jge    0x00007f2237cea6fe             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@9 (line 161)
         │││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.75%  │││   ││  ││  0x00007f2237cea617: mov    %r10d,%edx                     ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@12 (line 162)
         │││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.42%  ↘││   ││  ││  0x00007f2237cea61a: movslq %edx,%rax                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  ││                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
          ││   ││  ││                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.46%   ││   ││  ││  0x00007f2237cea61d: mov    (%rdi,%rax,1),%r8d
  1.32%   ││   ││  ││  0x00007f2237cea621: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  ││                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          ││   ││  ││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.83%   ││   ││  ││  0x00007f2237cea626: vucomiss %xmm5,%xmm5
  1.52%   ││   ││  ││  0x00007f2237cea62a: jp     0x00007f2237cea719
  5.46%   ││   ││  ││  0x00007f2237cea630: jne    0x00007f2237cea719             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.09%   ││   ││  ││  0x00007f2237cea636: xor    %r9d,%r9d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  ││                                                            ; - java.lang.Float::isNaN@11 (line 467)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.72%   ││   ││  ││  0x00007f2237cea639: mov    (%rsi,%rax,1),%r10d
  1.34%   ││   ││  ││  0x00007f2237cea63d: vmovd  %r10d,%xmm8                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  ││                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          ││   ││  ││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.42%   ││   ││  ││  0x00007f2237cea642: vucomiss %xmm8,%xmm8
  1.72%   ││   ││  ││  0x00007f2237cea647: jp     0x00007f2237cea724
  4.28%   ││   ││  ││  0x00007f2237cea64d: jne    0x00007f2237cea724             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.35%   ││   ││  ││  0x00007f2237cea653: xor    %ebx,%ebx                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  ││                                                            ; - java.lang.Float::isNaN@11 (line 467)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.72%   ││   ││  ││  0x00007f2237cea655: vucomiss %xmm5,%xmm5
  1.46%   ││ ╭ ││  ││  0x00007f2237cea659: jp     0x00007f2237cea67e
  2.76%   ││ │╭││  ││  0x00007f2237cea65b: jne    0x00007f2237cea67e             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
          ││ ││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.93%   ││ ││││↗↗││  0x00007f2237cea65d: vucomiss %xmm8,%xmm8
  1.54%   ││ ││││││││  0x00007f2237cea662: jp     0x00007f2237cea6c6
  1.40%   ││ ││││││││  0x00007f2237cea664: jne    0x00007f2237cea6c6             ;*iload {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
          ││ ││││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.97%   ││ ││││││││  0x00007f2237cea666: movslq %edx,%rcx
  1.60%   ││ ││││││││  0x00007f2237cea669: mov    %edx,%r10d
  1.52%   ││ ││││││││  0x00007f2237cea66c: add    $0x4,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
          ││ ││││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.04%   ││ ││││││││  0x00007f2237cea670: test   %r9d,%r9d
          ││ ││╰│││││  0x00007f2237cea673: jne    0x00007f2237cea59f             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││ ││ │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
          ││ ││ │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.44%   ││ ││ ╰││││  0x00007f2237cea679: jmpq   0x00007f2237cea590
  0.02%   ││ ↘↘  ││││  0x00007f2237cea67e: vucomiss %xmm8,%xmm8
          ││     ╰│││  0x00007f2237cea683: jp     0x00007f2237cea65d
          ││      ╰││  0x00007f2237cea685: jne    0x00007f2237cea65d
          ││       ││  0x00007f2237cea687: jmp    0x00007f2237cea69d
          ↘↘       ││  0x00007f2237cea689: vucomiss %xmm8,%xmm8
                   ╰│  0x00007f2237cea68e: jp     0x00007f2237cea5e9
                    ╰  0x00007f2237cea694: jne    0x00007f2237cea5e9             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                       0x00007f2237cea69a: add    $0x2,%edx                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
....................................................................................................
 96.00%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.00%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (270 bytes) 
  2.48%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.30%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (33 bytes) 
  0.20%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (90 bytes) 
  0.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (72 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (9 bytes) 
  0.06%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (15 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (44 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (25 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.37%  <...other 19 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.87%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 
  2.82%   [kernel.kallsyms]  [unknown] 
  0.08%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.04%         interpreter  invoke return entry points  
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZL6invokeP13InstanceKlassRK12methodHandle6Handleb14objArrayHandle9BasicTypeS5_bP6Thread.constprop.76 
  0.02%           libjvm.so  Unsafe_GetIntVolatile 
  0.02%         interpreter  checkcast  192 checkcast  
  0.02%           libjvm.so  _ZN12ConstantPool21impl_signature_ref_atEib 
  0.02%           libjvm.so  _ZN7Monitor5IWaitEP6Threadl 
  0.02%        libc-2.23.so  vfprintf 
  0.02%           libjvm.so  _ZNK17OtherRegionsTable8occupiedEv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.94%                  c2
  2.82%   [kernel.kallsyms]
  0.10%           libjvm.so
  0.10%         interpreter
  0.02%        libc-2.23.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53514 total address lines.
Perf output processed (skipped 6.613 seconds):
 Column 1: cycles (5037 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (227 bytes) 

                     0x00007fa0b074828b: jmpq   0x00007fa0b074853c
                     0x00007fa0b0748290: mov    $0x1,%r11d
                     0x00007fa0b0748296: jmpq   0x00007fa0b0747ffb
                     0x00007fa0b074829b: mov    $0x1,%r10d
                     0x00007fa0b07482a1: jmpq   0x00007fa0b0748018
                     0x00007fa0b07482a6: mov    $0x1,%r11d
                     0x00007fa0b07482ac: jmpq   0x00007fa0b0748070
                     0x00007fa0b07482b1: mov    $0x1,%r10d
                     0x00007fa0b07482b7: jmpq   0x00007fa0b074808e
                     0x00007fa0b07482bc: nopl   0x0(%rax)
  1.17%        ↗     0x00007fa0b07482c0: vaddss %xmm8,%xmm5,%xmm5
  1.45%        │     0x00007fa0b07482c5: vmovd  %xmm5,%r11d
  1.67%        │     0x00007fa0b07482ca: mov    %r11d,0x2(%rbp,%rbx,1)
  1.97%       ↗│     0x00007fa0b07482cf: add    $0x4,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.27%       ││     0x00007fa0b07482d3: cmp    %edi,%r10d
              ││     0x00007fa0b07482d6: jge    0x00007fa0b0748432             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@12 (line 162)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.83%       ││     0x00007fa0b07482dc: movslq %r10d,%rdx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
              ││                                                               ; - java.nio.DirectByteBuffer::ix@5 (line 258)
              ││                                                               ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.77%       ││     0x00007fa0b07482df: mov    (%r9,%rdx,1),%r8d
  1.99%       ││     0x00007fa0b07482e3: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
              ││                                                               ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
              ││                                                               ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.45%       ││     0x00007fa0b07482e8: vucomiss %xmm5,%xmm5
  1.51%       ││     0x00007fa0b07482ec: jp     0x00007fa0b0748797
  7.19%       ││     0x00007fa0b07482f2: jne    0x00007fa0b0748797             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
              ││                                                               ; - java.lang.Float::isNaN@3 (line 467)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.36%       ││     0x00007fa0b07482f8: xor    %r11d,%r11d                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
              ││                                                               ; - java.lang.Float::isNaN@11 (line 467)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.93%       ││     0x00007fa0b07482fb: mov    (%rcx,%rdx,1),%ebx
  1.23%       ││     0x00007fa0b07482fe: vmovd  %ebx,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
              ││                                                               ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
              ││                                                               ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.06%       ││     0x00007fa0b0748302: vucomiss %xmm8,%xmm8
  2.14%       ││     0x00007fa0b0748307: jp     0x00007fa0b07487a2
  1.81%       ││     0x00007fa0b074830d: jne    0x00007fa0b07487a2             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
              ││                                                               ; - java.lang.Float::isNaN@3 (line 467)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.01%       ││     0x00007fa0b0748313: xor    %r8d,%r8d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
              ││                                                               ; - java.lang.Float::isNaN@11 (line 467)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
              ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.65%       ││     0x00007fa0b0748316: vucomiss %xmm5,%xmm5
  1.53%  ╭    ││     0x00007fa0b074831a: jp     0x00007fa0b07483a8
  3.45%  │╭   ││     0x00007fa0b0748320: jne    0x00007fa0b07483a8             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         ││   ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
         ││   ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.67%  ││   ││↗↗   0x00007fa0b0748326: vucomiss %xmm8,%xmm8
  1.27%  ││   ││││   0x00007fa0b074832b: jp     0x00007fa0b07483f6
  1.99%  ││   ││││   0x00007fa0b0748331: jne    0x00007fa0b07483f6             ;*iload {reexecute=0 rethrow=0 return_oop=0}
         ││   ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
         ││   ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.18%  ││   ││││   0x00007fa0b0748337: test   %r11d,%r11d
         ││╭  ││││   0x00007fa0b074833a: jne    0x00007fa0b074834b             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         │││  ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
         │││  ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.95%  │││  ││││   0x00007fa0b074833c: vaddss %xmm8,%xmm5,%xmm5
  1.37%  │││  ││││   0x00007fa0b0748341: vmovd  %xmm5,%r11d
  1.33%  │││  ││││   0x00007fa0b0748346: mov    %r11d,0x0(%rbp,%rdx,1)         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││  ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
         │││  ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.59%  ││↘  ││││   0x00007fa0b074834b: movslq %r10d,%rbx
  1.61%  ││   ││││   0x00007fa0b074834e: mov    0x2(%r9,%rbx,1),%r8d
  1.09%  ││   ││││   0x00007fa0b0748353: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         ││   ││││                                                             ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         ││   ││││                                                             ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         ││   ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
         ││   ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.51%  ││   ││││   0x00007fa0b0748358: vucomiss %xmm5,%xmm5
  1.57%  ││   ││││   0x00007fa0b074835c: jp     0x00007fa0b07487ad
  2.36%  ││   ││││   0x00007fa0b0748362: jne    0x00007fa0b07487ad             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││   ││││                                                             ; - java.lang.Float::isNaN@3 (line 467)
         ││   ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
         ││   ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.12%  ││   ││││   0x00007fa0b0748368: xor    %r11d,%r11d                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
         ││   ││││                                                             ; - java.lang.Float::isNaN@11 (line 467)
         ││   ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
         ││   ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.47%  ││   ││││   0x00007fa0b074836b: mov    0x2(%rcx,%rbx,1),%r8d
  1.51%  ││   ││││   0x00007fa0b0748370: vmovd  %r8d,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         ││   ││││                                                             ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         ││   ││││                                                             ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         ││   ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
         ││   ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.47%  ││   ││││   0x00007fa0b0748375: vucomiss %xmm8,%xmm8
  1.53%  ││   ││││   0x00007fa0b074837a: jp     0x00007fa0b07487b8
  1.95%  ││   ││││   0x00007fa0b0748380: jne    0x00007fa0b07487b8             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││   ││││                                                             ; - java.lang.Float::isNaN@3 (line 467)
         ││   ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
         ││   ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.28%  ││   ││││   0x00007fa0b0748386: xor    %r8d,%r8d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
         ││   ││││                                                             ; - java.lang.Float::isNaN@11 (line 467)
         ││   ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
         ││   ││││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.65%  ││   ││││   0x00007fa0b0748389: vucomiss %xmm5,%xmm5
  1.11%  ││ ╭ ││││   0x00007fa0b074838d: jp     0x00007fa0b07483bb
  2.88%  ││ │╭││││   0x00007fa0b074838f: jne    0x00007fa0b07483bb             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         ││ ││││││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
         ││ ││││││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.99%  ││ ││││││↗  0x00007fa0b0748391: vucomiss %xmm8,%xmm8
  1.57%  ││ │││││││  0x00007fa0b0748396: jp     0x00007fa0b0748401
  3.38%  ││ │││││││  0x00007fa0b0748398: jne    0x00007fa0b0748401             ;*iload {reexecute=0 rethrow=0 return_oop=0}
         ││ │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
         ││ │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.57%  ││ │││││││  0x00007fa0b074839a: test   %r11d,%r11d
         ││ ││╰││││  0x00007fa0b074839d: jne    0x00007fa0b07482cf             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         ││ ││ ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
         ││ ││ ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.64%  ││ ││ ╰│││  0x00007fa0b07483a3: jmpq   0x00007fa0b07482c0
         ↘↘ ││  │││  0x00007fa0b07483a8: vucomiss %xmm8,%xmm8
            ││  ╰││  0x00007fa0b07483ad: jp     0x00007fa0b0748326
            ││   ╰│  0x00007fa0b07483b3: jne    0x00007fa0b0748326
            ││    │  0x00007fa0b07483b9: jmp    0x00007fa0b07483c8
            ↘↘    │  0x00007fa0b07483bb: vucomiss %xmm8,%xmm8
                  ╰  0x00007fa0b07483c0: jp     0x00007fa0b0748391
                     0x00007fa0b07483c2: jne    0x00007fa0b0748391             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
....................................................................................................
 95.99%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.99%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (227 bytes) 
  1.87%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.32%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (77 bytes) 
  0.28%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (10 bytes) 
  0.28%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (41 bytes) 
  0.18%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (3 bytes) 
  0.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (34 bytes) 
  0.06%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (8 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (26 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (28 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  invokevirtual  182 invokevirtual  (0 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (4 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.52%  <...other 26 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.16%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 
  2.20%   [kernel.kallsyms]  [unknown] 
  0.34%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.04%         interpreter  invokevirtual  182 invokevirtual  
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN12LinkResolver14resolve_invokeER8CallInfo6HandleRK18constantPoolHandleiN9Bytecodes4CodeEP6Thread 
  0.02%         interpreter  dup  89 dup  
  0.02%         interpreter  nofast_aload_0  236 nofast_aload_0  
  0.02%           libjvm.so  _ZN15PerfLongVariant6sampleEv 
  0.02%         interpreter  goto  167 goto  
  0.02%         classes.jsa  [unknown] 
  0.02%           libjvm.so  _ZN9metaspace9Metachunk16object_alignmentEv 
  0.02%           libjvm.so  _ZN7Monitor6unlockEv 
  0.02%           libjvm.so  _ZN7Monitor4waitEblb 
  0.02%           libjvm.so  _ZN15StatSamplerTask4taskEv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.50%                  c2
  2.20%   [kernel.kallsyms]
  0.14%         interpreter
  0.12%           libjvm.so
  0.02%         classes.jsa
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckOptimistic
# Parameters: (probabilityOfNaN = 0.001, size = 1024)

# Run progress: 25.93% complete, ETA 00:12:02
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 336.840 ops/ms
# Warmup Iteration   2: 352.814 ops/ms
# Warmup Iteration   3: 350.311 ops/ms
# Warmup Iteration   4: 341.751 ops/ms
# Warmup Iteration   5: 348.043 ops/ms
Iteration   1: 350.546 ops/ms
Iteration   2: 348.691 ops/ms
Iteration   3: 349.969 ops/ms
Iteration   4: 351.626 ops/ms
Iteration   5: 350.161 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 27.16% complete, ETA 00:11:50
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 337.547 ops/ms
# Warmup Iteration   2: 353.045 ops/ms
# Warmup Iteration   3: 355.020 ops/ms
# Warmup Iteration   4: 351.540 ops/ms
# Warmup Iteration   5: 354.697 ops/ms
Iteration   1: 345.794 ops/ms
Iteration   2: 351.587 ops/ms
Iteration   3: 352.665 ops/ms
Iteration   4: 350.541 ops/ms
Iteration   5: 351.698 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 28.40% complete, ETA 00:11:38
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 316.403 ops/ms
# Warmup Iteration   2: 338.873 ops/ms
# Warmup Iteration   3: 347.978 ops/ms
# Warmup Iteration   4: 345.876 ops/ms
# Warmup Iteration   5: 350.280 ops/ms
Iteration   1: 349.604 ops/ms
Iteration   2: 346.410 ops/ms
Iteration   3: 351.113 ops/ms
Iteration   4: 350.655 ops/ms
Iteration   5: 355.046 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckOptimistic":
  350.407 ±(99.9%) 2.439 ops/ms [Average]
  (min, avg, max) = (345.794, 350.407, 355.046), stdev = 2.281
  CI (99.9%): [347.968, 352.846] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckOptimistic:·asm":
PrintAssembly processed: 53666 total address lines.
Perf output processed (skipped 6.647 seconds):
 Column 1: cycles (5097 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (254 bytes) 

                       0x00007f01b474a257: cmovg  %r8d,%r10d
                       0x00007f01b474a25b: cmp    0x70(%rsp),%r10d
                       0x00007f01b474a260: mov    0x70(%rsp),%r11d
                       0x00007f01b474a265: cmovg  %r11d,%r10d
                       0x00007f01b474a269: mov    %r10d,%r11d
                       0x00007f01b474a26c: add    $0xfffffffe,%r11d
                       0x00007f01b474a270: cmp    %r11d,%r10d
                       0x00007f01b474a273: mov    $0x80000000,%r8d
                       0x00007f01b474a279: cmovl  %r8d,%r11d
                       0x00007f01b474a27d: cmp    %r11d,%edx
  0.02%                0x00007f01b474a280: jge    0x00007f01b4749f40
         ╭             0x00007f01b474a286: jmpq   0x00007f01b474a31a
         │             0x00007f01b474a28b: nopl   0x0(%rax,%rax,1)
  1.47%  │      ↗      0x00007f01b474a290: vaddss %xmm8,%xmm5,%xmm7
  1.29%  │      │      0x00007f01b474a295: vmovd  %xmm7,%r8d
  1.10%  │      │      0x00007f01b474a29a: mov    %r8d,0x0(%rbp,%rax,1)          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │      │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
         │      │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.16%  │     ↗│      0x00007f01b474a29f: mov    0x2(%rdi,%rcx,1),%r8d
  1.55%  │     ││      0x00007f01b474a2a4: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │     ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.55%  │     ││      0x00007f01b474a2a9: vucomiss %xmm5,%xmm5
  1.28%  │     ││      0x00007f01b474a2ad: jp     0x00007f01b474a42e
  3.65%  │     ││      0x00007f01b474a2b3: jne    0x00007f01b474a42e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.82%  │     ││      0x00007f01b474a2b9: xor    %r9d,%r9d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                                ; - java.lang.Float::isNaN@11 (line 467)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.53%  │     ││      0x00007f01b474a2bc: mov    0x2(%rsi,%rcx,1),%r8d
  1.35%  │     ││      0x00007f01b474a2c1: vmovd  %r8d,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │     ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.53%  │     ││      0x00007f01b474a2c6: vucomiss %xmm8,%xmm8
  1.69%  │     ││      0x00007f01b474a2cb: jp     0x00007f01b474a439
  3.08%  │     ││      0x00007f01b474a2d1: jne    0x00007f01b474a439             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.06%  │     ││      0x00007f01b474a2d7: xor    %ebx,%ebx                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                                ; - java.lang.Float::isNaN@11 (line 467)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.67%  │     ││      0x00007f01b474a2d9: vucomiss %xmm5,%xmm5
  1.63%  │╭    ││      0x00007f01b474a2dd: jp     0x00007f01b474a389
  2.02%  ││╭   ││      0x00007f01b474a2e3: jne    0x00007f01b474a389             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         │││   ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
         │││   ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.33%  │││   ││  ↗↗  0x00007f01b474a2e9: vucomiss %xmm8,%xmm8
  1.88%  │││   ││  ││  0x00007f01b474a2ee: jp     0x00007f01b474a3cd
  1.41%  │││   ││  ││  0x00007f01b474a2f4: jne    0x00007f01b474a3cd             ;*iload {reexecute=0 rethrow=0 return_oop=0}
         │││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
         │││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.35%  │││   ││  ││  0x00007f01b474a2fa: test   %r9d,%r9d
         │││╭  ││  ││  0x00007f01b474a2fd: jne    0x00007f01b474a30e             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         ││││  ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
         ││││  ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.24%  ││││  ││  ││  0x00007f01b474a2ff: vaddss %xmm8,%xmm5,%xmm7
  1.59%  ││││  ││  ││  0x00007f01b474a304: vmovd  %xmm7,%r8d
  1.63%  ││││  ││  ││  0x00007f01b474a309: mov    %r8d,0x2(%rbp,%rcx,1)          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││││  ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
         ││││  ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.65%  │││↘  ││  ││  0x00007f01b474a30e: cmp    %r11d,%r10d
         │││   ││  ││  0x00007f01b474a311: jge    0x00007f01b474a3fe             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@9 (line 161)
         │││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.86%  │││   ││  ││  0x00007f01b474a317: mov    %r10d,%edx                     ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@12 (line 162)
         │││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.47%  ↘││   ││  ││  0x00007f01b474a31a: movslq %edx,%rax                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  ││                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
          ││   ││  ││                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.39%   ││   ││  ││  0x00007f01b474a31d: mov    (%rdi,%rax,1),%r8d
  1.73%   ││   ││  ││  0x00007f01b474a321: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  ││                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          ││   ││  ││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.82%   ││   ││  ││  0x00007f01b474a326: vucomiss %xmm5,%xmm5
  1.67%   ││   ││  ││  0x00007f01b474a32a: jp     0x00007f01b474a419
  5.04%   ││   ││  ││  0x00007f01b474a330: jne    0x00007f01b474a419             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.90%   ││   ││  ││  0x00007f01b474a336: xor    %r9d,%r9d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  ││                                                            ; - java.lang.Float::isNaN@11 (line 467)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.22%   ││   ││  ││  0x00007f01b474a339: mov    (%rsi,%rax,1),%r10d
  1.45%   ││   ││  ││  0x00007f01b474a33d: vmovd  %r10d,%xmm8                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  ││                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          ││   ││  ││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.43%   ││   ││  ││  0x00007f01b474a342: vucomiss %xmm8,%xmm8
  1.80%   ││   ││  ││  0x00007f01b474a347: jp     0x00007f01b474a424
  5.49%   ││   ││  ││  0x00007f01b474a34d: jne    0x00007f01b474a424             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.14%   ││   ││  ││  0x00007f01b474a353: xor    %ebx,%ebx                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  ││                                                            ; - java.lang.Float::isNaN@11 (line 467)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
          ││   ││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.41%   ││   ││  ││  0x00007f01b474a355: vucomiss %xmm5,%xmm5
  1.31%   ││ ╭ ││  ││  0x00007f01b474a359: jp     0x00007f01b474a37e
  2.75%   ││ │╭││  ││  0x00007f01b474a35b: jne    0x00007f01b474a37e             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
          ││ ││││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.28%   ││ ││││↗↗││  0x00007f01b474a35d: vucomiss %xmm8,%xmm8
  1.22%   ││ ││││││││  0x00007f01b474a362: jp     0x00007f01b474a3c6
  1.65%   ││ ││││││││  0x00007f01b474a364: jne    0x00007f01b474a3c6             ;*iload {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
          ││ ││││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.06%   ││ ││││││││  0x00007f01b474a366: movslq %edx,%rcx
  1.37%   ││ ││││││││  0x00007f01b474a369: mov    %edx,%r10d
  1.26%   ││ ││││││││  0x00007f01b474a36c: add    $0x4,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
          ││ ││││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.26%   ││ ││││││││  0x00007f01b474a370: test   %r9d,%r9d
          ││ ││╰│││││  0x00007f01b474a373: jne    0x00007f01b474a29f             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││ ││ │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
          ││ ││ │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.02%   ││ ││ ╰││││  0x00007f01b474a379: jmpq   0x00007f01b474a290
  0.02%   ││ ↘↘  ││││  0x00007f01b474a37e: vucomiss %xmm8,%xmm8
          ││     ╰│││  0x00007f01b474a383: jp     0x00007f01b474a35d
          ││      ╰││  0x00007f01b474a385: jne    0x00007f01b474a35d
          ││       ││  0x00007f01b474a387: jmp    0x00007f01b474a39d
          ↘↘       ││  0x00007f01b474a389: vucomiss %xmm8,%xmm8
                   ╰│  0x00007f01b474a38e: jp     0x00007f01b474a2e9
                    ╰  0x00007f01b474a394: jne    0x00007f01b474a2e9             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                       0x00007f01b474a39a: add    $0x2,%edx                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
....................................................................................................
 95.57%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.57%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (254 bytes) 
  2.71%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.31%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (202 bytes) 
  0.16%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.14%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (33 bytes) 
  0.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (31 bytes) 
  0.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (72 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (26 bytes) 
  0.08%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (16 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (4 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (18 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (0 bytes) 
  0.04%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (5 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (29 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (19 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.31%  <...other 16 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.45%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 
  3.26%   [kernel.kallsyms]  [unknown] 
  0.08%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%         interpreter  new  187 new  
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%         interpreter  invokestatic  184 invokestatic  
  0.02%         interpreter  fast_iload  224 fast_iload  
  0.02%         interpreter  invokespecial  183 invokespecial  
  0.02%           libjvm.so  _ZN15G1CollectedHeap21get_safepoint_workersEv 
  0.02%           libjvm.so  _ZNK17OtherRegionsTable8occupiedEv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.53%                  c2
  3.26%   [kernel.kallsyms]
  0.16%         interpreter
  0.04%           libjvm.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53653 total address lines.
Perf output processed (skipped 6.616 seconds):
 Column 1: cycles (5043 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (251 bytes) 

                         0x00007efff874847b: jmpq   0x00007efff8748728
                         0x00007efff8748480: mov    $0x1,%r11d
                         0x00007efff8748486: jmpq   0x00007efff87481eb
                         0x00007efff874848b: mov    $0x1,%r10d
                         0x00007efff8748491: jmpq   0x00007efff8748208
                         0x00007efff8748496: mov    $0x1,%r11d
                         0x00007efff874849c: jmpq   0x00007efff8748260
                         0x00007efff87484a1: mov    $0x1,%r10d
                         0x00007efff87484a7: jmpq   0x00007efff874827c
                         0x00007efff87484ac: nopl   0x0(%rax)
  1.45%          ↗       0x00007efff87484b0: vaddss %xmm8,%xmm5,%xmm5
  1.47%          │       0x00007efff87484b5: vmovd  %xmm5,%r11d
  1.69%          │       0x00007efff87484ba: mov    %r11d,0x2(%rbp,%rbx,1)
  1.84%         ↗│       0x00007efff87484bf: add    $0x4,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.29%         ││       0x00007efff87484c3: cmp    %edi,%r10d
                ││       0x00007efff87484c6: jge    0x00007efff874861e             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@12 (line 162)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.10%         ││       0x00007efff87484cc: movslq %r10d,%rdx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                ││                                                                 ; - java.nio.DirectByteBuffer::ix@5 (line 258)
                ││                                                                 ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.65%         ││       0x00007efff87484cf: mov    (%r9,%rdx,1),%r8d
  2.10%         ││       0x00007efff87484d3: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                ││                                                                 ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                ││                                                                 ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.55%         ││       0x00007efff87484d8: vucomiss %xmm5,%xmm5
  1.39%         ││       0x00007efff87484dc: jp     0x00007efff8748983
  7.34%         ││       0x00007efff87484e2: jne    0x00007efff8748983             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                ││                                                                 ; - java.lang.Float::isNaN@3 (line 467)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.07%         ││       0x00007efff87484e8: xor    %r11d,%r11d                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                ││                                                                 ; - java.lang.Float::isNaN@11 (line 467)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.97%         ││       0x00007efff87484eb: mov    (%rcx,%rdx,1),%ebx
  1.47%         ││       0x00007efff87484ee: vmovd  %ebx,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                ││                                                                 ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                ││                                                                 ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.71%         ││       0x00007efff87484f2: vucomiss %xmm8,%xmm8
  1.74%         ││       0x00007efff87484f7: jp     0x00007efff874898e
  1.98%         ││       0x00007efff87484fd: jne    0x00007efff874898e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                ││                                                                 ; - java.lang.Float::isNaN@3 (line 467)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.04%         ││       0x00007efff8748503: xor    %r8d,%r8d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                ││                                                                 ; - java.lang.Float::isNaN@11 (line 467)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
                ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.76%         ││       0x00007efff8748506: vucomiss %xmm5,%xmm5
  1.47%  ╭      ││       0x00007efff874850a: jp     0x00007efff8748598
  2.91%  │╭     ││       0x00007efff8748510: jne    0x00007efff8748598             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         ││     ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
         ││     ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.71%  ││     ││↗↗     0x00007efff8748516: vucomiss %xmm8,%xmm8
  1.27%  ││╭    ││││     0x00007efff874851b: jp     0x00007efff87485ab
  1.98%  │││╭   ││││     0x00007efff8748521: jne    0x00007efff87485ab             ;*iload {reexecute=0 rethrow=0 return_oop=0}
         ││││   ││││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
         ││││   ││││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.92%  ││││   ││││↗    0x00007efff8748527: test   %r11d,%r11d
         ││││╭  │││││    0x00007efff874852a: jne    0x00007efff874853b             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         │││││  │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
         │││││  │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.14%  │││││  │││││    0x00007efff874852c: vaddss %xmm8,%xmm5,%xmm5
  1.49%  │││││  │││││    0x00007efff8748531: vmovd  %xmm5,%r11d
  1.41%  │││││  │││││    0x00007efff8748536: mov    %r11d,0x0(%rbp,%rdx,1)         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││││  │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
         │││││  │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.78%  ││││↘  │││││    0x00007efff874853b: movslq %r10d,%rbx
  1.73%  ││││   │││││    0x00007efff874853e: mov    0x2(%r9,%rbx,1),%r8d
  1.33%  ││││   │││││    0x00007efff8748543: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         ││││   │││││                                                              ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         ││││   │││││                                                              ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
         ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.29%  ││││   │││││    0x00007efff8748548: vucomiss %xmm5,%xmm5
  1.53%  ││││   │││││    0x00007efff874854c: jp     0x00007efff8748999
  2.70%  ││││   │││││    0x00007efff8748552: jne    0x00007efff8748999             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││││   │││││                                                              ; - java.lang.Float::isNaN@3 (line 467)
         ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
         ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.31%  ││││   │││││    0x00007efff8748558: xor    %r11d,%r11d                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
         ││││   │││││                                                              ; - java.lang.Float::isNaN@11 (line 467)
         ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
         ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.41%  ││││   │││││    0x00007efff874855b: mov    0x2(%rcx,%rbx,1),%r8d
  1.67%  ││││   │││││    0x00007efff8748560: vmovd  %r8d,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         ││││   │││││                                                              ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         ││││   │││││                                                              ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
         ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.76%  ││││   │││││    0x00007efff8748565: vucomiss %xmm8,%xmm8
  1.63%  ││││   │││││    0x00007efff874856a: jp     0x00007efff87489a4
  1.47%  ││││   │││││    0x00007efff8748570: jne    0x00007efff87489a4             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││││   │││││                                                              ; - java.lang.Float::isNaN@3 (line 467)
         ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
         ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.66%  ││││   │││││    0x00007efff8748576: xor    %r8d,%r8d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
         ││││   │││││                                                              ; - java.lang.Float::isNaN@11 (line 467)
         ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
         ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.47%  ││││   │││││    0x00007efff8748579: vucomiss %xmm5,%xmm5
  1.65%  ││││ ╭ │││││    0x00007efff874857d: jp     0x00007efff87485b6
  3.09%  ││││ │╭│││││    0x00007efff874857f: jne    0x00007efff87485b6             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         ││││ │││││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
         ││││ │││││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.30%  ││││ │││││││↗↗  0x00007efff8748581: vucomiss %xmm8,%xmm8
  1.25%  ││││ │││││││││  0x00007efff8748586: jp     0x00007efff87485ee
  2.76%  ││││ │││││││││  0x00007efff8748588: jne    0x00007efff87485ee             ;*iload {reexecute=0 rethrow=0 return_oop=0}
         ││││ │││││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
         ││││ │││││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.86%  ││││ │││││││││  0x00007efff874858a: test   %r11d,%r11d
         ││││ ││╰││││││  0x00007efff874858d: jne    0x00007efff87484bf             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         ││││ ││ ││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
         ││││ ││ ││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.72%  ││││ ││ ╰│││││  0x00007efff8748593: jmpq   0x00007efff87484b0
         ↘↘││ ││  │││││  0x00007efff8748598: vucomiss %xmm8,%xmm8
           ││ ││  ╰││││  0x00007efff874859d: jp     0x00007efff8748516
           ││ ││   ╰│││  0x00007efff87485a3: jne    0x00007efff8748516             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
           ││ ││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
           ││ ││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││ ││    │││  0x00007efff87485a9: jmp    0x00007efff87485c3
  0.02%    ↘↘ ││    │││  0x00007efff87485ab: test   %r11d,%r11d
              ││    ╰││  0x00007efff87485ae: jne    0x00007efff8748527             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
              ││     ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@75 (line 168)
              ││     ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
              ││     ││  0x00007efff87485b4: jmp    0x00007efff87485f7
              ↘↘     ││  0x00007efff87485b6: vucomiss %xmm8,%xmm8
                     ╰│  0x00007efff87485bb: jp     0x00007efff8748581
                      ╰  0x00007efff87485bd: jne    0x00007efff8748581             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                                   ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
                                                                                   ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                         0x00007efff87485bf: add    $0x2,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 96.27%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.27%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (251 bytes) 
  1.92%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.34%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (41 bytes) 
  0.16%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (34 bytes) 
  0.14%   [kernel.kallsyms]  [unknown] (41 bytes) 
  0.10%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (10 bytes) 
  0.08%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (27 bytes) 
  0.08%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (42 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (26 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (14 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (30 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (5 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (1 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (9 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (3 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (15 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.34%  <...other 17 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.26%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 
  2.32%   [kernel.kallsyms]  [unknown] 
  0.18%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN10JNIHandles10make_localEP7JNIEnv_P7oopDesc 
  0.02%         interpreter  invoke return entry points  
  0.02%         interpreter  invokespecial  183 invokespecial  
  0.02%         interpreter  monitorenter  194 monitorenter  
  0.02%           libjvm.so  _ZN20SafepointSynchronize5beginEv 
  0.02%           libjvm.so  _ZN13InstanceKlass17find_method_indexEPK5ArrayIP6MethodEPK6SymbolS8_N5Klass18OverpassLookupModeENS9_16StaticLookupModeENS9_17PrivateLookupModeE.constprop.305 
  0.02%           libjvm.so  _ZN15ClassFileParserC2EP15ClassFileStreamP6SymbolP15ClassLoaderData6HandlePK13InstanceKlassP13GrowableArrayIS6_ENS_9PublicityEP6Thread 
  0.02%         interpreter  lreturn  173 lreturn  
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.44%                  c2
  2.32%   [kernel.kallsyms]
  0.12%         interpreter
  0.10%           libjvm.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53539 total address lines.
Perf output processed (skipped 6.655 seconds):
 Column 1: cycles (5089 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (326 bytes) 

                      0x00007f142c74ab9c: mov    %ebx,0x0(%rbp,%rax,1)
                      0x00007f142c74aba0: add    $0x2,%edx                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007f142c74aba3: cmp    %ecx,%edx
                      0x00007f142c74aba5: jl     0x00007f142c74ab09             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@9 (line 161)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007f142c74abab: mov    $0xfffffffc,%ebx
                      0x00007f142c74abb0: sub    %r10d,%ebx
  0.02%               0x00007f142c74abb3: mov    $0xfffffffc,%r10d
                      0x00007f142c74abb9: sub    %r8d,%r10d
                      0x00007f142c74abbc: mov    $0xfffffffc,%r8d
                      0x00007f142c74abc2: sub    %r11d,%r8d
                      0x00007f142c74abc5: inc    %ebx
                      0x00007f142c74abc7: inc    %r8d
                      0x00007f142c74abca: cmp    %ebx,%r8d
                      0x00007f142c74abcd: cmovg  %ebx,%r8d
  0.02%               0x00007f142c74abd1: inc    %r10d
                      0x00007f142c74abd4: cmp    %r8d,%r10d
                      0x00007f142c74abd7: cmovg  %r8d,%r10d
                      0x00007f142c74abdb: cmp    0x70(%rsp),%r10d
                      0x00007f142c74abe0: mov    0x70(%rsp),%r11d
                      0x00007f142c74abe5: cmovg  %r11d,%r10d
                      0x00007f142c74abe9: mov    %r10d,%r11d
                      0x00007f142c74abec: add    $0xfffffffe,%r11d
  0.04%               0x00007f142c74abf0: cmp    %r11d,%r10d
                      0x00007f142c74abf3: mov    $0x80000000,%r8d
                      0x00007f142c74abf9: cmovl  %r8d,%r11d
                      0x00007f142c74abfd: cmp    %r11d,%edx
                      0x00007f142c74ac00: jge    0x00007f142c74a8c0
         ╭            0x00007f142c74ac06: jmpq   0x00007f142c74ac9a
         │            0x00007f142c74ac0b: nopl   0x0(%rax,%rax,1)
  1.85%  │      ↗     0x00007f142c74ac10: vaddss %xmm8,%xmm5,%xmm7
  1.55%  │      │     0x00007f142c74ac15: vmovd  %xmm7,%r8d
  1.45%  │      │     0x00007f142c74ac1a: mov    %r8d,0x0(%rbp,%rax,1)          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │      │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
         │      │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.81%  │     ↗│     0x00007f142c74ac1f: mov    0x2(%rdi,%rcx,1),%r8d
  1.43%  │     ││     0x00007f142c74ac24: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │     ││                                                               ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.51%  │     ││     0x00007f142c74ac29: vucomiss %xmm5,%xmm5
  1.43%  │     ││     0x00007f142c74ac2d: jp     0x00007f142c74adae
  3.77%  │     ││     0x00007f142c74ac33: jne    0x00007f142c74adae             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.lang.Float::isNaN@3 (line 467)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.04%  │     ││     0x00007f142c74ac39: xor    %r9d,%r9d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.lang.Float::isNaN@11 (line 467)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.71%  │     ││     0x00007f142c74ac3c: mov    0x2(%rsi,%rcx,1),%r8d
  1.43%  │     ││     0x00007f142c74ac41: vmovd  %r8d,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │     ││                                                               ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.89%  │     ││     0x00007f142c74ac46: vucomiss %xmm8,%xmm8
  1.63%  │     ││     0x00007f142c74ac4b: jp     0x00007f142c74adb9
  2.77%  │     ││     0x00007f142c74ac51: jne    0x00007f142c74adb9             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.lang.Float::isNaN@3 (line 467)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.89%  │     ││     0x00007f142c74ac57: xor    %ebx,%ebx                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.lang.Float::isNaN@11 (line 467)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.57%  │     ││     0x00007f142c74ac59: vucomiss %xmm5,%xmm5
  1.65%  │╭    ││     0x00007f142c74ac5d: jp     0x00007f142c74ad09
  1.61%  ││╭   ││     0x00007f142c74ac63: jne    0x00007f142c74ad09             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         │││   ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
         │││   ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.44%  │││   ││  ↗  0x00007f142c74ac69: vucomiss %xmm8,%xmm8
  1.71%  │││   ││  │  0x00007f142c74ac6e: jp     0x00007f142c74ad4d
  1.65%  │││   ││  │  0x00007f142c74ac74: jne    0x00007f142c74ad4d             ;*iload {reexecute=0 rethrow=0 return_oop=0}
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.47%  │││   ││  │  0x00007f142c74ac7a: test   %r9d,%r9d
         │││╭  ││  │  0x00007f142c74ac7d: jne    0x00007f142c74ac8e             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         ││││  ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
         ││││  ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.95%  ││││  ││  │  0x00007f142c74ac7f: vaddss %xmm8,%xmm5,%xmm7
  1.51%  ││││  ││  │  0x00007f142c74ac84: vmovd  %xmm7,%r8d
  1.47%  ││││  ││  │  0x00007f142c74ac89: mov    %r8d,0x2(%rbp,%rcx,1)          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││││  ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
         ││││  ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.47%  │││↘  ││  │  0x00007f142c74ac8e: cmp    %r11d,%r10d
         │││   ││  │  0x00007f142c74ac91: jge    0x00007f142c74ad7e             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@9 (line 161)
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.08%  │││   ││  │  0x00007f142c74ac97: mov    %r10d,%edx                     ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@12 (line 162)
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.49%  ↘││   ││  │  0x00007f142c74ac9a: movslq %edx,%rax                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.24%   ││   ││  │  0x00007f142c74ac9d: mov    (%rdi,%rax,1),%r8d
  1.59%   ││   ││  │  0x00007f142c74aca1: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.36%   ││   ││  │  0x00007f142c74aca6: vucomiss %xmm5,%xmm5
  1.65%   ││   ││  │  0x00007f142c74acaa: jp     0x00007f142c74ad99
  5.09%   ││   ││  │  0x00007f142c74acb0: jne    0x00007f142c74ad99             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.lang.Float::isNaN@3 (line 467)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.10%   ││   ││  │  0x00007f142c74acb6: xor    %r9d,%r9d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.lang.Float::isNaN@11 (line 467)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.34%   ││   ││  │  0x00007f142c74acb9: mov    (%rsi,%rax,1),%r10d
  1.77%   ││   ││  │  0x00007f142c74acbd: vmovd  %r10d,%xmm8                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.61%   ││   ││  │  0x00007f142c74acc2: vucomiss %xmm8,%xmm8
  1.89%   ││   ││  │  0x00007f142c74acc7: jp     0x00007f142c74ada4
  5.66%   ││   ││  │  0x00007f142c74accd: jne    0x00007f142c74ada4             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.lang.Float::isNaN@3 (line 467)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.85%   ││   ││  │  0x00007f142c74acd3: xor    %ebx,%ebx                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.lang.Float::isNaN@11 (line 467)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.34%   ││   ││  │  0x00007f142c74acd5: vucomiss %xmm5,%xmm5
  1.32%   ││ ╭ ││  │  0x00007f142c74acd9: jp     0x00007f142c74acfe
  2.97%   ││ │╭││  │  0x00007f142c74acdb: jne    0x00007f142c74acfe             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
          ││ ││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.04%   ││ ││││↗↗│  0x00007f142c74acdd: vucomiss %xmm8,%xmm8
  1.47%   ││ │││││││  0x00007f142c74ace2: jp     0x00007f142c74ad46
  1.34%   ││ │││││││  0x00007f142c74ace4: jne    0x00007f142c74ad46             ;*iload {reexecute=0 rethrow=0 return_oop=0}
          ││ │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
          ││ │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.63%   ││ │││││││  0x00007f142c74ace6: movslq %edx,%rcx
  1.51%   ││ │││││││  0x00007f142c74ace9: mov    %edx,%r10d
  1.51%   ││ │││││││  0x00007f142c74acec: add    $0x4,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││ │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
          ││ │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.43%   ││ │││││││  0x00007f142c74acf0: test   %r9d,%r9d
  0.02%   ││ ││╰││││  0x00007f142c74acf3: jne    0x00007f142c74ac1f             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││ ││ ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
          ││ ││ ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.61%   ││ ││ ╰│││  0x00007f142c74acf9: jmpq   0x00007f142c74ac10
          ││ ↘↘  │││  0x00007f142c74acfe: vucomiss %xmm8,%xmm8
          ││     ╰││  0x00007f142c74ad03: jp     0x00007f142c74acdd
          ││      ╰│  0x00007f142c74ad05: jne    0x00007f142c74acdd
          ││       │  0x00007f142c74ad07: jmp    0x00007f142c74ad1d
          ↘↘       │  0x00007f142c74ad09: vucomiss %xmm8,%xmm8
                   ╰  0x00007f142c74ad0e: jp     0x00007f142c74ac69
                      0x00007f142c74ad14: jne    0x00007f142c74ac69             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
....................................................................................................
 95.68%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.68%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (326 bytes) 
  2.26%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.67%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.14%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.12%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (49 bytes) 
  0.12%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (28 bytes) 
  0.12%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (56 bytes) 
  0.12%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (33 bytes) 
  0.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (28 bytes) 
  0.08%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.35%  <...other 18 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.44%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 
  3.12%   [kernel.kallsyms]  [unknown] 
  0.12%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.10%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%         interpreter  newarray  188 newarray  
  0.02%         interpreter  fast_iload  224 fast_iload  
  0.02%           libjvm.so  _ZN18InterpreterRuntime18resolve_from_cacheEP10JavaThreadN9Bytecodes4CodeE 
  0.02%           libjvm.so  _ZN2os14is_interruptedEP6Threadb 
  0.02%         interpreter  aaload  50 aaload  
  0.02%           libjvm.so  _ZN17CompilationPolicy19compile_if_requiredERK12methodHandleP6Thread 
  0.02%           libjvm.so  _ZN12PeriodicTask14real_time_tickEi 
  0.02%           libjvm.so  _ZN12ConstantPool13klass_at_implERK18constantPoolHandleibP6Thread 
  0.02%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.56%                  c2
  3.12%   [kernel.kallsyms]
  0.20%         interpreter
  0.10%           libjvm.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckOptimistic
# Parameters: (probabilityOfNaN = 0.01, size = 1024)

# Run progress: 29.63% complete, ETA 00:11:26
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 320.296 ops/ms
# Warmup Iteration   2: 339.195 ops/ms
# Warmup Iteration   3: 351.866 ops/ms
# Warmup Iteration   4: 352.310 ops/ms
# Warmup Iteration   5: 351.283 ops/ms
Iteration   1: 350.109 ops/ms
Iteration   2: 350.839 ops/ms
Iteration   3: 355.360 ops/ms
Iteration   4: 353.773 ops/ms
Iteration   5: 350.808 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 30.86% complete, ETA 00:11:14
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 330.431 ops/ms
# Warmup Iteration   2: 350.580 ops/ms
# Warmup Iteration   3: 352.788 ops/ms
# Warmup Iteration   4: 356.326 ops/ms
# Warmup Iteration   5: 352.204 ops/ms
Iteration   1: 351.899 ops/ms
Iteration   2: 354.001 ops/ms
Iteration   3: 354.959 ops/ms
Iteration   4: 353.150 ops/ms
Iteration   5: 353.312 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 32.10% complete, ETA 00:11:01
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 337.978 ops/ms
# Warmup Iteration   2: 348.549 ops/ms
# Warmup Iteration   3: 353.968 ops/ms
# Warmup Iteration   4: 355.048 ops/ms
# Warmup Iteration   5: 351.536 ops/ms
Iteration   1: 351.855 ops/ms
Iteration   2: 353.813 ops/ms
Iteration   3: 353.374 ops/ms
Iteration   4: 353.368 ops/ms
Iteration   5: 353.046 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckOptimistic":
  352.911 ±(99.9%) 1.624 ops/ms [Average]
  (min, avg, max) = (350.109, 352.911, 355.360), stdev = 1.519
  CI (99.9%): [351.287, 354.535] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckOptimistic:·asm":
PrintAssembly processed: 53501 total address lines.
Perf output processed (skipped 6.639 seconds):
 Column 1: cycles (5096 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (313 bytes) 

                       0x00007fb9cfae3d23: cmp    %ecx,%edx
                       0x00007fb9cfae3d25: jl     0x00007fb9cfae3c89             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@9 (line 161)
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                       0x00007fb9cfae3d2b: mov    $0xfffffffc,%ebx
                       0x00007fb9cfae3d30: sub    %r10d,%ebx
                       0x00007fb9cfae3d33: mov    $0xfffffffc,%r10d
                       0x00007fb9cfae3d39: sub    %r8d,%r10d
                       0x00007fb9cfae3d3c: mov    $0xfffffffc,%r8d
                       0x00007fb9cfae3d42: sub    %r11d,%r8d
  0.06%                0x00007fb9cfae3d45: inc    %ebx
                       0x00007fb9cfae3d47: inc    %r8d
                       0x00007fb9cfae3d4a: cmp    %ebx,%r8d
                       0x00007fb9cfae3d4d: cmovg  %ebx,%r8d
  0.02%                0x00007fb9cfae3d51: inc    %r10d
                       0x00007fb9cfae3d54: cmp    %r8d,%r10d
                       0x00007fb9cfae3d57: cmovg  %r8d,%r10d
                       0x00007fb9cfae3d5b: cmp    0x70(%rsp),%r10d
  0.04%                0x00007fb9cfae3d60: mov    0x70(%rsp),%r11d
                       0x00007fb9cfae3d65: cmovg  %r11d,%r10d
                       0x00007fb9cfae3d69: mov    %r10d,%r11d
                       0x00007fb9cfae3d6c: add    $0xfffffffe,%r11d
                       0x00007fb9cfae3d70: cmp    %r11d,%r10d
                       0x00007fb9cfae3d73: mov    $0x80000000,%r8d
                       0x00007fb9cfae3d79: cmovl  %r8d,%r11d
                       0x00007fb9cfae3d7d: cmp    %r11d,%edx
  0.04%                0x00007fb9cfae3d80: jge    0x00007fb9cfae3a40
         ╭             0x00007fb9cfae3d86: jmp    0x00007fb9cfae3dab
         │             0x00007fb9cfae3d88: nopl   0x0(%rax,%rax,1)
  1.02%  │      ↗      0x00007fb9cfae3d90: vaddss %xmm8,%xmm5,%xmm7
  1.94%  │      │      0x00007fb9cfae3d95: vmovd  %xmm7,%r8d
  1.30%  │      │      0x00007fb9cfae3d9a: mov    %r8d,0x2(%rbp,%rcx,1)          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │      │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
         │      │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.41%  │     ↗│      0x00007fb9cfae3d9f: cmp    %r11d,%r10d
         │     ││      0x00007fb9cfae3da2: jge    0x00007fb9cfae3efe             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@9 (line 161)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.92%  │     ││      0x00007fb9cfae3da8: mov    %r10d,%edx                     ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@12 (line 162)
         │     ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.49%  ↘     ││      0x00007fb9cfae3dab: movslq %edx,%rax                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
               ││                                                                ; - java.nio.DirectByteBuffer::ix@5 (line 258)
               ││                                                                ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.33%        ││      0x00007fb9cfae3dae: mov    (%rdi,%rax,1),%r8d
  1.71%        ││      0x00007fb9cfae3db2: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
               ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
               ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.63%        ││      0x00007fb9cfae3db7: vucomiss %xmm5,%xmm5
  1.47%        ││      0x00007fb9cfae3dbb: jp     0x00007fb9cfae3f19
  4.89%        ││      0x00007fb9cfae3dc1: jne    0x00007fb9cfae3f19             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
               ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.39%        ││      0x00007fb9cfae3dc7: xor    %r9d,%r9d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
               ││                                                                ; - java.lang.Float::isNaN@11 (line 467)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.22%        ││      0x00007fb9cfae3dca: mov    (%rsi,%rax,1),%r10d
  1.53%        ││      0x00007fb9cfae3dce: vmovd  %r10d,%xmm8                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
               ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
               ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.81%        ││      0x00007fb9cfae3dd3: vucomiss %xmm8,%xmm8
  1.57%        ││      0x00007fb9cfae3dd8: jp     0x00007fb9cfae3f24
  2.75%        ││      0x00007fb9cfae3dde: jne    0x00007fb9cfae3f24             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
               ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.96%        ││      0x00007fb9cfae3de4: xor    %ebx,%ebx                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
               ││                                                                ; - java.lang.Float::isNaN@11 (line 467)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.65%        ││      0x00007fb9cfae3de6: vucomiss %xmm5,%xmm5
  1.43%   ╭    ││      0x00007fb9cfae3dea: jp     0x00007fb9cfae3e7e
  3.00%   │╭   ││      0x00007fb9cfae3df0: jne    0x00007fb9cfae3e7e             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
          ││   ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.39%   ││   ││↗↗    0x00007fb9cfae3df6: vucomiss %xmm8,%xmm8
  1.90%   ││   ││││    0x00007fb9cfae3dfb: jp     0x00007fb9cfae3ec6
  1.49%   ││   ││││    0x00007fb9cfae3e01: jne    0x00007fb9cfae3ec6             ;*iload {reexecute=0 rethrow=0 return_oop=0}
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.77%   ││   ││││    0x00007fb9cfae3e07: movslq %edx,%rcx
  1.43%   ││   ││││    0x00007fb9cfae3e0a: mov    %edx,%r10d
  1.10%   ││   ││││    0x00007fb9cfae3e0d: add    $0x4,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.30%   ││   ││││    0x00007fb9cfae3e11: test   %r9d,%r9d
          ││╭  ││││    0x00007fb9cfae3e14: jne    0x00007fb9cfae3e25             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          │││  ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
          │││  ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.51%   │││  ││││    0x00007fb9cfae3e16: vaddss %xmm8,%xmm5,%xmm7
  1.39%   │││  ││││    0x00007fb9cfae3e1b: vmovd  %xmm7,%r8d
  1.26%   │││  ││││    0x00007fb9cfae3e20: mov    %r8d,0x0(%rbp,%rax,1)          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │││  ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
          │││  ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.63%   ││↘  ││││    0x00007fb9cfae3e25: mov    0x2(%rdi,%rcx,1),%r8d
  1.84%   ││   ││││    0x00007fb9cfae3e2a: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          ││   ││││                                                              ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          ││   ││││                                                              ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.49%   ││   ││││    0x00007fb9cfae3e2f: vucomiss %xmm5,%xmm5
  1.63%   ││   ││││    0x00007fb9cfae3e33: jp     0x00007fb9cfae3f2e
  2.28%   ││   ││││    0x00007fb9cfae3e39: jne    0x00007fb9cfae3f2e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          ││   ││││                                                              ; - java.lang.Float::isNaN@3 (line 467)
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.98%   ││   ││││    0x00007fb9cfae3e3f: xor    %r9d,%r9d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
          ││   ││││                                                              ; - java.lang.Float::isNaN@11 (line 467)
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.31%   ││   ││││    0x00007fb9cfae3e42: mov    0x2(%rsi,%rcx,1),%r8d
  1.45%   ││   ││││    0x00007fb9cfae3e47: vmovd  %r8d,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          ││   ││││                                                              ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          ││   ││││                                                              ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.16%   ││   ││││    0x00007fb9cfae3e4c: vucomiss %xmm8,%xmm8
  1.88%   ││   ││││    0x00007fb9cfae3e51: jp     0x00007fb9cfae3f39
  1.75%   ││   ││││    0x00007fb9cfae3e57: jne    0x00007fb9cfae3f39             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          ││   ││││                                                              ; - java.lang.Float::isNaN@3 (line 467)
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.22%   ││   ││││    0x00007fb9cfae3e5d: xor    %ebx,%ebx                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
          ││   ││││                                                              ; - java.lang.Float::isNaN@11 (line 467)
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
          ││   ││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.65%   ││   ││││    0x00007fb9cfae3e5f: vucomiss %xmm5,%xmm5
  1.59%   ││ ╭ ││││    0x00007fb9cfae3e63: jp     0x00007fb9cfae3e91
  1.94%   ││ │╭││││    0x00007fb9cfae3e65: jne    0x00007fb9cfae3e91             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
          ││ ││││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.65%   ││ ││││││↗↗  0x00007fb9cfae3e67: vucomiss %xmm8,%xmm8
  1.57%   ││ ││││││││  0x00007fb9cfae3e6c: jp     0x00007fb9cfae3ed1
  3.43%   ││ ││││││││  0x00007fb9cfae3e6e: jne    0x00007fb9cfae3ed1             ;*iload {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
          ││ ││││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.22%   ││ ││││││││  0x00007fb9cfae3e70: test   %r9d,%r9d
          ││ ││╰│││││  0x00007fb9cfae3e73: jne    0x00007fb9cfae3d9f             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││ ││ │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
          ││ ││ │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.81%   ││ ││ ╰││││  0x00007fb9cfae3e79: jmpq   0x00007fb9cfae3d90
  0.02%   ↘↘ ││  ││││  0x00007fb9cfae3e7e: vucomiss %xmm8,%xmm8
             ││  ╰│││  0x00007fb9cfae3e83: jp     0x00007fb9cfae3df6
             ││   ╰││  0x00007fb9cfae3e89: jne    0x00007fb9cfae3df6
             ││    ││  0x00007fb9cfae3e8f: jmp    0x00007fb9cfae3e9d
             ↘↘    ││  0x00007fb9cfae3e91: vucomiss %xmm8,%xmm8
                   ╰│  0x00007fb9cfae3e96: jp     0x00007fb9cfae3e67
                    ╰  0x00007fb9cfae3e98: jne    0x00007fb9cfae3e67             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                       0x00007fb9cfae3e9a: add    $0x2,%edx                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
....................................................................................................
 95.62%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.62%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (313 bytes) 
  2.90%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.16%   [kernel.kallsyms]  [unknown] (67 bytes) 
  0.16%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (50 bytes) 
  0.14%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (50 bytes) 
  0.14%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (94 bytes) 
  0.12%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (23 bytes) 
  0.08%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (5 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (9 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (25 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.31%  <...other 16 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.43%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 
  3.41%   [kernel.kallsyms]  [unknown] 
  0.08%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.02%         interpreter  areturn  176 areturn  
  0.02%         classes.jsa  [unknown] 
  0.02%         interpreter  method entry point (kind = zerolocals)  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.51%                  c2
  3.41%   [kernel.kallsyms]
  0.04%         interpreter
  0.02%         classes.jsa
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53716 total address lines.
Perf output processed (skipped 6.606 seconds):
 Column 1: cycles (5077 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (272 bytes) 

                      0x00007f1ac4111745: inc    %ebx
                      0x00007f1ac4111747: inc    %r8d
                      0x00007f1ac411174a: cmp    %ebx,%r8d
                      0x00007f1ac411174d: cmovg  %ebx,%r8d
                      0x00007f1ac4111751: inc    %r10d
                      0x00007f1ac4111754: cmp    %r8d,%r10d
                      0x00007f1ac4111757: cmovg  %r8d,%r10d
                      0x00007f1ac411175b: cmp    0x70(%rsp),%r10d
                      0x00007f1ac4111760: mov    0x70(%rsp),%r11d
                      0x00007f1ac4111765: cmovg  %r11d,%r10d
  0.02%               0x00007f1ac4111769: mov    %r10d,%r11d
                      0x00007f1ac411176c: add    $0xfffffffe,%r11d
  0.02%               0x00007f1ac4111770: cmp    %r11d,%r10d
                      0x00007f1ac4111773: mov    $0x80000000,%r8d
                      0x00007f1ac4111779: cmovl  %r8d,%r11d
  0.02%               0x00007f1ac411177d: cmp    %r11d,%edx
  0.02%               0x00007f1ac4111780: jge    0x00007f1ac4111440
         ╭            0x00007f1ac4111786: jmpq   0x00007f1ac411181a
         │            0x00007f1ac411178b: nopl   0x0(%rax,%rax,1)
  1.48%  │      ↗     0x00007f1ac4111790: vaddss %xmm8,%xmm5,%xmm7
  1.54%  │      │     0x00007f1ac4111795: vmovd  %xmm7,%r8d
  1.24%  │      │     0x00007f1ac411179a: mov    %r8d,0x0(%rbp,%rax,1)          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │      │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
         │      │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.95%  │     ↗│     0x00007f1ac411179f: mov    0x2(%rdi,%rcx,1),%r8d
  1.62%  │     ││     0x00007f1ac41117a4: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │     ││                                                               ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.44%  │     ││     0x00007f1ac41117a9: vucomiss %xmm5,%xmm5
  1.71%  │     ││     0x00007f1ac41117ad: jp     0x00007f1ac411192e
  4.22%  │     ││     0x00007f1ac41117b3: jne    0x00007f1ac411192e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.lang.Float::isNaN@3 (line 467)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.91%  │     ││     0x00007f1ac41117b9: xor    %r9d,%r9d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.lang.Float::isNaN@11 (line 467)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.12%  │     ││     0x00007f1ac41117bc: mov    0x2(%rsi,%rcx,1),%r8d
  1.34%  │     ││     0x00007f1ac41117c1: vmovd  %r8d,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │     ││                                                               ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.83%  │     ││     0x00007f1ac41117c6: vucomiss %xmm8,%xmm8
  1.99%  │     ││     0x00007f1ac41117cb: jp     0x00007f1ac4111939
  2.84%  │     ││     0x00007f1ac41117d1: jne    0x00007f1ac4111939             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.lang.Float::isNaN@3 (line 467)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.15%  │     ││     0x00007f1ac41117d7: xor    %ebx,%ebx                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                               ; - java.lang.Float::isNaN@11 (line 467)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
         │     ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.54%  │     ││     0x00007f1ac41117d9: vucomiss %xmm5,%xmm5
  1.20%  │╭    ││     0x00007f1ac41117dd: jp     0x00007f1ac4111889
  1.63%  ││╭   ││     0x00007f1ac41117e3: jne    0x00007f1ac4111889             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         │││   ││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
         │││   ││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.01%  │││   ││  ↗  0x00007f1ac41117e9: vucomiss %xmm8,%xmm8
  1.73%  │││   ││  │  0x00007f1ac41117ee: jp     0x00007f1ac41118cd
  1.38%  │││   ││  │  0x00007f1ac41117f4: jne    0x00007f1ac41118cd             ;*iload {reexecute=0 rethrow=0 return_oop=0}
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.50%  │││   ││  │  0x00007f1ac41117fa: test   %r9d,%r9d
         │││╭  ││  │  0x00007f1ac41117fd: jne    0x00007f1ac411180e             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
         ││││  ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
         ││││  ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.17%  ││││  ││  │  0x00007f1ac41117ff: vaddss %xmm8,%xmm5,%xmm7
  1.56%  ││││  ││  │  0x00007f1ac4111804: vmovd  %xmm7,%r8d
  1.42%  ││││  ││  │  0x00007f1ac4111809: mov    %r8d,0x2(%rbp,%rcx,1)          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││││  ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
         ││││  ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.34%  │││↘  ││  │  0x00007f1ac411180e: cmp    %r11d,%r10d
         │││   ││  │  0x00007f1ac4111811: jge    0x00007f1ac41118fe             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@9 (line 161)
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.54%  │││   ││  │  0x00007f1ac4111817: mov    %r10d,%edx                     ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@12 (line 162)
         │││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.60%  ↘││   ││  │  0x00007f1ac411181a: movslq %edx,%rax                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.18%   ││   ││  │  0x00007f1ac411181d: mov    (%rdi,%rax,1),%r8d
  1.77%   ││   ││  │  0x00007f1ac4111821: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.56%   ││   ││  │  0x00007f1ac4111826: vucomiss %xmm5,%xmm5
  1.87%   ││   ││  │  0x00007f1ac411182a: jp     0x00007f1ac4111919
  4.51%   ││   ││  │  0x00007f1ac4111830: jne    0x00007f1ac4111919             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.lang.Float::isNaN@3 (line 467)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.32%   ││   ││  │  0x00007f1ac4111836: xor    %r9d,%r9d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.lang.Float::isNaN@11 (line 467)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.42%   ││   ││  │  0x00007f1ac4111839: mov    (%rsi,%rax,1),%r10d
  1.85%   ││   ││  │  0x00007f1ac411183d: vmovd  %r10d,%xmm8                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          ││   ││  │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.63%   ││   ││  │  0x00007f1ac4111842: vucomiss %xmm8,%xmm8
  1.87%   ││   ││  │  0x00007f1ac4111847: jp     0x00007f1ac4111924
  5.08%   ││   ││  │  0x00007f1ac411184d: jne    0x00007f1ac4111924             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.lang.Float::isNaN@3 (line 467)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.97%   ││   ││  │  0x00007f1ac4111853: xor    %ebx,%ebx                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
          ││   ││  │                                                            ; - java.lang.Float::isNaN@11 (line 467)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
          ││   ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.52%   ││   ││  │  0x00007f1ac4111855: vucomiss %xmm5,%xmm5
  1.28%   ││ ╭ ││  │  0x00007f1ac4111859: jp     0x00007f1ac411187e
  2.86%   ││ │╭││  │  0x00007f1ac411185b: jne    0x00007f1ac411187e             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
          ││ ││││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.15%   ││ ││││↗↗│  0x00007f1ac411185d: vucomiss %xmm8,%xmm8
  1.63%   ││ │││││││  0x00007f1ac4111862: jp     0x00007f1ac41118c6
  1.32%   ││ │││││││  0x00007f1ac4111864: jne    0x00007f1ac41118c6             ;*iload {reexecute=0 rethrow=0 return_oop=0}
          ││ │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
          ││ │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.75%   ││ │││││││  0x00007f1ac4111866: movslq %edx,%rcx
  1.77%   ││ │││││││  0x00007f1ac4111869: mov    %edx,%r10d
  1.79%   ││ │││││││  0x00007f1ac411186c: add    $0x4,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││ │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
          ││ │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.22%   ││ │││││││  0x00007f1ac4111870: test   %r9d,%r9d
          ││ ││╰││││  0x00007f1ac4111873: jne    0x00007f1ac411179f             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││ ││ ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
          ││ ││ ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.46%   ││ ││ ╰│││  0x00007f1ac4111879: jmpq   0x00007f1ac4111790
          ││ ↘↘  │││  0x00007f1ac411187e: vucomiss %xmm8,%xmm8
          ││     ╰││  0x00007f1ac4111883: jp     0x00007f1ac411185d
          ││      ╰│  0x00007f1ac4111885: jne    0x00007f1ac411185d
          ││       │  0x00007f1ac4111887: jmp    0x00007f1ac411189d
          ↘↘       │  0x00007f1ac4111889: vucomiss %xmm8,%xmm8
                   ╰  0x00007f1ac411188e: jp     0x00007f1ac41117e9
                      0x00007f1ac4111894: jne    0x00007f1ac41117e9             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
....................................................................................................
 95.84%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.84%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (272 bytes) 
  2.70%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.33%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (33 bytes) 
  0.16%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (58 bytes) 
  0.10%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (50 bytes) 
  0.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (33 bytes) 
  0.06%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (21 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (57 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (28 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.24%  <...other 12 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.75%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 
  3.03%   [kernel.kallsyms]  [unknown] 
  0.08%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.08%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  return  177 return  
  0.02%         classes.jsa  [unknown] 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.83%                  c2
  3.03%   [kernel.kallsyms]
  0.10%         interpreter
  0.02%         classes.jsa
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53694 total address lines.
Perf output processed (skipped 6.633 seconds):
 Column 1: cycles (5103 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (332 bytes) 

                          0x00007f9490749623: cmp    %ecx,%edx
                          0x00007f9490749625: jl     0x00007f9490749589             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@9 (line 161)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                          0x00007f949074962b: mov    $0xfffffffc,%ebx
                          0x00007f9490749630: sub    %r10d,%ebx
                          0x00007f9490749633: mov    $0xfffffffc,%r10d
                          0x00007f9490749639: sub    %r8d,%r10d
                          0x00007f949074963c: mov    $0xfffffffc,%r8d
                          0x00007f9490749642: sub    %r11d,%r8d
  0.02%                   0x00007f9490749645: inc    %ebx
                          0x00007f9490749647: inc    %r8d
                          0x00007f949074964a: cmp    %ebx,%r8d
                          0x00007f949074964d: cmovg  %ebx,%r8d
  0.04%                   0x00007f9490749651: inc    %r10d
                          0x00007f9490749654: cmp    %r8d,%r10d
                          0x00007f9490749657: cmovg  %r8d,%r10d
                          0x00007f949074965b: cmp    0x70(%rsp),%r10d
  0.02%                   0x00007f9490749660: mov    0x70(%rsp),%r11d
                          0x00007f9490749665: cmovg  %r11d,%r10d
                          0x00007f9490749669: mov    %r10d,%r11d
                          0x00007f949074966c: add    $0xfffffffe,%r11d
  0.04%                   0x00007f9490749670: cmp    %r11d,%r10d
                          0x00007f9490749673: mov    $0x80000000,%r8d
                          0x00007f9490749679: cmovl  %r8d,%r11d
                          0x00007f949074967d: cmp    %r11d,%edx
                          0x00007f9490749680: jge    0x00007f9490749340
         ╭                0x00007f9490749686: jmp    0x00007f94907496ab
         │                0x00007f9490749688: nopl   0x0(%rax,%rax,1)
  1.29%  │        ↗       0x00007f9490749690: vaddss %xmm8,%xmm5,%xmm7
  1.90%  │        │       0x00007f9490749695: vmovd  %xmm7,%r8d
  1.53%  │        │       0x00007f949074969a: mov    %r8d,0x2(%rbp,%rcx,1)          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │        │                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
         │        │                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.59%  │       ↗│       0x00007f949074969f: cmp    %r11d,%r10d
         │       ││       0x00007f94907496a2: jge    0x00007f9490749802             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │       ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@9 (line 161)
         │       ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.88%  │       ││       0x00007f94907496a8: mov    %r10d,%edx                     ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │       ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@12 (line 162)
         │       ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.49%  ↘       ││       0x00007f94907496ab: movslq %edx,%rax                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                 ││                                                                 ; - java.nio.DirectByteBuffer::ix@5 (line 258)
                 ││                                                                 ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
                 ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
                 ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.43%          ││       0x00007f94907496ae: mov    (%rdi,%rax,1),%r8d
  1.55%          ││       0x00007f94907496b2: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                 ││                                                                 ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                 ││                                                                 ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                 ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
                 ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.67%          ││       0x00007f94907496b7: vucomiss %xmm5,%xmm5
  1.27%          ││       0x00007f94907496bb: jp     0x00007f949074981d
  5.37%          ││       0x00007f94907496c1: jne    0x00007f949074981d             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                 ││                                                                 ; - java.lang.Float::isNaN@3 (line 467)
                 ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
                 ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.27%          ││       0x00007f94907496c7: xor    %r9d,%r9d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                 ││                                                                 ; - java.lang.Float::isNaN@11 (line 467)
                 ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
                 ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.14%          ││       0x00007f94907496ca: mov    (%rsi,%rax,1),%r10d
  1.53%          ││       0x00007f94907496ce: vmovd  %r10d,%xmm8                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                 ││                                                                 ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                 ││                                                                 ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                 ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
                 ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.29%          ││       0x00007f94907496d3: vucomiss %xmm8,%xmm8
  1.63%          ││       0x00007f94907496d8: jp     0x00007f9490749828
  2.18%          ││       0x00007f94907496de: jne    0x00007f9490749828             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                 ││                                                                 ; - java.lang.Float::isNaN@3 (line 467)
                 ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
                 ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.10%          ││       0x00007f94907496e4: xor    %ebx,%ebx                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                 ││                                                                 ; - java.lang.Float::isNaN@11 (line 467)
                 ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
                 ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.67%          ││       0x00007f94907496e6: vucomiss %xmm5,%xmm5
  1.65%   ╭      ││       0x00007f94907496ea: jp     0x00007f949074977e
  3.14%   │╭     ││       0x00007f94907496f0: jne    0x00007f949074977e             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
          ││     ││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.18%   ││     ││↗↗     0x00007f94907496f6: vucomiss %xmm8,%xmm8
  1.39%   ││╭    ││││     0x00007f94907496fb: jp     0x00007f9490749791
  1.59%   │││╭   ││││     0x00007f9490749701: jne    0x00007f9490749791             ;*iload {reexecute=0 rethrow=0 return_oop=0}
          ││││   ││││                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
          ││││   ││││                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.88%   ││││   ││││↗    0x00007f9490749707: movslq %edx,%rcx
  1.41%   ││││   │││││    0x00007f949074970a: mov    %edx,%r10d
  1.59%   ││││   │││││    0x00007f949074970d: add    $0x4,%r10d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
          ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.41%   ││││   │││││    0x00007f9490749711: test   %r9d,%r9d
  0.02%   ││││╭  │││││    0x00007f9490749714: jne    0x00007f9490749725             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          │││││  │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
          │││││  │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.39%   │││││  │││││    0x00007f9490749716: vaddss %xmm8,%xmm5,%xmm7
  1.45%   │││││  │││││    0x00007f949074971b: vmovd  %xmm7,%r8d
  1.53%   │││││  │││││    0x00007f9490749720: mov    %r8d,0x0(%rbp,%rax,1)          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │││││  │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@109 (line 161)
          │││││  │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.65%   ││││↘  │││││    0x00007f9490749725: mov    0x2(%rdi,%rcx,1),%r8d
  2.00%   ││││   │││││    0x00007f949074972a: vmovd  %r8d,%xmm5                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          ││││   │││││                                                              ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          ││││   │││││                                                              ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@17 (line 162)
          ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.23%   ││││   │││││    0x00007f949074972f: vucomiss %xmm5,%xmm5
  1.45%   ││││   │││││    0x00007f9490749733: jp     0x00007f9490749832
  2.43%   ││││   │││││    0x00007f9490749739: jne    0x00007f9490749832             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          ││││   │││││                                                              ; - java.lang.Float::isNaN@3 (line 467)
          ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
          ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.61%   ││││   │││││    0x00007f949074973f: xor    %r9d,%r9d                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
          ││││   │││││                                                              ; - java.lang.Float::isNaN@11 (line 467)
          ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@32 (line 164)
          ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.35%   ││││   │││││    0x00007f9490749742: mov    0x2(%rsi,%rcx,1),%r8d
  1.35%   ││││   │││││    0x00007f9490749747: vmovd  %r8d,%xmm8                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          ││││   │││││                                                              ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          ││││   │││││                                                              ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@26 (line 163)
          ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.37%   ││││   │││││    0x00007f949074974c: vucomiss %xmm8,%xmm8
  1.63%   ││││   │││││    0x00007f9490749751: jp     0x00007f949074983d
  1.69%   ││││   │││││    0x00007f9490749757: jne    0x00007f949074983d             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          ││││   │││││                                                              ; - java.lang.Float::isNaN@3 (line 467)
          ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
          ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.17%   ││││   │││││    0x00007f949074975d: xor    %ebx,%ebx                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
          ││││   │││││                                                              ; - java.lang.Float::isNaN@11 (line 467)
          ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@39 (line 165)
          ││││   │││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.49%   ││││   │││││    0x00007f949074975f: vucomiss %xmm5,%xmm5
  1.80%   ││││ ╭ │││││    0x00007f9490749763: jp     0x00007f949074979c
  2.10%   ││││ │╭│││││    0x00007f9490749765: jne    0x00007f949074979c             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││││ │││││││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
          ││││ │││││││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.49%   ││││ │││││││↗↗  0x00007f9490749767: vucomiss %xmm8,%xmm8
  1.20%   ││││ │││││││││  0x00007f949074976c: jp     0x00007f94907497d2
  3.33%   ││││ │││││││││  0x00007f949074976e: jne    0x00007f94907497d2             ;*iload {reexecute=0 rethrow=0 return_oop=0}
          ││││ │││││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@91 (line 170)
          ││││ │││││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.74%   ││││ │││││││││  0x00007f9490749770: test   %r9d,%r9d
          ││││ ││╰││││││  0x00007f9490749773: jne    0x00007f949074969f             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
          ││││ ││ ││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@93 (line 170)
          ││││ ││ ││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.80%   ││││ ││ ╰│││││  0x00007f9490749779: jmpq   0x00007f9490749690
  0.02%   ↘↘││ ││  │││││  0x00007f949074977e: vucomiss %xmm8,%xmm8
            ││ ││  ╰││││  0x00007f9490749783: jp     0x00007f94907496f6
            ││ ││   ╰│││  0x00007f9490749789: jne    0x00007f94907496f6             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
            ││ ││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
            ││ ││    │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            ││ ││    │││  0x00007f949074978f: jmp    0x00007f94907497a8
  0.02%     ↘↘ ││    │││  0x00007f9490749791: test   %r9d,%r9d
               ││    ╰││  0x00007f9490749794: jne    0x00007f9490749707             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
               ││     ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@75 (line 168)
               ││     ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               ││     ││  0x00007f949074979a: jmp    0x00007f94907497da
               ↘↘     ││  0x00007f949074979c: vucomiss %xmm8,%xmm8
                      ╰│  0x00007f94907497a1: jp     0x00007f9490749767
                       ╰  0x00007f94907497a3: jne    0x00007f9490749767             ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckOptimistic@51 (line 166)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                          0x00007f94907497a5: add    $0x2,%edx                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 95.41%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.41%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (332 bytes) 
  2.74%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.20%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (79 bytes) 
  0.16%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (120 bytes) 
  0.12%   [kernel.kallsyms]  [unknown] (2 bytes) 
  0.12%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.08%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (72 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (30 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (17 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (4 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.04%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (5 bytes) 
  0.04%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (4 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.61%  <...other 31 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.16%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckOptimistic_jmhTest::verticalSumBufferNaNCheckOptimistic_thrpt_jmhStub, version 145 
  3.37%   [kernel.kallsyms]  [unknown] 
  0.08%         interpreter  method entry point (kind = zerolocals)  
  0.08%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.04%         interpreter  invokevirtual  182 invokevirtual  
  0.04%         interpreter  getstatic  178 getstatic  
  0.04%         interpreter  method entry point (kind = native)  
  0.02%           libjvm.so  _ZN12LinkResolver25check_klass_accessabilityEP5KlassS1_bP6Thread 
  0.02%           libjvm.so  _ZN13CollectedHeap14array_allocateEP5KlassiibP6Thread 
  0.02%           libjvm.so  _ZN14AccessInternal19PostRuntimeDispatchIN12G1BarrierSet13AccessBarrierILm802934ES1_EELNS_11BarrierTypeE1ELm802934EE18oop_access_barrierEP7oopDesclS7_ 
  0.02%           libjvm.so  pthread_mutex_unlock@plt 
  0.02%           libjvm.so  _ZN12PeriodicTask12time_to_waitEv 
  0.02%           libjvm.so  _ZNK6Symbol10as_unicodeERi 
  0.02%                      <unknown> 
  0.02%           libjvm.so  _ZN14RuntimeService29record_safepoint_synchronizedEv 
  0.02%           libjvm.so  _ZN11SymbolTable9do_lookupEPKcim 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.24%                  c2
  3.37%   [kernel.kallsyms]
  0.20%         interpreter
  0.16%           libjvm.so
  0.02%                    
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckPessimistic
# Parameters: (probabilityOfNaN = 0, size = 1024)

# Run progress: 33.33% complete, ETA 00:10:49
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 614.378 ops/ms
# Warmup Iteration   2: 646.808 ops/ms
# Warmup Iteration   3: 702.530 ops/ms
# Warmup Iteration   4: 701.637 ops/ms
# Warmup Iteration   5: 700.837 ops/ms
Iteration   1: 704.464 ops/ms
Iteration   2: 698.465 ops/ms
Iteration   3: 701.045 ops/ms
Iteration   4: 704.791 ops/ms
Iteration   5: 702.577 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 34.57% complete, ETA 00:10:37
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 613.638 ops/ms
# Warmup Iteration   2: 639.786 ops/ms
# Warmup Iteration   3: 682.696 ops/ms
# Warmup Iteration   4: 704.636 ops/ms
# Warmup Iteration   5: 704.207 ops/ms
Iteration   1: 703.657 ops/ms
Iteration   2: 702.928 ops/ms
Iteration   3: 703.490 ops/ms
Iteration   4: 705.758 ops/ms
Iteration   5: 704.014 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 35.80% complete, ETA 00:10:25
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 604.085 ops/ms
# Warmup Iteration   2: 641.661 ops/ms
# Warmup Iteration   3: 700.543 ops/ms
# Warmup Iteration   4: 704.396 ops/ms
# Warmup Iteration   5: 703.334 ops/ms
Iteration   1: 704.374 ops/ms
Iteration   2: 697.710 ops/ms
Iteration   3: 699.010 ops/ms
Iteration   4: 700.192 ops/ms
Iteration   5: 705.331 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckPessimistic":
  702.520 ±(99.9%) 2.783 ops/ms [Average]
  (min, avg, max) = (697.710, 702.520, 705.758), stdev = 2.603
  CI (99.9%): [699.737, 705.304] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckPessimistic:·asm":
PrintAssembly processed: 53363 total address lines.
Perf output processed (skipped 6.610 seconds):
 Column 1: cycles (5083 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (458 bytes) 

                          0x00007f2d347484d6: inc    %ecx
                          0x00007f2d347484d8: inc    %ebx
                          0x00007f2d347484da: cmp    %ebx,%r8d
                          0x00007f2d347484dd: cmovg  %ebx,%r8d
                          0x00007f2d347484e1: cmp    %r8d,%ecx
                          0x00007f2d347484e4: cmovg  %r8d,%ecx
                          0x00007f2d347484e8: cmp    0x70(%rsp),%ecx
                          0x00007f2d347484ec: mov    0x70(%rsp),%r10d
                          0x00007f2d347484f1: cmovg  %r10d,%ecx
                          0x00007f2d347484f5: mov    %ecx,%edx
  0.02%                   0x00007f2d347484f7: add    $0xfffffffa,%edx
                          0x00007f2d347484fa: cmp    %edx,%ecx
                          0x00007f2d347484fc: mov    $0x80000000,%r10d
                          0x00007f2d34748502: cmovl  %r10d,%edx
  0.04%                   0x00007f2d34748506: cmp    %edx,%r11d
         ╭                0x00007f2d34748509: jge    0x00007f2d34748623
         │                0x00007f2d3474850f: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
         │                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.00%  │        ↗↗      0x00007f2d34748510: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::ix@5 (line 258)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.83%  │        ││      0x00007f2d34748513: mov    (%r9,%rcx,1),%r10d
  1.22%  │        ││      0x00007f2d34748517: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.12%  │        ││      0x00007f2d3474851c: vucomiss %xmm6,%xmm6
  1.59%  │╭       ││      0x00007f2d34748520: jp     0x00007f2d3474854b
  1.73%  ││╭      ││      0x00007f2d34748522: jne    0x00007f2d3474854b             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.22%  │││      ││      0x00007f2d34748524: mov    0x0(%r13,%rcx,1),%r8d
  1.63%  │││      ││      0x00007f2d34748529: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.08%  │││      ││      0x00007f2d3474852e: vucomiss %xmm4,%xmm4
  2.05%  │││      ││      0x00007f2d34748532: jp     0x00007f2d34748728
  1.02%  │││      ││      0x00007f2d34748538: jne    0x00007f2d34748728             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.79%  │││      ││      0x00007f2d3474853e: vaddss %xmm4,%xmm6,%xmm6
  1.04%  │││      ││      0x00007f2d34748542: vmovd  %xmm6,%r10d
  1.73%  │││      ││      0x00007f2d34748547: mov    %r10d,(%rax,%rcx,1)            ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.98%  │↘↘      ││      0x00007f2d3474854b: movslq %r11d,%r10
  1.51%  │        ││      0x00007f2d3474854e: mov    %r13,%r8
  1.18%  │        ││      0x00007f2d34748551: add    %r10,%r8
  1.75%  │        ││      0x00007f2d34748554: mov    %r9,%rcx
  1.40%  │        ││      0x00007f2d34748557: add    %r10,%rcx
  1.85%  │        ││      0x00007f2d3474855a: mov    %rax,%rbx
  1.24%  │        ││      0x00007f2d3474855d: add    %r10,%rbx
  1.73%  │        ││      0x00007f2d34748560: mov    0x2(%rcx),%r10d
  1.22%  │        ││      0x00007f2d34748564: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.79%  │        ││      0x00007f2d34748569: vucomiss %xmm6,%xmm6
  1.32%  │  ╭     ││      0x00007f2d3474856d: jp     0x00007f2d34748597
  1.95%  │  │╭    ││      0x00007f2d3474856f: jne    0x00007f2d34748597             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.02%  │  ││    ││      0x00007f2d34748571: mov    0x2(%r8),%r10d
  1.79%  │  ││    ││      0x00007f2d34748575: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.14%  │  ││    ││      0x00007f2d3474857a: vucomiss %xmm4,%xmm4
  1.67%  │  ││    ││      0x00007f2d3474857e: jp     0x00007f2d3474871e
  1.26%  │  ││    ││      0x00007f2d34748584: jne    0x00007f2d3474871e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.95%  │  ││    ││      0x00007f2d3474858a: vaddss %xmm4,%xmm6,%xmm6
  1.26%  │  ││    ││      0x00007f2d3474858e: vmovd  %xmm6,%r10d
  2.09%  │  ││    ││      0x00007f2d34748593: mov    %r10d,0x2(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.48%  │  ↘↘    ││      0x00007f2d34748597: mov    0x4(%rcx),%r10d
  1.79%  │        ││      0x00007f2d3474859b: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.34%  │        ││      0x00007f2d347485a0: vucomiss %xmm6,%xmm6
  1.51%  │    ╭   ││      0x00007f2d347485a4: jp     0x00007f2d347485ce
  1.69%  │    │╭  ││      0x00007f2d347485a6: jne    0x00007f2d347485ce             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.81%  │    ││  ││      0x00007f2d347485a8: mov    0x4(%r8),%r10d
  1.00%  │    ││  ││      0x00007f2d347485ac: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.65%  │    ││  ││      0x00007f2d347485b1: vucomiss %xmm4,%xmm4
  1.28%  │    ││  ││      0x00007f2d347485b5: jp     0x00007f2d34748724
  2.26%  │    ││  ││      0x00007f2d347485bb: jne    0x00007f2d34748724             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.26%  │    ││  ││      0x00007f2d347485c1: vaddss %xmm4,%xmm6,%xmm4
  1.79%  │    ││  ││      0x00007f2d347485c5: vmovd  %xmm4,%r10d
  1.26%  │    ││  ││      0x00007f2d347485ca: mov    %r10d,0x4(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.85%  │    ↘↘  ││      0x00007f2d347485ce: mov    0x6(%rcx),%ecx
  1.28%  │        ││      0x00007f2d347485d1: vmovd  %ecx,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.69%  │        ││      0x00007f2d347485d5: vucomiss %xmm6,%xmm6
  1.28%  │      ╭ ││      0x00007f2d347485d9: jp     0x00007f2d34748603
  1.85%  │      │╭││      0x00007f2d347485db: jne    0x00007f2d34748603             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.30%  │      ││││      0x00007f2d347485dd: mov    0x6(%r8),%r8d
  1.71%  │      ││││      0x00007f2d347485e1: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.12%  │      ││││      0x00007f2d347485e6: vucomiss %xmm4,%xmm4
  1.81%  │      ││││      0x00007f2d347485ea: jp     0x00007f2d3474871a
  1.16%  │      ││││      0x00007f2d347485f0: jne    0x00007f2d3474871a             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.65%  │      ││││      0x00007f2d347485f6: vaddss %xmm4,%xmm6,%xmm4
  1.14%  │      ││││      0x00007f2d347485fa: vmovd  %xmm4,%r10d
  2.38%  │      ││││      0x00007f2d347485ff: mov    %r10d,0x6(%rbx)
  1.20%  │      ↘↘││      0x00007f2d34748603: add    $0x8,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.01%  │        ││      0x00007f2d34748607: cmp    %edx,%r11d
         │        ╰│      0x00007f2d3474860a: jl     0x00007f2d34748510             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │         │      0x00007f2d34748610: mov    0x108(%r15),%r10               ; ImmutableOopMap{rdi=NarrowOop xmm0=Oop xmm1=Oop xmm2=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
         │         │                                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.10%  │         │      0x00007f2d34748617: test   %eax,(%r10)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │         │                                                                ;   {poll}
  0.04%  │         │      0x00007f2d3474861a: cmp    %edx,%r11d
         │         ╰      0x00007f2d3474861d: jl     0x00007f2d34748510
         ↘                0x00007f2d34748623: cmp    0x70(%rsp),%r11d
                    ╭     0x00007f2d34748628: jge    0x00007f2d347486a1
                    │     0x00007f2d3474862a: xchg   %ax,%ax                        ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                    │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
                    │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  ↗  0x00007f2d3474862c: vmovd  %xmm5,%ebp
  0.02%             │  │  0x00007f2d34748630: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%             │  │  0x00007f2d34748633: cmp    $0x4,%ebp
                    │  │  0x00007f2d34748636: jl     0x00007f2d34748972             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  │  0x00007f2d3474863c: vmovd  %xmm3,%ebp
                    │  │  0x00007f2d34748640: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             │  │  0x00007f2d34748643: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%             │  │  0x00007f2d34748646: mov    (%r9,%rcx,1),%r8d
                    │  │  0x00007f2d3474864a: vmovd  %r8d,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  │  0x00007f2d3474864f: cmp    $0x4,%ebp
                    │  │  0x00007f2d34748652: jl     0x00007f2d34748a5e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  │  0x00007f2d34748658: vucomiss %xmm6,%xmm6
  0.02%             │╭ │  0x00007f2d3474865c: jp     0x00007f2d34748696
  0.06%             ││╭│  0x00007f2d3474865e: jne    0x00007f2d34748696             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             ││││  0x00007f2d34748660: mov    0x0(%r13,%rcx,1),%r10d
                    ││││  0x00007f2d34748665: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                    ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%             ││││  0x00007f2d3474866a: vucomiss %xmm4,%xmm4
                    ││││  0x00007f2d3474866e: jp     0x00007f2d34748a4f
  0.02%             ││││  0x00007f2d34748674: jne    0x00007f2d34748a4f             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%             ││││  0x00007f2d3474867a: vaddss %xmm4,%xmm6,%xmm4              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@54 (line 153)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%             ││││  0x00007f2d3474867e: mov    %r14d,%ebp
  0.04%             ││││  0x00007f2d34748681: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                    ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    ││││  0x00007f2d34748684: cmp    $0x4,%ebp
                    ││││  0x00007f2d34748687: jl     0x00007f2d34748a69             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                    ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    ││││  0x00007f2d3474868d: vmovd  %xmm4,%r8d
  0.06%             ││││  0x00007f2d34748692: mov    %r8d,(%rax,%rcx,1)
  0.08%             │↘↘│  0x00007f2d34748696: add    $0x2,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  │  0x00007f2d3474869a: cmp    0x70(%rsp),%r11d
                    │  ╰  0x00007f2d3474869f: jl     0x00007f2d3474862c             ;*invokevirtual verticalSumBufferNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
                    │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    ↘     0x00007f2d347486a1: mov    %rdi,%rdx
  0.04%                   0x00007f2d347486a4: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@47 (line 153)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                          0x00007f2d347486a8: mov    0x18(%rsp),%rsi
                          0x00007f2d347486ad: xchg   %ax,%ax
                          0x00007f2d347486af: callq  0x00007f2d346bf900             ; ImmutableOopMap{[120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                    ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
                                                                                    ;   {optimized virtual_call}
  0.02%                   0x00007f2d347486b4: mov    0x78(%rsp),%rdx
                          0x00007f2d347486b9: movzbl 0x94(%rdx),%r8d                ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%                   0x00007f2d347486c1: mov    0x108(%r15),%r9
                          0x00007f2d347486c8: mov    0x10(%rsp),%rbx
                          0x00007f2d347486cd: add    $0x1,%rbx                      ; ImmutableOopMap{rdx=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                    ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
                          0x00007f2d347486d1: test   %eax,(%r9)                     ;   {poll}
                          0x00007f2d347486d4: test   %r8d,%r8d
                          0x00007f2d347486d7: je     0x00007f2d347482e3             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
....................................................................................................
 95.59%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.59%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (458 bytes) 
  2.66%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.59%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (161 bytes) 
  0.20%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (65 bytes) 
  0.14%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (46 bytes) 
  0.12%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (64 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (27 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (27 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (14 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (4 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.18%  <...other 9 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.56%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 
  3.11%   [kernel.kallsyms]  [unknown] 
  0.20%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%         interpreter  method entry point (kind = native)  
  0.02%         interpreter  nofast_getfield  234 nofast_getfield  
  0.02%         classes.jsa  [unknown] 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.75%                  c2
  3.11%   [kernel.kallsyms]
  0.10%         interpreter
  0.02%         classes.jsa
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53343 total address lines.
Perf output processed (skipped 6.640 seconds):
 Column 1: cycles (5104 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (452 bytes) 

                          0x00007fabf07475f5: mov    %ecx,%edx
                          0x00007fabf07475f7: add    $0xfffffffa,%edx
                          0x00007fabf07475fa: cmp    %edx,%ecx
                          0x00007fabf07475fc: mov    $0x80000000,%r10d
                          0x00007fabf0747602: cmovl  %r10d,%edx
                          0x00007fabf0747606: cmp    %edx,%r11d
         ╭                0x00007fabf0747609: jge    0x00007fabf0747723
         │                0x00007fabf074760f: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
         │                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.88%  │        ↗↗      0x00007fabf0747610: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::ix@5 (line 258)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.92%  │        ││      0x00007fabf0747613: mov    (%r9,%rcx,1),%r10d
  0.76%  │        ││      0x00007fabf0747617: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.78%  │        ││      0x00007fabf074761c: vucomiss %xmm6,%xmm6
  1.00%  │╭       ││      0x00007fabf0747620: jp     0x00007fabf074764b
  2.29%  ││╭      ││      0x00007fabf0747622: jne    0x00007fabf074764b             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.27%  │││      ││      0x00007fabf0747624: mov    0x0(%r13,%rcx,1),%r8d
  2.00%  │││      ││      0x00007fabf0747629: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.86%  │││      ││      0x00007fabf074762e: vucomiss %xmm4,%xmm4
  2.04%  │││      ││      0x00007fabf0747632: jp     0x00007fabf0747828
  1.02%  │││      ││      0x00007fabf0747638: jne    0x00007fabf0747828             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.84%  │││      ││      0x00007fabf074763e: vaddss %xmm4,%xmm6,%xmm6
  0.88%  │││      ││      0x00007fabf0747642: vmovd  %xmm6,%r10d
  2.08%  │││      ││      0x00007fabf0747647: mov    %r10d,(%rax,%rcx,1)            ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.23%  │↘↘      ││      0x00007fabf074764b: movslq %r11d,%r10
  1.96%  │        ││      0x00007fabf074764e: mov    %r13,%r8
  1.20%  │        ││      0x00007fabf0747651: add    %r10,%r8
  1.96%  │        ││      0x00007fabf0747654: mov    %r9,%rcx
  1.23%  │        ││      0x00007fabf0747657: add    %r10,%rcx
  1.82%  │        ││      0x00007fabf074765a: mov    %rax,%rbx
  1.20%  │        ││      0x00007fabf074765d: add    %r10,%rbx
  2.08%  │        ││      0x00007fabf0747660: mov    0x2(%rcx),%r10d
  1.06%  │        ││      0x00007fabf0747664: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.33%  │        ││      0x00007fabf0747669: vucomiss %xmm6,%xmm6
  1.02%  │  ╭     ││      0x00007fabf074766d: jp     0x00007fabf0747697
  2.14%  │  │╭    ││      0x00007fabf074766f: jne    0x00007fabf0747697             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.20%  │  ││    ││      0x00007fabf0747671: mov    0x2(%r8),%r10d
  1.72%  │  ││    ││      0x00007fabf0747675: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.08%  │  ││    ││      0x00007fabf074767a: vucomiss %xmm4,%xmm4
  2.12%  │  ││    ││      0x00007fabf074767e: jp     0x00007fabf074781e
  1.31%  │  ││    ││      0x00007fabf0747684: jne    0x00007fabf074781e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.80%  │  ││    ││      0x00007fabf074768a: vaddss %xmm4,%xmm6,%xmm6
  0.80%  │  ││    ││      0x00007fabf074768e: vmovd  %xmm6,%r10d
  1.90%  │  ││    ││      0x00007fabf0747693: mov    %r10d,0x2(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.14%  │  ↘↘    ││      0x00007fabf0747697: mov    0x4(%rcx),%r10d
  2.29%  │        ││      0x00007fabf074769b: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.06%  │        ││      0x00007fabf07476a0: vucomiss %xmm6,%xmm6
  2.00%  │    ╭   ││      0x00007fabf07476a4: jp     0x00007fabf07476ce
  1.04%  │    │╭  ││      0x00007fabf07476a6: jne    0x00007fabf07476ce             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.72%  │    ││  ││      0x00007fabf07476a8: mov    0x4(%r8),%r10d
  0.72%  │    ││  ││      0x00007fabf07476ac: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.06%  │    ││  ││      0x00007fabf07476b1: vucomiss %xmm4,%xmm4
  1.00%  │    ││  ││      0x00007fabf07476b5: jp     0x00007fabf0747824
  1.98%  │    ││  ││      0x00007fabf07476bb: jne    0x00007fabf0747824             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.76%  │    ││  ││      0x00007fabf07476c1: vaddss %xmm4,%xmm6,%xmm4
  2.16%  │    ││  ││      0x00007fabf07476c5: vmovd  %xmm4,%r10d
  1.29%  │    ││  ││      0x00007fabf07476ca: mov    %r10d,0x4(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.57%  │    ↘↘  ││      0x00007fabf07476ce: mov    0x6(%rcx),%ecx
  1.00%  │        ││      0x00007fabf07476d1: vmovd  %ecx,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.94%  │        ││      0x00007fabf07476d5: vucomiss %xmm6,%xmm6
  1.04%  │      ╭ ││      0x00007fabf07476d9: jp     0x00007fabf0747703
  1.92%  │      │╭││      0x00007fabf07476db: jne    0x00007fabf0747703             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.78%  │      ││││      0x00007fabf07476dd: mov    0x6(%r8),%r8d
  1.86%  │      ││││      0x00007fabf07476e1: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.35%  │      ││││      0x00007fabf07476e6: vucomiss %xmm4,%xmm4
  2.16%  │      ││││      0x00007fabf07476ea: jp     0x00007fabf074781a
  0.92%  │      ││││      0x00007fabf07476f0: jne    0x00007fabf074781a             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.78%  │      ││││      0x00007fabf07476f6: vaddss %xmm4,%xmm6,%xmm4
  1.20%  │      ││││      0x00007fabf07476fa: vmovd  %xmm4,%r10d
  2.19%  │      ││││      0x00007fabf07476ff: mov    %r10d,0x6(%rbx)
  0.98%  │      ↘↘││      0x00007fabf0747703: add    $0x8,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.08%  │        ││      0x00007fabf0747707: cmp    %edx,%r11d
         │        ╰│      0x00007fabf074770a: jl     0x00007fabf0747610             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │         │      0x00007fabf0747710: mov    0x108(%r15),%r10               ; ImmutableOopMap{rdi=NarrowOop xmm0=Oop xmm1=Oop xmm2=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
         │         │                                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │         │      0x00007fabf0747717: test   %eax,(%r10)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │         │                                                                ;   {poll}
  0.04%  │         │      0x00007fabf074771a: cmp    %edx,%r11d
         │         ╰      0x00007fabf074771d: jl     0x00007fabf0747610
  0.02%  ↘                0x00007fabf0747723: cmp    0x70(%rsp),%r11d
                    ╭     0x00007fabf0747728: jge    0x00007fabf07477a1
  0.02%             │     0x00007fabf074772a: xchg   %ax,%ax                        ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                    │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
                    │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%             │  ↗  0x00007fabf074772c: vmovd  %xmm5,%ebp
                    │  │  0x00007fabf0747730: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  │  0x00007fabf0747733: cmp    $0x4,%ebp
                    │  │  0x00007fabf0747736: jl     0x00007fabf0747a72             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             │  │  0x00007fabf074773c: vmovd  %xmm3,%ebp
                    │  │  0x00007fabf0747740: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%             │  │  0x00007fabf0747743: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             │  │  0x00007fabf0747746: mov    (%r9,%rcx,1),%r8d
                    │  │  0x00007fabf074774a: vmovd  %r8d,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%             │  │  0x00007fabf074774f: cmp    $0x4,%ebp
                    │  │  0x00007fabf0747752: jl     0x00007fabf0747b5e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             │  │  0x00007fabf0747758: vucomiss %xmm6,%xmm6
                    │╭ │  0x00007fabf074775c: jp     0x00007fabf0747796
                    ││╭│  0x00007fabf074775e: jne    0x00007fabf0747796             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%             ││││  0x00007fabf0747760: mov    0x0(%r13,%rcx,1),%r10d
  0.04%             ││││  0x00007fabf0747765: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                    ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    ││││  0x00007fabf074776a: vucomiss %xmm4,%xmm4
  0.04%             ││││  0x00007fabf074776e: jp     0x00007fabf0747b4f
  0.02%             ││││  0x00007fabf0747774: jne    0x00007fabf0747b4f             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    ││││  0x00007fabf074777a: vaddss %xmm4,%xmm6,%xmm4              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@54 (line 153)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    ││││  0x00007fabf074777e: mov    %r14d,%ebp
  0.02%             ││││  0x00007fabf0747781: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                    ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             ││││  0x00007fabf0747784: cmp    $0x4,%ebp
                    ││││  0x00007fabf0747787: jl     0x00007fabf0747b69             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                    ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             ││││  0x00007fabf074778d: vmovd  %xmm4,%r8d
  0.04%             ││││  0x00007fabf0747792: mov    %r8d,(%rax,%rcx,1)
                    │↘↘│  0x00007fabf0747796: add    $0x2,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             │  │  0x00007fabf074779a: cmp    0x70(%rsp),%r11d
                    │  ╰  0x00007fabf074779f: jl     0x00007fabf074772c             ;*invokevirtual verticalSumBufferNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
                    │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    ↘     0x00007fabf07477a1: mov    %rdi,%rdx
                          0x00007fabf07477a4: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@47 (line 153)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                          0x00007fabf07477a8: mov    0x18(%rsp),%rsi
  0.02%                   0x00007fabf07477ad: xchg   %ax,%ax
                          0x00007fabf07477af: callq  0x00007fabf06bf900             ; ImmutableOopMap{[120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                    ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
                                                                                    ;   {optimized virtual_call}
  0.02%                   0x00007fabf07477b4: mov    0x78(%rsp),%rdx
                          0x00007fabf07477b9: movzbl 0x94(%rdx),%r8d                ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                          0x00007fabf07477c1: mov    0x108(%r15),%r9
  0.02%                   0x00007fabf07477c8: mov    0x10(%rsp),%rbx
                          0x00007fabf07477cd: add    $0x1,%rbx                      ; ImmutableOopMap{rdx=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                    ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
  0.02%                   0x00007fabf07477d1: test   %eax,(%r9)                     ;   {poll}
  0.02%                   0x00007fabf07477d4: test   %r8d,%r8d
                          0x00007fabf07477d7: je     0x00007fabf07473e3             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
                          0x00007fabf07477dd: jmp    0x00007fabf074785a
                          0x00007fabf07477df: add    $0x4,%ebx
                          0x00007fabf07477e2: add    $0x2,%ebx
                          0x00007fabf07477e5: jmp    0x00007fabf07477ea
                          0x00007fabf07477e7: add    $0x4,%ebx                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                          0x00007fabf07477ea: vmovss %xmm10,0x70(%rsp)
....................................................................................................
 95.43%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.43%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (452 bytes) 
  2.72%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.39%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (223 bytes) 
  0.18%   [kernel.kallsyms]  [unknown] (44 bytes) 
  0.10%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (60 bytes) 
  0.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (41 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (9 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (28 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (22 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.53%  <...other 27 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.12%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 
  3.43%   [kernel.kallsyms]  [unknown] 
  0.10%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.04%         interpreter  invoke return entry points  
  0.02%        libverify.so  next_utf2unicode 
  0.02%         interpreter  aload_1  43 aload_1  
  0.02%         interpreter  aaload  50 aaload  
  0.02%         interpreter  invokespecial  183 invokespecial  
  0.02%           libjvm.so  _ZN13InstanceKlass17find_method_indexEPK5ArrayIP6MethodEPK6SymbolS8_N5Klass18OverpassLookupModeENS9_16StaticLookupModeENS9_17PrivateLookupModeE.constprop.305 
  0.02%       libz.so.1.2.8  inflate 
  0.02%         interpreter  nofast_putfield  235 nofast_putfield  
  0.02%         interpreter  nofast_aload_0  236 nofast_aload_0  
  0.02%  libpthread-2.23.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.02%         classes.jsa  [unknown] 
  0.02%         interpreter  aconst_null  1 aconst_null  
  0.02%           libjvm.so  _ZN7Monitor5IWaitEP6Threadl 
  0.02%           libjvm.so  _ZN7Monitor6unlockEv 
  0.02%           libjvm.so  _ZN18PerfClassTraceTime10initializeEv 
  0.02%           libjvm.so  _ZN7Monitor5ILockEP6Thread 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.22%                  c2
  3.43%   [kernel.kallsyms]
  0.16%         interpreter
  0.10%           libjvm.so
  0.02%         classes.jsa
  0.02%  libpthread-2.23.so
  0.02%        libverify.so
  0.02%       libz.so.1.2.8
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53300 total address lines.
Perf output processed (skipped 6.623 seconds):
 Column 1: cycles (5044 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (567 bytes) 

                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007fd5587491fd: vucomiss %xmm4,%xmm4
                           0x00007fd558749201: jp     0x00007fd5587494a8
                           0x00007fd558749207: jne    0x00007fd5587494a8             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - java.lang.Float::isNaN@3 (line 467)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007fd55874920d: vaddss %xmm4,%xmm6,%xmm4              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@54 (line 153)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%                    0x00007fd558749211: mov    %r14d,%ebp
                           0x00007fd558749214: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - java.nio.Buffer::checkIndex@10 (line 687)
                                                                                     ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007fd558749217: cmp    $0x4,%ebp
                           0x00007fd55874921a: jl     0x00007fd558749776             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - java.nio.Buffer::checkIndex@11 (line 687)
                                                                                     ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%                    0x00007fd558749220: vmovd  %xmm4,%r10d
                           0x00007fd558749225: mov    %r10d,(%rax,%r8,1)
                           0x00007fd558749229: add    $0x2,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007fd55874922d: cmp    %esi,%r11d
         ╭                 0x00007fd558749230: jge    0x00007fd55874923c             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@9 (line 149)
         │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │                 0x00007fd558749232: vmovd  %xmm3,%r8d
         │                 0x00007fd558749237: jmpq   0x00007fd5587491bb
  0.02%  ↘                 0x00007fd55874923c: mov    $0xfffffffc,%r8d
                           0x00007fd558749242: sub    %ebx,%r8d
                           0x00007fd558749245: mov    $0xfffffffc,%ebx
  0.02%                    0x00007fd55874924a: sub    %ecx,%ebx
                           0x00007fd55874924c: mov    $0xfffffffc,%ecx
                           0x00007fd558749251: sub    %edx,%ecx
                           0x00007fd558749253: inc    %r8d
                           0x00007fd558749256: inc    %ecx
  0.02%                    0x00007fd558749258: inc    %ebx
  0.02%                    0x00007fd55874925a: cmp    %ebx,%r8d
                           0x00007fd55874925d: cmovg  %ebx,%r8d
  0.02%                    0x00007fd558749261: cmp    %r8d,%ecx
  0.02%                    0x00007fd558749264: cmovg  %r8d,%ecx
                           0x00007fd558749268: cmp    0x70(%rsp),%ecx
                           0x00007fd55874926c: mov    0x70(%rsp),%r10d
                           0x00007fd558749271: cmovg  %r10d,%ecx
                           0x00007fd558749275: mov    %ecx,%edx
  0.04%                    0x00007fd558749277: add    $0xfffffffa,%edx
                           0x00007fd55874927a: cmp    %edx,%ecx
                           0x00007fd55874927c: mov    $0x80000000,%r10d
                           0x00007fd558749282: cmovl  %r10d,%edx
                           0x00007fd558749286: cmp    %edx,%r11d
          ╭                0x00007fd558749289: jge    0x00007fd5587493a3
          │                0x00007fd55874928f: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
          │                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.09%   │        ↗↗      0x00007fd558749290: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - java.nio.DirectByteBuffer::ix@5 (line 258)
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.92%   │        ││      0x00007fd558749293: mov    (%r9,%rcx,1),%r10d
  1.01%   │        ││      0x00007fd558749297: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.72%   │        ││      0x00007fd55874929c: vucomiss %xmm6,%xmm6
  1.15%   │╭       ││      0x00007fd5587492a0: jp     0x00007fd5587492cb
  2.12%   ││╭      ││      0x00007fd5587492a2: jne    0x00007fd5587492cb             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.03%   │││      ││      0x00007fd5587492a4: mov    0x0(%r13,%rcx,1),%r8d
  1.70%   │││      ││      0x00007fd5587492a9: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.27%   │││      ││      0x00007fd5587492ae: vucomiss %xmm4,%xmm4
  2.14%   │││      ││      0x00007fd5587492b2: jp     0x00007fd5587494a8
  1.03%   │││      ││      0x00007fd5587492b8: jne    0x00007fd5587494a8             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.84%   │││      ││      0x00007fd5587492be: vaddss %xmm4,%xmm6,%xmm6
  1.05%   │││      ││      0x00007fd5587492c2: vmovd  %xmm6,%r10d
  1.94%   │││      ││      0x00007fd5587492c7: mov    %r10d,(%rax,%rcx,1)            ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.41%   │↘↘      ││      0x00007fd5587492cb: movslq %r11d,%r10
  2.06%   │        ││      0x00007fd5587492ce: mov    %r13,%r8
  1.03%   │        ││      0x00007fd5587492d1: add    %r10,%r8
  2.06%   │        ││      0x00007fd5587492d4: mov    %r9,%rcx
  1.29%   │        ││      0x00007fd5587492d7: add    %r10,%rcx
  2.16%   │        ││      0x00007fd5587492da: mov    %rax,%rbx
  0.91%   │        ││      0x00007fd5587492dd: add    %r10,%rbx
  2.36%   │        ││      0x00007fd5587492e0: mov    0x2(%rcx),%r10d
  1.17%   │        ││      0x00007fd5587492e4: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.98%   │        ││      0x00007fd5587492e9: vucomiss %xmm6,%xmm6
  1.15%   │  ╭     ││      0x00007fd5587492ed: jp     0x00007fd558749317
  2.24%   │  │╭    ││      0x00007fd5587492ef: jne    0x00007fd558749317             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.03%   │  ││    ││      0x00007fd5587492f1: mov    0x2(%r8),%r10d
  1.63%   │  ││    ││      0x00007fd5587492f5: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.13%   │  ││    ││      0x00007fd5587492fa: vucomiss %xmm4,%xmm4
  2.24%   │  ││    ││      0x00007fd5587492fe: jp     0x00007fd55874949e
  1.31%   │  ││    ││      0x00007fd558749304: jne    0x00007fd55874949e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.92%   │  ││    ││      0x00007fd55874930a: vaddss %xmm4,%xmm6,%xmm6
  1.25%   │  ││    ││      0x00007fd55874930e: vmovd  %xmm6,%r10d
  1.92%   │  ││    ││      0x00007fd558749313: mov    %r10d,0x2(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.57%   │  ↘↘    ││      0x00007fd558749317: mov    0x4(%rcx),%r10d
  1.92%   │        ││      0x00007fd55874931b: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.81%   │        ││      0x00007fd558749320: vucomiss %xmm6,%xmm6
  2.46%   │    ╭   ││      0x00007fd558749324: jp     0x00007fd55874934e
  1.25%   │    │╭  ││      0x00007fd558749326: jne    0x00007fd55874934e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.42%   │    ││  ││      0x00007fd558749328: mov    0x4(%r8),%r10d
  0.95%   │    ││  ││      0x00007fd55874932c: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.59%   │    ││  ││      0x00007fd558749331: vucomiss %xmm4,%xmm4
  1.21%   │    ││  ││      0x00007fd558749335: jp     0x00007fd5587494a4
  1.55%   │    ││  ││      0x00007fd55874933b: jne    0x00007fd5587494a4             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.89%   │    ││  ││      0x00007fd558749341: vaddss %xmm4,%xmm6,%xmm4
  1.90%   │    ││  ││      0x00007fd558749345: vmovd  %xmm4,%r10d
  1.15%   │    ││  ││      0x00007fd55874934a: mov    %r10d,0x4(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.20%   │    ↘↘  ││      0x00007fd55874934e: mov    0x6(%rcx),%ecx
  1.07%   │        ││      0x00007fd558749351: vmovd  %ecx,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.18%   │        ││      0x00007fd558749355: vucomiss %xmm6,%xmm6
  0.83%   │      ╭ ││      0x00007fd558749359: jp     0x00007fd558749383
  2.10%   │      │╭││      0x00007fd55874935b: jne    0x00007fd558749383             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.93%   │      ││││      0x00007fd55874935d: mov    0x6(%r8),%r8d
  2.00%   │      ││││      0x00007fd558749361: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.01%   │      ││││      0x00007fd558749366: vucomiss %xmm4,%xmm4
  2.12%   │      ││││      0x00007fd55874936a: jp     0x00007fd55874949a
  1.05%   │      ││││      0x00007fd558749370: jne    0x00007fd55874949a             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.00%   │      ││││      0x00007fd558749376: vaddss %xmm4,%xmm6,%xmm4
  0.97%   │      ││││      0x00007fd55874937a: vmovd  %xmm4,%r10d
  1.67%   │      ││││      0x00007fd55874937f: mov    %r10d,0x6(%rbx)
  1.21%   │      ↘↘││      0x00007fd558749383: add    $0x8,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.78%   │        ││      0x00007fd558749387: cmp    %edx,%r11d
          │        ╰│      0x00007fd55874938a: jl     0x00007fd558749290             ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │         │      0x00007fd558749390: mov    0x108(%r15),%r10               ; ImmutableOopMap{rdi=NarrowOop xmm0=Oop xmm1=Oop xmm2=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
          │         │                                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%   │         │      0x00007fd558749397: test   %eax,(%r10)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │         │                                                                ;   {poll}
  0.06%   │         │      0x00007fd55874939a: cmp    %edx,%r11d
          │         ╰      0x00007fd55874939d: jl     0x00007fd558749290
          ↘                0x00007fd5587493a3: cmp    0x70(%rsp),%r11d
                     ╭     0x00007fd5587493a8: jge    0x00007fd558749421
                     │     0x00007fd5587493aa: xchg   %ax,%ax                        ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                     │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
                     │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%              │  ↗  0x00007fd5587493ac: vmovd  %xmm5,%ebp
  0.06%              │  │  0x00007fd5587493b0: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     │  │  0x00007fd5587493b3: cmp    $0x4,%ebp
                     │  │  0x00007fd5587493b6: jl     0x00007fd5587496f2             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%              │  │  0x00007fd5587493bc: vmovd  %xmm3,%ebp
                     │  │  0x00007fd5587493c0: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%              │  │  0x00007fd5587493c3: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     │  │  0x00007fd5587493c6: mov    (%r9,%rcx,1),%r8d
                     │  │  0x00007fd5587493ca: vmovd  %r8d,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%              │  │  0x00007fd5587493cf: cmp    $0x4,%ebp
                     │  │  0x00007fd5587493d2: jl     0x00007fd5587497de             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     │  │  0x00007fd5587493d8: vucomiss %xmm6,%xmm6
                     │╭ │  0x00007fd5587493dc: jp     0x00007fd558749416
  0.06%              ││╭│  0x00007fd5587493de: jne    0x00007fd558749416             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%              ││││  0x00007fd5587493e0: mov    0x0(%r13,%rcx,1),%r10d
  0.06%              ││││  0x00007fd5587493e5: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                     ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%              ││││  0x00007fd5587493ea: vucomiss %xmm4,%xmm4
                     ││││  0x00007fd5587493ee: jp     0x00007fd5587497cf
                     ││││  0x00007fd5587493f4: jne    0x00007fd5587497cf             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%              ││││  0x00007fd5587493fa: vaddss %xmm4,%xmm6,%xmm4              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@54 (line 153)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     ││││  0x00007fd5587493fe: mov    %r14d,%ebp
  0.02%              ││││  0x00007fd558749401: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                     ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     ││││  0x00007fd558749404: cmp    $0x4,%ebp
                     ││││  0x00007fd558749407: jl     0x00007fd5587497e9             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                     ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%              ││││  0x00007fd55874940d: vmovd  %xmm4,%r8d
                     ││││  0x00007fd558749412: mov    %r8d,(%rax,%rcx,1)
  0.06%              │↘↘│  0x00007fd558749416: add    $0x2,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%              │  │  0x00007fd55874941a: cmp    0x70(%rsp),%r11d
                     │  ╰  0x00007fd55874941f: jl     0x00007fd5587493ac             ;*invokevirtual verticalSumBufferNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
                     │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     ↘     0x00007fd558749421: mov    %rdi,%rdx
                           0x00007fd558749424: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@47 (line 153)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%                    0x00007fd558749428: mov    0x18(%rsp),%rsi
                           0x00007fd55874942d: xchg   %ax,%ax
                           0x00007fd55874942f: callq  0x00007fd5586bf900             ; ImmutableOopMap{[120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                     ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
                                                                                     ;   {optimized virtual_call}
  0.04%                    0x00007fd558749434: mov    0x78(%rsp),%rdx
                           0x00007fd558749439: movzbl 0x94(%rdx),%r8d                ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007fd558749441: mov    0x108(%r15),%r9
  0.04%                    0x00007fd558749448: mov    0x10(%rsp),%rbx
                           0x00007fd55874944d: add    $0x1,%rbx                      ; ImmutableOopMap{rdx=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                     ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
                           0x00007fd558749451: test   %eax,(%r9)                     ;   {poll}
                           0x00007fd558749454: test   %r8d,%r8d
                           0x00007fd558749457: je     0x00007fd558749063             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
                           0x00007fd55874945d: jmp    0x00007fd5587494da
                           0x00007fd55874945f: add    $0x4,%ebx
                           0x00007fd558749462: add    $0x2,%ebx
....................................................................................................
 97.01%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.01%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (567 bytes) 
  1.76%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.32%   [kernel.kallsyms]  [unknown] (27 bytes) 
  0.24%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (117 bytes) 
  0.08%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (46 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (34 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (45 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (16 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         classes.jsa  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  ireturn  172 ireturn  (0 bytes) 
  0.12%  <...other 6 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.44%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 
  2.32%   [kernel.kallsyms]  [unknown] 
  0.08%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.02%         interpreter  return  177 return  
  0.02%           libjvm.so  _ZN18InterpreterRuntime14resolve_invokeEP10JavaThreadN9Bytecodes4CodeE 
  0.02%         interpreter  ireturn  172 ireturn  
  0.02%         interpreter  arraylength  190 arraylength  
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%         classes.jsa  [unknown] 
  0.02%         interpreter  method entry point (kind = zerolocals)  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.52%                  c2
  2.32%   [kernel.kallsyms]
  0.10%         interpreter
  0.02%           libjvm.so
  0.02%         classes.jsa
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckPessimistic
# Parameters: (probabilityOfNaN = 0.001, size = 1024)

# Run progress: 37.04% complete, ETA 00:10:13
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 614.411 ops/ms
# Warmup Iteration   2: 638.704 ops/ms
# Warmup Iteration   3: 701.766 ops/ms
# Warmup Iteration   4: 703.248 ops/ms
# Warmup Iteration   5: 704.732 ops/ms
Iteration   1: 697.268 ops/ms
Iteration   2: 695.859 ops/ms
Iteration   3: 700.636 ops/ms
Iteration   4: 696.463 ops/ms
Iteration   5: 700.373 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 38.27% complete, ETA 00:10:01
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 615.225 ops/ms
# Warmup Iteration   2: 638.008 ops/ms
# Warmup Iteration   3: 702.555 ops/ms
# Warmup Iteration   4: 710.729 ops/ms
# Warmup Iteration   5: 702.284 ops/ms
Iteration   1: 708.114 ops/ms
Iteration   2: 700.866 ops/ms
Iteration   3: 700.092 ops/ms
Iteration   4: 698.781 ops/ms
Iteration   5: 703.868 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 39.51% complete, ETA 00:09:49
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 619.012 ops/ms
# Warmup Iteration   2: 636.212 ops/ms
# Warmup Iteration   3: 698.796 ops/ms
# Warmup Iteration   4: 697.597 ops/ms
# Warmup Iteration   5: 699.691 ops/ms
Iteration   1: 697.996 ops/ms
Iteration   2: 701.082 ops/ms
Iteration   3: 700.654 ops/ms
Iteration   4: 698.363 ops/ms
Iteration   5: 694.058 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckPessimistic":
  699.631 ±(99.9%) 3.640 ops/ms [Average]
  (min, avg, max) = (694.058, 699.631, 708.114), stdev = 3.405
  CI (99.9%): [695.992, 703.271] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckPessimistic:·asm":
PrintAssembly processed: 53253 total address lines.
Perf output processed (skipped 6.624 seconds):
 Column 1: cycles (5022 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 144 (483 bytes) 

                          0x00007f22007439d1: sub    %edx,%ecx
                          0x00007f22007439d3: inc    %r8d
                          0x00007f22007439d6: inc    %ecx
                          0x00007f22007439d8: inc    %ebx
                          0x00007f22007439da: cmp    %ebx,%r8d
                          0x00007f22007439dd: cmovg  %ebx,%r8d
                          0x00007f22007439e1: cmp    %r8d,%ecx
                          0x00007f22007439e4: cmovg  %r8d,%ecx
                          0x00007f22007439e8: cmp    0x70(%rsp),%ecx
                          0x00007f22007439ec: mov    0x70(%rsp),%r10d
  0.02%                   0x00007f22007439f1: cmovg  %r10d,%ecx
                          0x00007f22007439f5: mov    %ecx,%edx
  0.02%                   0x00007f22007439f7: add    $0xfffffffa,%edx
                          0x00007f22007439fa: cmp    %edx,%ecx
  0.02%                   0x00007f22007439fc: mov    $0x80000000,%r10d
                          0x00007f2200743a02: cmovl  %r10d,%edx
                          0x00007f2200743a06: cmp    %edx,%r11d
         ╭                0x00007f2200743a09: jge    0x00007f2200743b23
         │                0x00007f2200743a0f: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
         │                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.90%  │        ↗↗      0x00007f2200743a10: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::ix@5 (line 258)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.23%  │        ││      0x00007f2200743a13: mov    (%r9,%rcx,1),%r10d
  1.06%  │        ││      0x00007f2200743a17: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.87%  │        ││      0x00007f2200743a1c: vucomiss %xmm6,%xmm6
  1.17%  │╭       ││      0x00007f2200743a20: jp     0x00007f2200743a4b
  2.33%  ││╭      ││      0x00007f2200743a22: jne    0x00007f2200743a4b             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.06%  │││      ││      0x00007f2200743a24: mov    0x0(%r13,%rcx,1),%r8d
  2.35%  │││      ││      0x00007f2200743a29: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.02%  │││      ││      0x00007f2200743a2e: vucomiss %xmm4,%xmm4
  2.11%  │││      ││      0x00007f2200743a32: jp     0x00007f2200743c28
  1.15%  │││      ││      0x00007f2200743a38: jne    0x00007f2200743c28             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.17%  │││      ││      0x00007f2200743a3e: vaddss %xmm4,%xmm6,%xmm6
  1.06%  │││      ││      0x00007f2200743a42: vmovd  %xmm6,%r10d
  2.27%  │││      ││      0x00007f2200743a47: mov    %r10d,(%rax,%rcx,1)            ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.15%  │↘↘      ││      0x00007f2200743a4b: movslq %r11d,%r10
  2.13%  │        ││      0x00007f2200743a4e: mov    %r13,%r8
  0.90%  │        ││      0x00007f2200743a51: add    %r10,%r8
  1.71%  │        ││      0x00007f2200743a54: mov    %r9,%rcx
  1.12%  │        ││      0x00007f2200743a57: add    %r10,%rcx
  1.43%  │        ││      0x00007f2200743a5a: mov    %rax,%rbx
  0.92%  │        ││      0x00007f2200743a5d: add    %r10,%rbx
  2.15%  │        ││      0x00007f2200743a60: mov    0x2(%rcx),%r10d
  0.94%  │        ││      0x00007f2200743a64: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.21%  │        ││      0x00007f2200743a69: vucomiss %xmm6,%xmm6
  0.98%  │  ╭     ││      0x00007f2200743a6d: jp     0x00007f2200743a97
  2.19%  │  │╭    ││      0x00007f2200743a6f: jne    0x00007f2200743a97             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.00%  │  ││    ││      0x00007f2200743a71: mov    0x2(%r8),%r10d
  1.83%  │  ││    ││      0x00007f2200743a75: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.10%  │  ││    ││      0x00007f2200743a7a: vucomiss %xmm4,%xmm4
  1.91%  │  ││    ││      0x00007f2200743a7e: jp     0x00007f2200743c1e
  1.23%  │  ││    ││      0x00007f2200743a84: jne    0x00007f2200743c1e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.87%  │  ││    ││      0x00007f2200743a8a: vaddss %xmm4,%xmm6,%xmm6
  1.00%  │  ││    ││      0x00007f2200743a8e: vmovd  %xmm6,%r10d
  2.05%  │  ││    ││      0x00007f2200743a93: mov    %r10d,0x2(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.08%  │  ↘↘    ││      0x00007f2200743a97: mov    0x4(%rcx),%r10d
  1.91%  │        ││      0x00007f2200743a9b: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.92%  │        ││      0x00007f2200743aa0: vucomiss %xmm6,%xmm6
  1.69%  │    ╭   ││      0x00007f2200743aa4: jp     0x00007f2200743ace
  1.33%  │    │╭  ││      0x00007f2200743aa6: jne    0x00007f2200743ace             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.15%  │    ││  ││      0x00007f2200743aa8: mov    0x4(%r8),%r10d
  0.84%  │    ││  ││      0x00007f2200743aac: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.01%  │    ││  ││      0x00007f2200743ab1: vucomiss %xmm4,%xmm4
  1.27%  │    ││  ││      0x00007f2200743ab5: jp     0x00007f2200743c24
  1.45%  │    ││  ││      0x00007f2200743abb: jne    0x00007f2200743c24             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.04%  │    ││  ││      0x00007f2200743ac1: vaddss %xmm4,%xmm6,%xmm4
  2.35%  │    ││  ││      0x00007f2200743ac5: vmovd  %xmm4,%r10d
  1.21%  │    ││  ││      0x00007f2200743aca: mov    %r10d,0x4(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.63%  │    ↘↘  ││      0x00007f2200743ace: mov    0x6(%rcx),%ecx
  1.00%  │        ││      0x00007f2200743ad1: vmovd  %ecx,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.97%  │        ││      0x00007f2200743ad5: vucomiss %xmm6,%xmm6
  1.08%  │      ╭ ││      0x00007f2200743ad9: jp     0x00007f2200743b03
  2.31%  │      │╭││      0x00007f2200743adb: jne    0x00007f2200743b03             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.84%  │      ││││      0x00007f2200743add: mov    0x6(%r8),%r8d
  2.15%  │      ││││      0x00007f2200743ae1: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.25%  │      ││││      0x00007f2200743ae6: vucomiss %xmm4,%xmm4
  1.83%  │      ││││      0x00007f2200743aea: jp     0x00007f2200743c1a
  1.14%  │      ││││      0x00007f2200743af0: jne    0x00007f2200743c1a             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.87%  │      ││││      0x00007f2200743af6: vaddss %xmm4,%xmm6,%xmm4
  0.96%  │      ││││      0x00007f2200743afa: vmovd  %xmm4,%r10d
  1.99%  │      ││││      0x00007f2200743aff: mov    %r10d,0x6(%rbx)
  0.92%  │      ↘↘││      0x00007f2200743b03: add    $0x8,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.07%  │        ││      0x00007f2200743b07: cmp    %edx,%r11d
         │        ╰│      0x00007f2200743b0a: jl     0x00007f2200743a10             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │         │      0x00007f2200743b10: mov    0x108(%r15),%r10               ; ImmutableOopMap{rdi=NarrowOop xmm0=Oop xmm1=Oop xmm2=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
         │         │                                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │         │      0x00007f2200743b17: test   %eax,(%r10)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │         │                                                                ;   {poll}
  0.02%  │         │      0x00007f2200743b1a: cmp    %edx,%r11d
         │         ╰      0x00007f2200743b1d: jl     0x00007f2200743a10
  0.02%  ↘                0x00007f2200743b23: cmp    0x70(%rsp),%r11d
                    ╭     0x00007f2200743b28: jge    0x00007f2200743ba1
  0.02%             │     0x00007f2200743b2a: xchg   %ax,%ax                        ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                    │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
                    │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  ↗  0x00007f2200743b2c: vmovd  %xmm5,%ebp
                    │  │  0x00007f2200743b30: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%             │  │  0x00007f2200743b33: cmp    $0x4,%ebp
                    │  │  0x00007f2200743b36: jl     0x00007f2200743e72             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  │  0x00007f2200743b3c: vmovd  %xmm3,%ebp
  0.04%             │  │  0x00007f2200743b40: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%             │  │  0x00007f2200743b43: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             │  │  0x00007f2200743b46: mov    (%r9,%rcx,1),%r8d
  0.02%             │  │  0x00007f2200743b4a: vmovd  %r8d,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%             │  │  0x00007f2200743b4f: cmp    $0x4,%ebp
                    │  │  0x00007f2200743b52: jl     0x00007f2200743f5e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  │  0x00007f2200743b58: vucomiss %xmm6,%xmm6
  0.02%             │╭ │  0x00007f2200743b5c: jp     0x00007f2200743b96
  0.02%             ││╭│  0x00007f2200743b5e: jne    0x00007f2200743b96             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    ││││  0x00007f2200743b60: mov    0x0(%r13,%rcx,1),%r10d
                    ││││  0x00007f2200743b65: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                    ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    ││││  0x00007f2200743b6a: vucomiss %xmm4,%xmm4
                    ││││  0x00007f2200743b6e: jp     0x00007f2200743f4f
                    ││││  0x00007f2200743b74: jne    0x00007f2200743f4f             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%             ││││  0x00007f2200743b7a: vaddss %xmm4,%xmm6,%xmm4              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@54 (line 153)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    ││││  0x00007f2200743b7e: mov    %r14d,%ebp
  0.04%             ││││  0x00007f2200743b81: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                    ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%             ││││  0x00007f2200743b84: cmp    $0x4,%ebp
                    ││││  0x00007f2200743b87: jl     0x00007f2200743f69             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                    ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%             ││││  0x00007f2200743b8d: vmovd  %xmm4,%r8d
                    ││││  0x00007f2200743b92: mov    %r8d,(%rax,%rcx,1)
                    │↘↘│  0x00007f2200743b96: add    $0x2,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%             │  │  0x00007f2200743b9a: cmp    0x70(%rsp),%r11d
                    │  ╰  0x00007f2200743b9f: jl     0x00007f2200743b2c             ;*invokevirtual verticalSumBufferNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
                    │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    ↘     0x00007f2200743ba1: mov    %rdi,%rdx
                          0x00007f2200743ba4: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@47 (line 153)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%                   0x00007f2200743ba8: mov    0x18(%rsp),%rsi
  0.02%                   0x00007f2200743bad: xchg   %ax,%ax
                          0x00007f2200743baf: callq  0x00007f22006bf900             ; ImmutableOopMap{[120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                    ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
                                                                                    ;   {optimized virtual_call}
                          0x00007f2200743bb4: mov    0x78(%rsp),%rdx
                          0x00007f2200743bb9: movzbl 0x94(%rdx),%r8d                ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%                   0x00007f2200743bc1: mov    0x108(%r15),%r9
                          0x00007f2200743bc8: mov    0x10(%rsp),%rbx
                          0x00007f2200743bcd: add    $0x1,%rbx                      ; ImmutableOopMap{rdx=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                    ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
  0.02%                   0x00007f2200743bd1: test   %eax,(%r9)                     ;   {poll}
  0.02%                   0x00007f2200743bd4: test   %r8d,%r8d
                          0x00007f2200743bd7: je     0x00007f22007437e3             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
                          0x00007f2200743bdd: jmp    0x00007f2200743c5a
                          0x00007f2200743bdf: add    $0x4,%ebx
                          0x00007f2200743be2: add    $0x2,%ebx
                          0x00007f2200743be5: jmp    0x00007f2200743bea
                          0x00007f2200743be7: add    $0x4,%ebx                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                          0x00007f2200743bea: vmovss %xmm10,0x70(%rsp)
....................................................................................................
 96.52%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.52%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 144 (483 bytes) 
  1.77%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.34%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 144 (140 bytes) 
  0.16%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.16%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 144 (97 bytes) 
  0.08%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 (27 bytes) 
  0.08%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 144 (45 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (6 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (4 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 144 (10 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.42%  <...other 21 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.15%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 144 
  2.51%   [kernel.kallsyms]  [unknown] 
  0.10%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 141 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  invoke return entry points  
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%           libjvm.so  _ZN10OopStorage8allocateEv 
  0.02%         interpreter  baload  51 baload  
  0.02%         interpreter  iconst_1  4 iconst_1  
  0.02%  libpthread-2.23.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.02%           libjvm.so  _ZNK8G1Policy20predict_yg_surv_rateEiP13SurvRateGroup 
  0.02%           libjvm.so  _ZN16SystemDictionary23check_signature_loadersEP6Symbol6HandleS2_bP6Thread 
  0.02%  libpthread-2.23.so  __pthread_enable_asynccancel 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.25%                  c2
  2.51%   [kernel.kallsyms]
  0.12%         interpreter
  0.06%           libjvm.so
  0.04%  libpthread-2.23.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53322 total address lines.
Perf output processed (skipped 6.621 seconds):
 Column 1: cycles (5085 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (484 bytes) 

                          0x00007fe6b8747645: mov    $0xfffffffc,%ebx
                          0x00007fe6b874764a: sub    %ecx,%ebx
                          0x00007fe6b874764c: mov    $0xfffffffc,%ecx
                          0x00007fe6b8747651: sub    %edx,%ecx
                          0x00007fe6b8747653: inc    %r8d
                          0x00007fe6b8747656: inc    %ecx
                          0x00007fe6b8747658: inc    %ebx
                          0x00007fe6b874765a: cmp    %ebx,%r8d
                          0x00007fe6b874765d: cmovg  %ebx,%r8d
                          0x00007fe6b8747661: cmp    %r8d,%ecx
  0.02%                   0x00007fe6b8747664: cmovg  %r8d,%ecx
                          0x00007fe6b8747668: cmp    0x70(%rsp),%ecx
                          0x00007fe6b874766c: mov    0x70(%rsp),%r10d
                          0x00007fe6b8747671: cmovg  %r10d,%ecx
  0.02%                   0x00007fe6b8747675: mov    %ecx,%edx
                          0x00007fe6b8747677: add    $0xfffffffa,%edx
                          0x00007fe6b874767a: cmp    %edx,%ecx
                          0x00007fe6b874767c: mov    $0x80000000,%r10d
                          0x00007fe6b8747682: cmovl  %r10d,%edx
                          0x00007fe6b8747686: cmp    %edx,%r11d
         ╭                0x00007fe6b8747689: jge    0x00007fe6b87477a3
         │                0x00007fe6b874768f: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
         │                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.87%  │        ↗↗      0x00007fe6b8747690: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::ix@5 (line 258)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.79%  │        ││      0x00007fe6b8747693: mov    (%r9,%rcx,1),%r10d
  0.94%  │        ││      0x00007fe6b8747697: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.89%  │        ││      0x00007fe6b874769c: vucomiss %xmm6,%xmm6
  0.88%  │╭       ││      0x00007fe6b87476a0: jp     0x00007fe6b87476cb
  2.42%  ││╭      ││      0x00007fe6b87476a2: jne    0x00007fe6b87476cb             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.10%  │││      ││      0x00007fe6b87476a4: mov    0x0(%r13,%rcx,1),%r8d
  2.36%  │││      ││      0x00007fe6b87476a9: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.79%  │││      ││      0x00007fe6b87476ae: vucomiss %xmm4,%xmm4
  2.36%  │││      ││      0x00007fe6b87476b2: jp     0x00007fe6b87478a8
  1.16%  │││      ││      0x00007fe6b87476b8: jne    0x00007fe6b87478a8             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.97%  │││      ││      0x00007fe6b87476be: vaddss %xmm4,%xmm6,%xmm6
  0.85%  │││      ││      0x00007fe6b87476c2: vmovd  %xmm6,%r10d
  1.99%  │││      ││      0x00007fe6b87476c7: mov    %r10d,(%rax,%rcx,1)            ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.06%  │↘↘      ││      0x00007fe6b87476cb: movslq %r11d,%r10
  1.59%  │        ││      0x00007fe6b87476ce: mov    %r13,%r8
  1.08%  │        ││      0x00007fe6b87476d1: add    %r10,%r8
  1.99%  │        ││      0x00007fe6b87476d4: mov    %r9,%rcx
  1.02%  │        ││      0x00007fe6b87476d7: add    %r10,%rcx
  1.73%  │        ││      0x00007fe6b87476da: mov    %rax,%rbx
  0.88%  │        ││      0x00007fe6b87476dd: add    %r10,%rbx
  2.03%  │        ││      0x00007fe6b87476e0: mov    0x2(%rcx),%r10d
  1.12%  │        ││      0x00007fe6b87476e4: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.20%  │        ││      0x00007fe6b87476e9: vucomiss %xmm6,%xmm6
  1.16%  │  ╭     ││      0x00007fe6b87476ed: jp     0x00007fe6b8747717
  2.06%  │  │╭    ││      0x00007fe6b87476ef: jne    0x00007fe6b8747717             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.87%  │  ││    ││      0x00007fe6b87476f1: mov    0x2(%r8),%r10d
  1.81%  │  ││    ││      0x00007fe6b87476f5: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.14%  │  ││    ││      0x00007fe6b87476fa: vucomiss %xmm4,%xmm4
  1.79%  │  ││    ││      0x00007fe6b87476fe: jp     0x00007fe6b874789e
  1.32%  │  ││    ││      0x00007fe6b8747704: jne    0x00007fe6b874789e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.34%  │  ││    ││      0x00007fe6b874770a: vaddss %xmm4,%xmm6,%xmm6
  1.02%  │  ││    ││      0x00007fe6b874770e: vmovd  %xmm6,%r10d
  1.99%  │  ││    ││      0x00007fe6b8747713: mov    %r10d,0x2(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.22%  │  ↘↘    ││      0x00007fe6b8747717: mov    0x4(%rcx),%r10d
  1.77%  │        ││      0x00007fe6b874771b: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.81%  │        ││      0x00007fe6b8747720: vucomiss %xmm6,%xmm6
  2.10%  │    ╭   ││      0x00007fe6b8747724: jp     0x00007fe6b874774e
  1.30%  │    │╭  ││      0x00007fe6b8747726: jne    0x00007fe6b874774e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.93%  │    ││  ││      0x00007fe6b8747728: mov    0x4(%r8),%r10d
  0.92%  │    ││  ││      0x00007fe6b874772c: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.22%  │    ││  ││      0x00007fe6b8747731: vucomiss %xmm4,%xmm4
  0.92%  │    ││  ││      0x00007fe6b8747735: jp     0x00007fe6b87478a4
  1.71%  │    ││  ││      0x00007fe6b874773b: jne    0x00007fe6b87478a4             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.90%  │    ││  ││      0x00007fe6b8747741: vaddss %xmm4,%xmm6,%xmm4
  1.77%  │    ││  ││      0x00007fe6b8747745: vmovd  %xmm4,%r10d
  1.26%  │    ││  ││      0x00007fe6b874774a: mov    %r10d,0x4(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.71%  │    ↘↘  ││      0x00007fe6b874774e: mov    0x6(%rcx),%ecx
  0.88%  │        ││      0x00007fe6b8747751: vmovd  %ecx,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.97%  │        ││      0x00007fe6b8747755: vucomiss %xmm6,%xmm6
  1.02%  │      ╭ ││      0x00007fe6b8747759: jp     0x00007fe6b8747783
  2.28%  │      │╭││      0x00007fe6b874775b: jne    0x00007fe6b8747783             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.00%  │      ││││      0x00007fe6b874775d: mov    0x6(%r8),%r8d
  2.10%  │      ││││      0x00007fe6b8747761: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.12%  │      ││││      0x00007fe6b8747766: vucomiss %xmm4,%xmm4
  2.28%  │      ││││      0x00007fe6b874776a: jp     0x00007fe6b874789a
  0.71%  │      ││││      0x00007fe6b8747770: jne    0x00007fe6b874789a             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.91%  │      ││││      0x00007fe6b8747776: vaddss %xmm4,%xmm6,%xmm4
  1.00%  │      ││││      0x00007fe6b874777a: vmovd  %xmm4,%r10d
  2.54%  │      ││││      0x00007fe6b874777f: mov    %r10d,0x6(%rbx)
  1.12%  │      ↘↘││      0x00007fe6b8747783: add    $0x8,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.99%  │        ││      0x00007fe6b8747787: cmp    %edx,%r11d
         │        ╰│      0x00007fe6b874778a: jl     0x00007fe6b8747690             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │         │      0x00007fe6b8747790: mov    0x108(%r15),%r10               ; ImmutableOopMap{rdi=NarrowOop xmm0=Oop xmm1=Oop xmm2=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
         │         │                                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%  │         │      0x00007fe6b8747797: test   %eax,(%r10)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │         │                                                                ;   {poll}
         │         │      0x00007fe6b874779a: cmp    %edx,%r11d
         │         ╰      0x00007fe6b874779d: jl     0x00007fe6b8747690
         ↘                0x00007fe6b87477a3: cmp    0x70(%rsp),%r11d
                    ╭     0x00007fe6b87477a8: jge    0x00007fe6b8747821
                    │     0x00007fe6b87477aa: xchg   %ax,%ax                        ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                    │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
                    │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  ↗  0x00007fe6b87477ac: vmovd  %xmm5,%ebp
  0.02%             │  │  0x00007fe6b87477b0: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  │  0x00007fe6b87477b3: cmp    $0x4,%ebp
                    │  │  0x00007fe6b87477b6: jl     0x00007fe6b8747af2             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  │  0x00007fe6b87477bc: vmovd  %xmm3,%ebp
  0.04%             │  │  0x00007fe6b87477c0: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%             │  │  0x00007fe6b87477c3: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             │  │  0x00007fe6b87477c6: mov    (%r9,%rcx,1),%r8d
                    │  │  0x00007fe6b87477ca: vmovd  %r8d,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             │  │  0x00007fe6b87477cf: cmp    $0x4,%ebp
                    │  │  0x00007fe6b87477d2: jl     0x00007fe6b8747bde             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             │  │  0x00007fe6b87477d8: vucomiss %xmm6,%xmm6
                    │╭ │  0x00007fe6b87477dc: jp     0x00007fe6b8747816
  0.04%             ││╭│  0x00007fe6b87477de: jne    0x00007fe6b8747816             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.10%             ││││  0x00007fe6b87477e0: mov    0x0(%r13,%rcx,1),%r10d
  0.08%             ││││  0x00007fe6b87477e5: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                    ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    ││││  0x00007fe6b87477ea: vucomiss %xmm4,%xmm4
  0.02%             ││││  0x00007fe6b87477ee: jp     0x00007fe6b8747bcf
  0.04%             ││││  0x00007fe6b87477f4: jne    0x00007fe6b8747bcf             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%             ││││  0x00007fe6b87477fa: vaddss %xmm4,%xmm6,%xmm4              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@54 (line 153)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             ││││  0x00007fe6b87477fe: mov    %r14d,%ebp
                    ││││  0x00007fe6b8747801: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                    ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%             ││││  0x00007fe6b8747804: cmp    $0x4,%ebp
                    ││││  0x00007fe6b8747807: jl     0x00007fe6b8747be9             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                    ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%             ││││  0x00007fe6b874780d: vmovd  %xmm4,%r8d
  0.04%             ││││  0x00007fe6b8747812: mov    %r8d,(%rax,%rcx,1)
  0.04%             │↘↘│  0x00007fe6b8747816: add    $0x2,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             │  │  0x00007fe6b874781a: cmp    0x70(%rsp),%r11d
                    │  ╰  0x00007fe6b874781f: jl     0x00007fe6b87477ac             ;*invokevirtual verticalSumBufferNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
                    │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    ↘     0x00007fe6b8747821: mov    %rdi,%rdx
                          0x00007fe6b8747824: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@47 (line 153)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%                   0x00007fe6b8747828: mov    0x18(%rsp),%rsi
                          0x00007fe6b874782d: xchg   %ax,%ax
                          0x00007fe6b874782f: callq  0x00007fe6b86bf900             ; ImmutableOopMap{[120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                    ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
                                                                                    ;   {optimized virtual_call}
                          0x00007fe6b8747834: mov    0x78(%rsp),%rdx
                          0x00007fe6b8747839: movzbl 0x94(%rdx),%r8d                ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                          0x00007fe6b8747841: mov    0x108(%r15),%r9
  0.04%                   0x00007fe6b8747848: mov    0x10(%rsp),%rbx
                          0x00007fe6b874784d: add    $0x1,%rbx                      ; ImmutableOopMap{rdx=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                    ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
                          0x00007fe6b8747851: test   %eax,(%r9)                     ;   {poll}
                          0x00007fe6b8747854: test   %r8d,%r8d
                          0x00007fe6b8747857: je     0x00007fe6b8747463             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
                          0x00007fe6b874785d: jmp    0x00007fe6b87478da
                          0x00007fe6b874785f: add    $0x4,%ebx
                          0x00007fe6b8747862: add    $0x2,%ebx
....................................................................................................
 95.87%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.87%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (484 bytes) 
  2.71%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.37%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (209 bytes) 
  0.10%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.10%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (0 bytes) 
  0.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (15 bytes) 
  0.08%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (26 bytes) 
  0.08%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (4 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.28%  <...other 14 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.46%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 
  3.19%   [kernel.kallsyms]  [unknown] 
  0.18%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN21ThreadStateTransition22transition_from_nativeEP10JavaThread15JavaThreadState.constprop.178 
  0.02%           libjvm.so  _ZN4UTF814unicode_lengthEPKciRbS2_ 
  0.02%         interpreter  ireturn  172 ireturn  
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%         interpreter  pop  87 pop  
  0.02%         interpreter  invokeinterface  185 invokeinterface  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.64%                  c2
  3.19%   [kernel.kallsyms]
  0.12%         interpreter
  0.04%           libjvm.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53329 total address lines.
Perf output processed (skipped 6.606 seconds):
 Column 1: cycles (5073 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (515 bytes) 

                          0x00007fdf5c7434b0: jge    0x00007fdf5c7434bc             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@9 (line 149)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                          0x00007fdf5c7434b2: vmovd  %xmm3,%r8d
                          0x00007fdf5c7434b7: jmpq   0x00007fdf5c74343b
                          0x00007fdf5c7434bc: mov    $0xfffffffc,%r8d
                          0x00007fdf5c7434c2: sub    %ebx,%r8d
                          0x00007fdf5c7434c5: mov    $0xfffffffc,%ebx
                          0x00007fdf5c7434ca: sub    %ecx,%ebx
                          0x00007fdf5c7434cc: mov    $0xfffffffc,%ecx
  0.02%                   0x00007fdf5c7434d1: sub    %edx,%ecx
                          0x00007fdf5c7434d3: inc    %r8d
  0.06%                   0x00007fdf5c7434d6: inc    %ecx
                          0x00007fdf5c7434d8: inc    %ebx
                          0x00007fdf5c7434da: cmp    %ebx,%r8d
                          0x00007fdf5c7434dd: cmovg  %ebx,%r8d
  0.02%                   0x00007fdf5c7434e1: cmp    %r8d,%ecx
                          0x00007fdf5c7434e4: cmovg  %r8d,%ecx
                          0x00007fdf5c7434e8: cmp    0x70(%rsp),%ecx
                          0x00007fdf5c7434ec: mov    0x70(%rsp),%r10d
                          0x00007fdf5c7434f1: cmovg  %r10d,%ecx
  0.02%                   0x00007fdf5c7434f5: mov    %ecx,%edx
                          0x00007fdf5c7434f7: add    $0xfffffffa,%edx
                          0x00007fdf5c7434fa: cmp    %edx,%ecx
  0.02%                   0x00007fdf5c7434fc: mov    $0x80000000,%r10d
                          0x00007fdf5c743502: cmovl  %r10d,%edx
                          0x00007fdf5c743506: cmp    %edx,%r11d
         ╭                0x00007fdf5c743509: jge    0x00007fdf5c743623
         │                0x00007fdf5c74350f: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
         │                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.91%  │        ↗↗      0x00007fdf5c743510: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::ix@5 (line 258)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.07%  │        ││      0x00007fdf5c743513: mov    (%r9,%rcx,1),%r10d
  0.83%  │        ││      0x00007fdf5c743517: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.77%  │        ││      0x00007fdf5c74351c: vucomiss %xmm6,%xmm6
  1.08%  │╭       ││      0x00007fdf5c743520: jp     0x00007fdf5c74354b
  2.29%  ││╭      ││      0x00007fdf5c743522: jne    0x00007fdf5c74354b             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.06%  │││      ││      0x00007fdf5c743524: mov    0x0(%r13,%rcx,1),%r8d
  1.89%  │││      ││      0x00007fdf5c743529: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.24%  │││      ││      0x00007fdf5c74352e: vucomiss %xmm4,%xmm4
  1.83%  │││      ││      0x00007fdf5c743532: jp     0x00007fdf5c743728
  1.14%  │││      ││      0x00007fdf5c743538: jne    0x00007fdf5c743728             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.13%  │││      ││      0x00007fdf5c74353e: vaddss %xmm4,%xmm6,%xmm6
  0.91%  │││      ││      0x00007fdf5c743542: vmovd  %xmm6,%r10d
  2.11%  │││      ││      0x00007fdf5c743547: mov    %r10d,(%rax,%rcx,1)            ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.93%  │↘↘      ││      0x00007fdf5c74354b: movslq %r11d,%r10
  1.81%  │        ││      0x00007fdf5c74354e: mov    %r13,%r8
  0.99%  │        ││      0x00007fdf5c743551: add    %r10,%r8
  1.68%  │        ││      0x00007fdf5c743554: mov    %r9,%rcx
  1.38%  │        ││      0x00007fdf5c743557: add    %r10,%rcx
  1.99%  │        ││      0x00007fdf5c74355a: mov    %rax,%rbx
  0.91%  │        ││      0x00007fdf5c74355d: add    %r10,%rbx
  2.27%  │        ││      0x00007fdf5c743560: mov    0x2(%rcx),%r10d
  1.16%  │        ││      0x00007fdf5c743564: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.60%  │        ││      0x00007fdf5c743569: vucomiss %xmm6,%xmm6
  1.10%  │  ╭     ││      0x00007fdf5c74356d: jp     0x00007fdf5c743597
  2.13%  │  │╭    ││      0x00007fdf5c74356f: jne    0x00007fdf5c743597             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.14%  │  ││    ││      0x00007fdf5c743571: mov    0x2(%r8),%r10d
  1.99%  │  ││    ││      0x00007fdf5c743575: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.14%  │  ││    ││      0x00007fdf5c74357a: vucomiss %xmm4,%xmm4
  1.87%  │  ││    ││      0x00007fdf5c74357e: jp     0x00007fdf5c74371e
  1.22%  │  ││    ││      0x00007fdf5c743584: jne    0x00007fdf5c74371e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.01%  │  ││    ││      0x00007fdf5c74358a: vaddss %xmm4,%xmm6,%xmm6
  1.24%  │  ││    ││      0x00007fdf5c74358e: vmovd  %xmm6,%r10d
  1.93%  │  ││    ││      0x00007fdf5c743593: mov    %r10d,0x2(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.20%  │  ↘↘    ││      0x00007fdf5c743597: mov    0x4(%rcx),%r10d
  1.66%  │        ││      0x00007fdf5c74359b: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.24%  │        ││      0x00007fdf5c7435a0: vucomiss %xmm6,%xmm6
  1.83%  │    ╭   ││      0x00007fdf5c7435a4: jp     0x00007fdf5c7435ce
  0.99%  │    │╭  ││      0x00007fdf5c7435a6: jne    0x00007fdf5c7435ce             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.13%  │    ││  ││      0x00007fdf5c7435a8: mov    0x4(%r8),%r10d
  0.99%  │    ││  ││      0x00007fdf5c7435ac: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.37%  │    ││  ││      0x00007fdf5c7435b1: vucomiss %xmm4,%xmm4
  0.85%  │    ││  ││      0x00007fdf5c7435b5: jp     0x00007fdf5c743724
  1.97%  │    ││  ││      0x00007fdf5c7435bb: jne    0x00007fdf5c743724             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.91%  │    ││  ││      0x00007fdf5c7435c1: vaddss %xmm4,%xmm6,%xmm4
  2.07%  │    ││  ││      0x00007fdf5c7435c5: vmovd  %xmm4,%r10d
  1.36%  │    ││  ││      0x00007fdf5c7435ca: mov    %r10d,0x4(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.70%  │    ↘↘  ││      0x00007fdf5c7435ce: mov    0x6(%rcx),%ecx
  0.93%  │        ││      0x00007fdf5c7435d1: vmovd  %ecx,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.87%  │        ││      0x00007fdf5c7435d5: vucomiss %xmm6,%xmm6
  1.12%  │      ╭ ││      0x00007fdf5c7435d9: jp     0x00007fdf5c743603
  2.23%  │      │╭││      0x00007fdf5c7435db: jne    0x00007fdf5c743603             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.08%  │      ││││      0x00007fdf5c7435dd: mov    0x6(%r8),%r8d
  2.03%  │      ││││      0x00007fdf5c7435e1: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.87%  │      ││││      0x00007fdf5c7435e6: vucomiss %xmm4,%xmm4
  1.79%  │      ││││      0x00007fdf5c7435ea: jp     0x00007fdf5c74371a
  0.89%  │      ││││      0x00007fdf5c7435f0: jne    0x00007fdf5c74371a             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.25%  │      ││││      0x00007fdf5c7435f6: vaddss %xmm4,%xmm6,%xmm4
  1.01%  │      ││││      0x00007fdf5c7435fa: vmovd  %xmm4,%r10d
  2.17%  │      ││││      0x00007fdf5c7435ff: mov    %r10d,0x6(%rbx)
  1.18%  │      ↘↘││      0x00007fdf5c743603: add    $0x8,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
         │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.85%  │        ││      0x00007fdf5c743607: cmp    %edx,%r11d
         │        ╰│      0x00007fdf5c74360a: jl     0x00007fdf5c743510             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │         │      0x00007fdf5c743610: mov    0x108(%r15),%r10               ; ImmutableOopMap{rdi=NarrowOop xmm0=Oop xmm1=Oop xmm2=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
         │         │                                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │         │      0x00007fdf5c743617: test   %eax,(%r10)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
         │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │         │                                                                ;   {poll}
  0.06%  │         │      0x00007fdf5c74361a: cmp    %edx,%r11d
         │         ╰      0x00007fdf5c74361d: jl     0x00007fdf5c743510
         ↘                0x00007fdf5c743623: cmp    0x70(%rsp),%r11d
                    ╭     0x00007fdf5c743628: jge    0x00007fdf5c7436a1
                    │     0x00007fdf5c74362a: xchg   %ax,%ax                        ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                    │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
                    │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             │  ↗  0x00007fdf5c74362c: vmovd  %xmm5,%ebp
  0.02%             │  │  0x00007fdf5c743630: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             │  │  0x00007fdf5c743633: cmp    $0x4,%ebp
                    │  │  0x00007fdf5c743636: jl     0x00007fdf5c743972             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  │  0x00007fdf5c74363c: vmovd  %xmm3,%ebp
  0.02%             │  │  0x00007fdf5c743640: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%             │  │  0x00007fdf5c743643: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  │  0x00007fdf5c743646: mov    (%r9,%rcx,1),%r8d
                    │  │  0x00007fdf5c74364a: vmovd  %r8d,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             │  │  0x00007fdf5c74364f: cmp    $0x4,%ebp
                    │  │  0x00007fdf5c743652: jl     0x00007fdf5c743a5e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                    │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  │  0x00007fdf5c743658: vucomiss %xmm6,%xmm6
                    │╭ │  0x00007fdf5c74365c: jp     0x00007fdf5c743696
  0.04%             ││╭│  0x00007fdf5c74365e: jne    0x00007fdf5c743696             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    ││││  0x00007fdf5c743660: mov    0x0(%r13,%rcx,1),%r10d
  0.02%             ││││  0x00007fdf5c743665: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                    ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             ││││  0x00007fdf5c74366a: vucomiss %xmm4,%xmm4
  0.02%             ││││  0x00007fdf5c74366e: jp     0x00007fdf5c743a4f
  0.06%             ││││  0x00007fdf5c743674: jne    0x00007fdf5c743a4f             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             ││││  0x00007fdf5c74367a: vaddss %xmm4,%xmm6,%xmm4              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@54 (line 153)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             ││││  0x00007fdf5c74367e: mov    %r14d,%ebp
                    ││││  0x00007fdf5c743681: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                    ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             ││││  0x00007fdf5c743684: cmp    $0x4,%ebp
                    ││││  0x00007fdf5c743687: jl     0x00007fdf5c743a69             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                    ││││                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                    ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                    ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%             ││││  0x00007fdf5c74368d: vmovd  %xmm4,%r8d
                    ││││  0x00007fdf5c743692: mov    %r8d,(%rax,%rcx,1)
  0.02%             │↘↘│  0x00007fdf5c743696: add    $0x2,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
                    │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    │  │  0x00007fdf5c74369a: cmp    0x70(%rsp),%r11d
                    │  ╰  0x00007fdf5c74369f: jl     0x00007fdf5c74362c             ;*invokevirtual verticalSumBufferNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
                    │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                    ↘     0x00007fdf5c7436a1: mov    %rdi,%rdx
                          0x00007fdf5c7436a4: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@47 (line 153)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%                   0x00007fdf5c7436a8: mov    0x18(%rsp),%rsi
                          0x00007fdf5c7436ad: xchg   %ax,%ax
                          0x00007fdf5c7436af: callq  0x00007fdf5c6bf900             ; ImmutableOopMap{[120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                    ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
                                                                                    ;   {optimized virtual_call}
                          0x00007fdf5c7436b4: mov    0x78(%rsp),%rdx
  0.02%                   0x00007fdf5c7436b9: movzbl 0x94(%rdx),%r8d                ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                          0x00007fdf5c7436c1: mov    0x108(%r15),%r9
                          0x00007fdf5c7436c8: mov    0x10(%rsp),%rbx
                          0x00007fdf5c7436cd: add    $0x1,%rbx                      ; ImmutableOopMap{rdx=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                    ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
                          0x00007fdf5c7436d1: test   %eax,(%r9)                     ;   {poll}
  0.02%                   0x00007fdf5c7436d4: test   %r8d,%r8d
                          0x00007fdf5c7436d7: je     0x00007fdf5c7432e3             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
                          0x00007fdf5c7436dd: jmp    0x00007fdf5c74375a
                          0x00007fdf5c7436df: add    $0x4,%ebx
                          0x00007fdf5c7436e2: add    $0x2,%ebx
                          0x00007fdf5c7436e5: jmp    0x00007fdf5c7436ea
                          0x00007fdf5c7436e7: add    $0x4,%ebx                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
                                                                                    ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                          0x00007fdf5c7436ea: vmovss %xmm10,0x70(%rsp)
....................................................................................................
 95.94%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.94%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (515 bytes) 
  2.03%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.93%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (403 bytes) 
  0.53%   [kernel.kallsyms]  [unknown] (68 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (3 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%                      <unknown> (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.14%  <...other 7 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.91%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 
  2.90%   [kernel.kallsyms]  [unknown] 
  0.04%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.02%                  c2  jdk.internal.reflect.ClassFileAssembler::emitConstantPoolUTF8, version 87 
  0.02%           libjvm.so  _ZN21ThreadStateTransition22transition_from_nativeEP10JavaThread15JavaThreadState.constprop.178 
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%                      <unknown> 
  0.02%         interpreter  if_icmpgt  163 if_icmpgt  
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  method entry point (kind = native)  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.96%                  c2
  2.90%   [kernel.kallsyms]
  0.08%         interpreter
  0.02%                    
  0.02%           libjvm.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckPessimistic
# Parameters: (probabilityOfNaN = 0.01, size = 1024)

# Run progress: 40.74% complete, ETA 00:09:36
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 601.382 ops/ms
# Warmup Iteration   2: 633.954 ops/ms
# Warmup Iteration   3: 698.462 ops/ms
# Warmup Iteration   4: 700.228 ops/ms
# Warmup Iteration   5: 699.654 ops/ms
Iteration   1: 697.613 ops/ms
Iteration   2: 696.210 ops/ms
Iteration   3: 706.584 ops/ms
Iteration   4: 686.782 ops/ms
Iteration   5: 699.178 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 41.98% complete, ETA 00:09:25
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 591.748 ops/ms
# Warmup Iteration   2: 615.157 ops/ms
# Warmup Iteration   3: 698.467 ops/ms
# Warmup Iteration   4: 703.686 ops/ms
# Warmup Iteration   5: 698.109 ops/ms
Iteration   1: 699.026 ops/ms
Iteration   2: 694.777 ops/ms
Iteration   3: 694.242 ops/ms
Iteration   4: 695.951 ops/ms
Iteration   5: 701.230 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 43.21% complete, ETA 00:09:12
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 609.980 ops/ms
# Warmup Iteration   2: 633.447 ops/ms
# Warmup Iteration   3: 691.424 ops/ms
# Warmup Iteration   4: 691.298 ops/ms
# Warmup Iteration   5: 693.886 ops/ms
Iteration   1: 701.518 ops/ms
Iteration   2: 699.333 ops/ms
Iteration   3: 694.753 ops/ms
Iteration   4: 698.666 ops/ms
Iteration   5: 697.242 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckPessimistic":
  697.540 ±(99.9%) 4.669 ops/ms [Average]
  (min, avg, max) = (686.782, 697.540, 706.584), stdev = 4.367
  CI (99.9%): [692.871, 702.209] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumBufferNaNCheckPessimistic:·asm":
PrintAssembly processed: 53297 total address lines.
Perf output processed (skipped 6.639 seconds):
 Column 1: cycles (5095 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (592 bytes) 

                           0x00007f2d2c742c71: jne    0x00007f2d2c742ca9             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - java.lang.Float::isNaN@3 (line 467)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007f2d2c742c73: mov    0x0(%r13,%r8,1),%r10d
                           0x00007f2d2c742c78: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                                                                                     ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%                    0x00007f2d2c742c7d: vucomiss %xmm4,%xmm4
                           0x00007f2d2c742c81: jp     0x00007f2d2c742f28
                           0x00007f2d2c742c87: jne    0x00007f2d2c742f28             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - java.lang.Float::isNaN@3 (line 467)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007f2d2c742c8d: vaddss %xmm4,%xmm6,%xmm4              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@54 (line 153)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%                    0x00007f2d2c742c91: mov    %r14d,%ebp
                           0x00007f2d2c742c94: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - java.nio.Buffer::checkIndex@10 (line 687)
                                                                                     ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007f2d2c742c97: cmp    $0x4,%ebp
                           0x00007f2d2c742c9a: jl     0x00007f2d2c7431f6             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - java.nio.Buffer::checkIndex@11 (line 687)
                                                                                     ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007f2d2c742ca0: vmovd  %xmm4,%r10d
  0.02%                    0x00007f2d2c742ca5: mov    %r10d,(%rax,%r8,1)
                           0x00007f2d2c742ca9: add    $0x2,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007f2d2c742cad: cmp    %esi,%r11d
         ╭                 0x00007f2d2c742cb0: jge    0x00007f2d2c742cbc             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@9 (line 149)
         │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │                 0x00007f2d2c742cb2: vmovd  %xmm3,%r8d
         │                 0x00007f2d2c742cb7: jmpq   0x00007f2d2c742c3b
         ↘                 0x00007f2d2c742cbc: mov    $0xfffffffc,%r8d
  0.04%                    0x00007f2d2c742cc2: sub    %ebx,%r8d
                           0x00007f2d2c742cc5: mov    $0xfffffffc,%ebx
                           0x00007f2d2c742cca: sub    %ecx,%ebx
                           0x00007f2d2c742ccc: mov    $0xfffffffc,%ecx
                           0x00007f2d2c742cd1: sub    %edx,%ecx
                           0x00007f2d2c742cd3: inc    %r8d
                           0x00007f2d2c742cd6: inc    %ecx
                           0x00007f2d2c742cd8: inc    %ebx
  0.02%                    0x00007f2d2c742cda: cmp    %ebx,%r8d
                           0x00007f2d2c742cdd: cmovg  %ebx,%r8d
                           0x00007f2d2c742ce1: cmp    %r8d,%ecx
                           0x00007f2d2c742ce4: cmovg  %r8d,%ecx
                           0x00007f2d2c742ce8: cmp    0x70(%rsp),%ecx
                           0x00007f2d2c742cec: mov    0x70(%rsp),%r10d
                           0x00007f2d2c742cf1: cmovg  %r10d,%ecx
  0.02%                    0x00007f2d2c742cf5: mov    %ecx,%edx
  0.04%                    0x00007f2d2c742cf7: add    $0xfffffffa,%edx
                           0x00007f2d2c742cfa: cmp    %edx,%ecx
  0.02%                    0x00007f2d2c742cfc: mov    $0x80000000,%r10d
                           0x00007f2d2c742d02: cmovl  %r10d,%edx
  0.08%                    0x00007f2d2c742d06: cmp    %edx,%r11d
          ╭                0x00007f2d2c742d09: jge    0x00007f2d2c742e23
          │                0x00007f2d2c742d0f: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
          │                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.02%   │        ↗↗      0x00007f2d2c742d10: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - java.nio.DirectByteBuffer::ix@5 (line 258)
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.83%   │        ││      0x00007f2d2c742d13: mov    (%r9,%rcx,1),%r10d
  1.30%   │        ││      0x00007f2d2c742d17: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.84%   │        ││      0x00007f2d2c742d1c: vucomiss %xmm6,%xmm6
  1.10%   │╭       ││      0x00007f2d2c742d20: jp     0x00007f2d2c742d4b
  1.75%   ││╭      ││      0x00007f2d2c742d22: jne    0x00007f2d2c742d4b             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.14%   │││      ││      0x00007f2d2c742d24: mov    0x0(%r13,%rcx,1),%r8d
  1.79%   │││      ││      0x00007f2d2c742d29: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.12%   │││      ││      0x00007f2d2c742d2e: vucomiss %xmm4,%xmm4
  1.55%   │││      ││      0x00007f2d2c742d32: jp     0x00007f2d2c742f28
  1.24%   │││      ││      0x00007f2d2c742d38: jne    0x00007f2d2c742f28             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.92%   │││      ││      0x00007f2d2c742d3e: vaddss %xmm4,%xmm6,%xmm6
  0.79%   │││      ││      0x00007f2d2c742d42: vmovd  %xmm6,%r10d
  2.22%   │││      ││      0x00007f2d2c742d47: mov    %r10d,(%rax,%rcx,1)            ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.37%   │↘↘      ││      0x00007f2d2c742d4b: movslq %r11d,%r10
  1.43%   │        ││      0x00007f2d2c742d4e: mov    %r13,%r8
  1.47%   │        ││      0x00007f2d2c742d51: add    %r10,%r8
  1.55%   │        ││      0x00007f2d2c742d54: mov    %r9,%rcx
  1.33%   │        ││      0x00007f2d2c742d57: add    %r10,%rcx
  1.69%   │        ││      0x00007f2d2c742d5a: mov    %rax,%rbx
  1.02%   │        ││      0x00007f2d2c742d5d: add    %r10,%rbx
  2.10%   │        ││      0x00007f2d2c742d60: mov    0x2(%rcx),%r10d
  1.41%   │        ││      0x00007f2d2c742d64: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.81%   │        ││      0x00007f2d2c742d69: vucomiss %xmm6,%xmm6
  1.39%   │  ╭     ││      0x00007f2d2c742d6d: jp     0x00007f2d2c742d97
  2.12%   │  │╭    ││      0x00007f2d2c742d6f: jne    0x00007f2d2c742d97             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.33%   │  ││    ││      0x00007f2d2c742d71: mov    0x2(%r8),%r10d
  2.04%   │  ││    ││      0x00007f2d2c742d75: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.65%   │  ││    ││      0x00007f2d2c742d7a: vucomiss %xmm4,%xmm4
  2.12%   │  ││    ││      0x00007f2d2c742d7e: jp     0x00007f2d2c742f1e
  1.22%   │  ││    ││      0x00007f2d2c742d84: jne    0x00007f2d2c742f1e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.65%   │  ││    ││      0x00007f2d2c742d8a: vaddss %xmm4,%xmm6,%xmm6
  1.04%   │  ││    ││      0x00007f2d2c742d8e: vmovd  %xmm6,%r10d
  2.00%   │  ││    ││      0x00007f2d2c742d93: mov    %r10d,0x2(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.92%   │  ↘↘    ││      0x00007f2d2c742d97: mov    0x4(%rcx),%r10d
  1.53%   │        ││      0x00007f2d2c742d9b: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.26%   │        ││      0x00007f2d2c742da0: vucomiss %xmm6,%xmm6
  1.39%   │    ╭   ││      0x00007f2d2c742da4: jp     0x00007f2d2c742dce
  1.26%   │    │╭  ││      0x00007f2d2c742da6: jne    0x00007f2d2c742dce             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.06%   │    ││  ││      0x00007f2d2c742da8: mov    0x4(%r8),%r10d
  1.02%   │    ││  ││      0x00007f2d2c742dac: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.98%   │    ││  ││      0x00007f2d2c742db1: vucomiss %xmm4,%xmm4
  1.63%   │    ││  ││      0x00007f2d2c742db5: jp     0x00007f2d2c742f24
  1.84%   │    ││  ││      0x00007f2d2c742dbb: jne    0x00007f2d2c742f24             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.10%   │    ││  ││      0x00007f2d2c742dc1: vaddss %xmm4,%xmm6,%xmm4
  1.61%   │    ││  ││      0x00007f2d2c742dc5: vmovd  %xmm4,%r10d
  1.14%   │    ││  ││      0x00007f2d2c742dca: mov    %r10d,0x4(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.90%   │    ↘↘  ││      0x00007f2d2c742dce: mov    0x6(%rcx),%ecx
  1.08%   │        ││      0x00007f2d2c742dd1: vmovd  %ecx,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.65%   │        ││      0x00007f2d2c742dd5: vucomiss %xmm6,%xmm6
  1.18%   │      ╭ ││      0x00007f2d2c742dd9: jp     0x00007f2d2c742e03
  1.67%   │      │╭││      0x00007f2d2c742ddb: jne    0x00007f2d2c742e03             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.14%   │      ││││      0x00007f2d2c742ddd: mov    0x6(%r8),%r8d
  1.65%   │      ││││      0x00007f2d2c742de1: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.49%   │      ││││      0x00007f2d2c742de6: vucomiss %xmm4,%xmm4
  2.12%   │      ││││      0x00007f2d2c742dea: jp     0x00007f2d2c742f1a
  1.47%   │      ││││      0x00007f2d2c742df0: jne    0x00007f2d2c742f1a             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.86%   │      ││││      0x00007f2d2c742df6: vaddss %xmm4,%xmm6,%xmm4
  1.16%   │      ││││      0x00007f2d2c742dfa: vmovd  %xmm4,%r10d
  1.94%   │      ││││      0x00007f2d2c742dff: mov    %r10d,0x6(%rbx)
  1.43%   │      ↘↘││      0x00007f2d2c742e03: add    $0x8,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.92%   │        ││      0x00007f2d2c742e07: cmp    %edx,%r11d
          │        ╰│      0x00007f2d2c742e0a: jl     0x00007f2d2c742d10             ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │         │      0x00007f2d2c742e10: mov    0x108(%r15),%r10               ; ImmutableOopMap{rdi=NarrowOop xmm0=Oop xmm1=Oop xmm2=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
          │         │                                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%   │         │      0x00007f2d2c742e17: test   %eax,(%r10)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │         │                                                                ;   {poll}
  0.12%   │         │      0x00007f2d2c742e1a: cmp    %edx,%r11d
          │         ╰      0x00007f2d2c742e1d: jl     0x00007f2d2c742d10
          ↘                0x00007f2d2c742e23: cmp    0x70(%rsp),%r11d
                     ╭     0x00007f2d2c742e28: jge    0x00007f2d2c742ea1
                     │     0x00007f2d2c742e2a: xchg   %ax,%ax                        ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                     │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
                     │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     │  ↗  0x00007f2d2c742e2c: vmovd  %xmm5,%ebp
  0.02%              │  │  0x00007f2d2c742e30: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%              │  │  0x00007f2d2c742e33: cmp    $0x4,%ebp
                     │  │  0x00007f2d2c742e36: jl     0x00007f2d2c743172             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     │  │  0x00007f2d2c742e3c: vmovd  %xmm3,%ebp
                     │  │  0x00007f2d2c742e40: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     │  │  0x00007f2d2c742e43: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%              │  │  0x00007f2d2c742e46: mov    (%r9,%rcx,1),%r8d
                     │  │  0x00007f2d2c742e4a: vmovd  %r8d,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     │  │  0x00007f2d2c742e4f: cmp    $0x4,%ebp
                     │  │  0x00007f2d2c742e52: jl     0x00007f2d2c74325e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%              │  │  0x00007f2d2c742e58: vucomiss %xmm6,%xmm6
  0.06%              │╭ │  0x00007f2d2c742e5c: jp     0x00007f2d2c742e96
  0.02%              ││╭│  0x00007f2d2c742e5e: jne    0x00007f2d2c742e96             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%              ││││  0x00007f2d2c742e60: mov    0x0(%r13,%rcx,1),%r10d
                     ││││  0x00007f2d2c742e65: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                     ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     ││││  0x00007f2d2c742e6a: vucomiss %xmm4,%xmm4
  0.02%              ││││  0x00007f2d2c742e6e: jp     0x00007f2d2c74324f
  0.06%              ││││  0x00007f2d2c742e74: jne    0x00007f2d2c74324f             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     ││││  0x00007f2d2c742e7a: vaddss %xmm4,%xmm6,%xmm4              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@54 (line 153)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%              ││││  0x00007f2d2c742e7e: mov    %r14d,%ebp
  0.06%              ││││  0x00007f2d2c742e81: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                     ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     ││││  0x00007f2d2c742e84: cmp    $0x4,%ebp
                     ││││  0x00007f2d2c742e87: jl     0x00007f2d2c743269             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                     ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%              ││││  0x00007f2d2c742e8d: vmovd  %xmm4,%r8d
                     ││││  0x00007f2d2c742e92: mov    %r8d,(%rax,%rcx,1)
  0.06%              │↘↘│  0x00007f2d2c742e96: add    $0x2,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     │  │  0x00007f2d2c742e9a: cmp    0x70(%rsp),%r11d
                     │  ╰  0x00007f2d2c742e9f: jl     0x00007f2d2c742e2c             ;*invokevirtual verticalSumBufferNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
                     │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     ↘     0x00007f2d2c742ea1: mov    %rdi,%rdx
  0.02%                    0x00007f2d2c742ea4: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@47 (line 153)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007f2d2c742ea8: mov    0x18(%rsp),%rsi
                           0x00007f2d2c742ead: xchg   %ax,%ax
                           0x00007f2d2c742eaf: callq  0x00007f2d2c6bf900             ; ImmutableOopMap{[120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                     ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
                                                                                     ;   {optimized virtual_call}
  0.08%                    0x00007f2d2c742eb4: mov    0x78(%rsp),%rdx
  0.02%                    0x00007f2d2c742eb9: movzbl 0x94(%rdx),%r8d                ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007f2d2c742ec1: mov    0x108(%r15),%r9
                           0x00007f2d2c742ec8: mov    0x10(%rsp),%rbx
  0.02%                    0x00007f2d2c742ecd: add    $0x1,%rbx                      ; ImmutableOopMap{rdx=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                     ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
                           0x00007f2d2c742ed1: test   %eax,(%r9)                     ;   {poll}
                           0x00007f2d2c742ed4: test   %r8d,%r8d
                           0x00007f2d2c742ed7: je     0x00007f2d2c742ae3             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
                           0x00007f2d2c742edd: jmp    0x00007f2d2c742f5a
                           0x00007f2d2c742edf: add    $0x4,%ebx
                           0x00007f2d2c742ee2: add    $0x2,%ebx
                           0x00007f2d2c742ee5: jmp    0x00007f2d2c742eea
....................................................................................................
 95.86%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.86%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (592 bytes) 
  2.90%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.55%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (277 bytes) 
  0.18%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (65 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%        libc-2.23.so  _int_free (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.12%  <...other 6 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.43%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 
  3.28%   [kernel.kallsyms]  [unknown] 
  0.18%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.04%        libc-2.23.so  _int_free 
  0.02%           libjvm.so  _ZN13InstanceKlass23allocate_instance_klassERK15ClassFileParserP6Thread 
  0.02%           libjvm.so  _ZN10JNIHandles10make_localEP7JNIEnv_P7oopDesc 
  0.02%         interpreter  invokehandle  233 invokehandle  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.60%                  c2
  3.28%   [kernel.kallsyms]
  0.04%           libjvm.so
  0.04%        libc-2.23.so
  0.02%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53282 total address lines.
Perf output processed (skipped 6.639 seconds):
 Column 1: cycles (5089 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (701 bytes) 

                              0x00007f0234747e34: sar    $0x1f,%r11d
                              0x00007f0234747e38: and    %ebx,%r11d
                              0x00007f0234747e3b: mov    $0x80000001,%edx
                              0x00007f0234747e40: sub    %r11d,%edx
                              0x00007f0234747e43: mov    %ecx,%r11d
                              0x00007f0234747e46: sar    $0x1f,%r11d
                              0x00007f0234747e4a: and    %ecx,%r11d
                              0x00007f0234747e4d: mov    $0x80000001,%r10d
                              0x00007f0234747e53: sub    %r11d,%r10d
                              0x00007f0234747e56: cmp    %edx,%r10d
  0.04%                       0x00007f0234747e59: cmovl  %edx,%r10d
                              0x00007f0234747e5d: mov    0x10(%rsi),%r11
                              0x00007f0234747e61: mov    %r11,%r9                       ;*invokevirtual getIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                                                        ; - jdk.internal.misc.Unsafe::getIntUnaligned@5 (line 3446)
                                                                                        ; - java.nio.DirectByteBuffer::getFloat@9 (line 943)
                                                                                        ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                                                                                        ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                                                                                        ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                              0x00007f0234747e64: mov    0x10(%rax),%r11
  0.02%                       0x00007f0234747e68: mov    %r11,%r13                      ;*invokevirtual getIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                                                        ; - jdk.internal.misc.Unsafe::getIntUnaligned@5 (line 3446)
                                                                                        ; - java.nio.DirectByteBuffer::getFloat@9 (line 943)
                                                                                        ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                                                                                        ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                                                                                        ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                              0x00007f0234747e6b: vmovq  %xmm2,%r11
                              0x00007f0234747e70: mov    0x10(%r11),%r11
                              0x00007f0234747e74: mov    %r11,%rax                      ;*invokevirtual putIntUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                                                        ; - jdk.internal.misc.Unsafe::putIntUnaligned@10 (line 3569)
                                                                                        ; - java.nio.DirectByteBuffer::putFloat@17 (line 972)
                                                                                        ; - java.nio.DirectByteBuffer::putFloat@12 (line 993)
                                                                                        ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                                                                                        ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%                       0x00007f0234747e77: vmovq  %xmm2,%r11
                              0x00007f0234747e7c: mov    0x1c(%r11),%r14d               ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                                                        ; - java.nio.Buffer::checkIndex@6 (line 687)
                                                                                        ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                                        ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                                                                                        ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                              0x00007f0234747e80: mov    %r14d,%edx
                              0x00007f0234747e83: neg    %edx
                              0x00007f0234747e85: mov    %edx,%r11d
                              0x00007f0234747e88: sar    $0x1f,%r11d
                              0x00007f0234747e8c: and    %edx,%r11d
                              0x00007f0234747e8f: mov    $0x80000001,%esi
  0.02%                       0x00007f0234747e94: sub    %r11d,%esi
                              0x00007f0234747e97: cmp    %r10d,%esi
                              0x00007f0234747e9a: cmovl  %r10d,%esi
                              0x00007f0234747e9e: mov    $0x2,%r10d
  0.02%                       0x00007f0234747ea4: cmp    %r10d,%esi
                              0x00007f0234747ea7: cmovl  %r10d,%esi
                              0x00007f0234747eab: cmp    0x70(%rsp),%esi
                              0x00007f0234747eaf: mov    0x70(%rsp),%r10d
  0.02%                       0x00007f0234747eb4: cmovg  %r10d,%esi
                              0x00007f0234747eb8: xor    %r11d,%r11d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                                        ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
                                                                                        ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            ↗                 0x00007f0234747ebb: vmovd  %xmm5,%ebp
            │                 0x00007f0234747ebf: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
            │                                                                           ; - java.nio.Buffer::checkIndex@10 (line 687)
            │                                                                           ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
            │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%     │                 0x00007f0234747ec2: cmp    $0x4,%ebp
            │                 0x00007f0234747ec5: jl     0x00007f02347483f2             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
            │                                                                           ; - java.nio.Buffer::checkIndex@11 (line 687)
            │                                                                           ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
            │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │                 0x00007f0234747ecb: mov    %r8d,%ebp
            │                 0x00007f0234747ece: vmovd  %r8d,%xmm3
            │                 0x00007f0234747ed3: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
            │                                                                           ; - java.nio.Buffer::checkIndex@10 (line 687)
            │                                                                           ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
            │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%     │                 0x00007f0234747ed6: movslq %r11d,%r8                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
            │                                                                           ; - java.nio.DirectByteBuffer::ix@5 (line 258)
            │                                                                           ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
            │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
            │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │                 0x00007f0234747ed9: mov    (%r9,%r8,1),%r10d
            │                 0x00007f0234747edd: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
            │                                                                           ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
            │                                                                           ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
            │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
            │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │                 0x00007f0234747ee2: cmp    $0x4,%ebp
            │                 0x00007f0234747ee5: jl     0x00007f0234748452             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
            │                                                                           ; - java.nio.Buffer::checkIndex@11 (line 687)
            │                                                                           ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
            │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
            │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │                 0x00007f0234747eeb: vucomiss %xmm6,%xmm6
         ╭  │                 0x00007f0234747eef: jp     0x00007f0234747f29
         │╭ │                 0x00007f0234747ef1: jne    0x00007f0234747f29             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││ │                                                                           ; - java.lang.Float::isNaN@3 (line 467)
         ││ │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
         ││ │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ││ │                 0x00007f0234747ef3: mov    0x0(%r13,%r8,1),%r10d
  0.02%  ││ │                 0x00007f0234747ef8: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
         ││ │                                                                           ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
         ││ │                                                                           ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
         ││ │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
         ││ │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ││ │                 0x00007f0234747efd: vucomiss %xmm4,%xmm4
         ││ │                 0x00007f0234747f01: jp     0x00007f02347481a8
         ││ │                 0x00007f0234747f07: jne    0x00007f02347481a8             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││ │                                                                           ; - java.lang.Float::isNaN@3 (line 467)
         ││ │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
         ││ │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%  ││ │                 0x00007f0234747f0d: vaddss %xmm4,%xmm6,%xmm4              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
         ││ │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@54 (line 153)
         ││ │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ││ │                 0x00007f0234747f11: mov    %r14d,%ebp
         ││ │                 0x00007f0234747f14: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
         ││ │                                                                           ; - java.nio.Buffer::checkIndex@10 (line 687)
         ││ │                                                                           ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
         ││ │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
         ││ │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ││ │                 0x00007f0234747f17: cmp    $0x4,%ebp
         ││ │                 0x00007f0234747f1a: jl     0x00007f0234748476             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
         ││ │                                                                           ; - java.nio.Buffer::checkIndex@11 (line 687)
         ││ │                                                                           ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
         ││ │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
         ││ │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%  ││ │                 0x00007f0234747f20: vmovd  %xmm4,%r10d
         ││ │                 0x00007f0234747f25: mov    %r10d,(%rax,%r8,1)
         ↘↘ │                 0x00007f0234747f29: add    $0x2,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
            │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │                 0x00007f0234747f2d: cmp    %esi,%r11d
           ╭│                 0x00007f0234747f30: jge    0x00007f0234747f3c             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           ││                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@9 (line 149)
           ││                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
           ││                 0x00007f0234747f32: vmovd  %xmm3,%r8d
           │╰                 0x00007f0234747f37: jmpq   0x00007f0234747ebb
  0.02%    ↘                  0x00007f0234747f3c: mov    $0xfffffffc,%r8d
                              0x00007f0234747f42: sub    %ebx,%r8d
                              0x00007f0234747f45: mov    $0xfffffffc,%ebx
                              0x00007f0234747f4a: sub    %ecx,%ebx
  0.02%                       0x00007f0234747f4c: mov    $0xfffffffc,%ecx
                              0x00007f0234747f51: sub    %edx,%ecx
                              0x00007f0234747f53: inc    %r8d
                              0x00007f0234747f56: inc    %ecx
                              0x00007f0234747f58: inc    %ebx
                              0x00007f0234747f5a: cmp    %ebx,%r8d
                              0x00007f0234747f5d: cmovg  %ebx,%r8d
                              0x00007f0234747f61: cmp    %r8d,%ecx
  0.04%                       0x00007f0234747f64: cmovg  %r8d,%ecx
                              0x00007f0234747f68: cmp    0x70(%rsp),%ecx
                              0x00007f0234747f6c: mov    0x70(%rsp),%r10d
                              0x00007f0234747f71: cmovg  %r10d,%ecx
  0.06%                       0x00007f0234747f75: mov    %ecx,%edx
                              0x00007f0234747f77: add    $0xfffffffa,%edx
                              0x00007f0234747f7a: cmp    %edx,%ecx
                              0x00007f0234747f7c: mov    $0x80000000,%r10d
                              0x00007f0234747f82: cmovl  %r10d,%edx
                              0x00007f0234747f86: cmp    %edx,%r11d
             ╭                0x00007f0234747f89: jge    0x00007f02347480a3
             │                0x00007f0234747f8f: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
             │                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
             │                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.41%      │        ↗↗      0x00007f0234747f90: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
             │        ││                                                                ; - java.nio.DirectByteBuffer::ix@5 (line 258)
             │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
             │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
             │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.06%      │        ││      0x00007f0234747f93: mov    (%r9,%rcx,1),%r10d
  0.63%      │        ││      0x00007f0234747f97: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
             │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
             │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
             │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
             │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.65%      │        ││      0x00007f0234747f9c: vucomiss %xmm6,%xmm6
  0.67%      │╭       ││      0x00007f0234747fa0: jp     0x00007f0234747fcb
  2.46%      ││╭      ││      0x00007f0234747fa2: jne    0x00007f0234747fcb             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
             │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
             │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
             │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.67%      │││      ││      0x00007f0234747fa4: mov    0x0(%r13,%rcx,1),%r8d
  2.24%      │││      ││      0x00007f0234747fa9: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
             │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
             │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
             │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
             │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.69%      │││      ││      0x00007f0234747fae: vucomiss %xmm4,%xmm4
  2.10%      │││      ││      0x00007f0234747fb2: jp     0x00007f02347481a8
  0.61%      │││      ││      0x00007f0234747fb8: jne    0x00007f02347481a8             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
             │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
             │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
             │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.97%      │││      ││      0x00007f0234747fbe: vaddss %xmm4,%xmm6,%xmm6
  0.73%      │││      ││      0x00007f0234747fc2: vmovd  %xmm6,%r10d
  2.28%      │││      ││      0x00007f0234747fc7: mov    %r10d,(%rax,%rcx,1)            ;*iinc {reexecute=0 rethrow=0 return_oop=0}
             │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
             │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.75%      │↘↘      ││      0x00007f0234747fcb: movslq %r11d,%r10
  2.46%      │        ││      0x00007f0234747fce: mov    %r13,%r8
  0.51%      │        ││      0x00007f0234747fd1: add    %r10,%r8
  2.38%      │        ││      0x00007f0234747fd4: mov    %r9,%rcx
  0.53%      │        ││      0x00007f0234747fd7: add    %r10,%rcx
  2.40%      │        ││      0x00007f0234747fda: mov    %rax,%rbx
  0.57%      │        ││      0x00007f0234747fdd: add    %r10,%rbx
  2.10%      │        ││      0x00007f0234747fe0: mov    0x2(%rcx),%r10d
  0.77%      │        ││      0x00007f0234747fe4: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
             │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
             │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
             │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
             │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.57%      │        ││      0x00007f0234747fe9: vucomiss %xmm6,%xmm6
  0.71%      │  ╭     ││      0x00007f0234747fed: jp     0x00007f0234748017
  2.44%      │  │╭    ││      0x00007f0234747fef: jne    0x00007f0234748017             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
             │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
             │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
             │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.77%      │  ││    ││      0x00007f0234747ff1: mov    0x2(%r8),%r10d
  2.26%      │  ││    ││      0x00007f0234747ff5: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
             │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
             │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
             │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
             │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.63%      │  ││    ││      0x00007f0234747ffa: vucomiss %xmm4,%xmm4
  2.57%      │  ││    ││      0x00007f0234747ffe: jp     0x00007f023474819e
  0.61%      │  ││    ││      0x00007f0234748004: jne    0x00007f023474819e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
             │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
             │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
             │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.28%      │  ││    ││      0x00007f023474800a: vaddss %xmm4,%xmm6,%xmm6
  0.47%      │  ││    ││      0x00007f023474800e: vmovd  %xmm6,%r10d
  2.10%      │  ││    ││      0x00007f0234748013: mov    %r10d,0x2(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
             │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
             │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.86%      │  ↘↘    ││      0x00007f0234748017: mov    0x4(%rcx),%r10d
  2.52%      │        ││      0x00007f023474801b: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
             │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
             │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
             │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
             │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.73%      │        ││      0x00007f0234748020: vucomiss %xmm6,%xmm6
  2.32%      │    ╭   ││      0x00007f0234748024: jp     0x00007f023474804e
  0.86%      │    │╭  ││      0x00007f0234748026: jne    0x00007f023474804e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
             │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
             │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
             │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.26%      │    ││  ││      0x00007f0234748028: mov    0x4(%r8),%r10d
  0.61%      │    ││  ││      0x00007f023474802c: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
             │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
             │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
             │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
             │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.67%      │    ││  ││      0x00007f0234748031: vucomiss %xmm4,%xmm4
  0.69%      │    ││  ││      0x00007f0234748035: jp     0x00007f02347481a4
  2.30%      │    ││  ││      0x00007f023474803b: jne    0x00007f02347481a4             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
             │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
             │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
             │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.53%      │    ││  ││      0x00007f0234748041: vaddss %xmm4,%xmm6,%xmm4
  2.34%      │    ││  ││      0x00007f0234748045: vmovd  %xmm4,%r10d
  0.79%      │    ││  ││      0x00007f023474804a: mov    %r10d,0x4(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
             │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
             │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.73%      │    ↘↘  ││      0x00007f023474804e: mov    0x6(%rcx),%ecx
  0.73%      │        ││      0x00007f0234748051: vmovd  %ecx,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
             │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
             │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
             │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
             │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.24%      │        ││      0x00007f0234748055: vucomiss %xmm6,%xmm6
  0.67%      │      ╭ ││      0x00007f0234748059: jp     0x00007f0234748083
  2.34%      │      │╭││      0x00007f023474805b: jne    0x00007f0234748083             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
             │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
             │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
             │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.41%      │      ││││      0x00007f023474805d: mov    0x6(%r8),%r8d
  2.20%      │      ││││      0x00007f0234748061: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
             │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
             │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
             │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
             │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.77%      │      ││││      0x00007f0234748066: vucomiss %xmm4,%xmm4
  2.48%      │      ││││      0x00007f023474806a: jp     0x00007f023474819a
  0.73%      │      ││││      0x00007f0234748070: jne    0x00007f023474819a             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
             │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
             │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
             │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.48%      │      ││││      0x00007f0234748076: vaddss %xmm4,%xmm6,%xmm4
  0.81%      │      ││││      0x00007f023474807a: vmovd  %xmm4,%r10d
  2.67%      │      ││││      0x00007f023474807f: mov    %r10d,0x6(%rbx)
  0.71%      │      ↘↘││      0x00007f0234748083: add    $0x8,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
             │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
             │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.59%      │        ││      0x00007f0234748087: cmp    %edx,%r11d
             │        ╰│      0x00007f023474808a: jl     0x00007f0234747f90             ;*goto {reexecute=0 rethrow=0 return_oop=0}
             │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
             │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
             │         │      0x00007f0234748090: mov    0x108(%r15),%r10               ; ImmutableOopMap{rdi=NarrowOop xmm0=Oop xmm1=Oop xmm2=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
             │         │                                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
             │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
             │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%      │         │      0x00007f0234748097: test   %eax,(%r10)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
             │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
             │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
             │         │                                                                ;   {poll}
  0.12%      │         │      0x00007f023474809a: cmp    %edx,%r11d
             │         ╰      0x00007f023474809d: jl     0x00007f0234747f90
             ↘                0x00007f02347480a3: cmp    0x70(%rsp),%r11d
                        ╭     0x00007f02347480a8: jge    0x00007f0234748121
                        │     0x00007f02347480aa: xchg   %ax,%ax                        ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                        │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
                        │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                        │  ↗  0x00007f02347480ac: vmovd  %xmm5,%ebp
                        │  │  0x00007f02347480b0: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                        │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                        │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                        │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                        │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%                 │  │  0x00007f02347480b3: cmp    $0x4,%ebp
                        │  │  0x00007f02347480b6: jl     0x00007f02347483f2             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                        │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                        │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                        │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                        │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                        │  │  0x00007f02347480bc: vmovd  %xmm3,%ebp
                        │  │  0x00007f02347480c0: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                        │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                        │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                        │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                        │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%                 │  │  0x00007f02347480c3: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                        │  │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
                        │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
                        │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                        │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                        │  │  0x00007f02347480c6: mov    (%r9,%rcx,1),%r8d
                        │  │  0x00007f02347480ca: vmovd  %r8d,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                        │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                        │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                        │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                        │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%                 │  │  0x00007f02347480cf: cmp    $0x4,%ebp
                        │  │  0x00007f02347480d2: jl     0x00007f02347484de             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                        │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                        │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                        │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                        │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%                 │  │  0x00007f02347480d8: vucomiss %xmm6,%xmm6
  0.04%                 │╭ │  0x00007f02347480dc: jp     0x00007f0234748116
  0.06%                 ││╭│  0x00007f02347480de: jne    0x00007f0234748116             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                        ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                        ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
                        ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.10%                 ││││  0x00007f02347480e0: mov    0x0(%r13,%rcx,1),%r10d
  0.02%                 ││││  0x00007f02347480e5: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                        ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                        ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                        ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                        ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                        ││││  0x00007f02347480ea: vucomiss %xmm4,%xmm4
  0.02%                 ││││  0x00007f02347480ee: jp     0x00007f02347484cf
  0.10%                 ││││  0x00007f02347480f4: jne    0x00007f02347484cf             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                        ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                        ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
                        ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%                 ││││  0x00007f02347480fa: vaddss %xmm4,%xmm6,%xmm4              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                        ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@54 (line 153)
                        ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                        ││││  0x00007f02347480fe: mov    %r14d,%ebp
  0.02%                 ││││  0x00007f0234748101: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                        ││││                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                        ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                        ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                        ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%                 ││││  0x00007f0234748104: cmp    $0x4,%ebp
                        ││││  0x00007f0234748107: jl     0x00007f02347484e9             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                        ││││                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                        ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                        ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                        ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%                 ││││  0x00007f023474810d: vmovd  %xmm4,%r8d
                        ││││  0x00007f0234748112: mov    %r8d,(%rax,%rcx,1)
  0.57%                 │↘↘│  0x00007f0234748116: add    $0x2,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                        │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
                        │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                        │  │  0x00007f023474811a: cmp    0x70(%rsp),%r11d
                        │  ╰  0x00007f023474811f: jl     0x00007f02347480ac             ;*invokevirtual verticalSumBufferNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
                        │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                        ↘     0x00007f0234748121: mov    %rdi,%rdx
                              0x00007f0234748124: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                        ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@47 (line 153)
                                                                                        ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                              0x00007f0234748128: mov    0x18(%rsp),%rsi
....................................................................................................
 95.79%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.79%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (701 bytes) 
  2.53%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.28%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (3 bytes) 
  0.20%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (141 bytes) 
  0.12%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.10%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.10%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (27 bytes) 
  0.08%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (12 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%  libpthread-2.23.so  pthread_cond_timedwait@@GLIBC_2.3.2 (3 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.45%  <...other 23 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.09%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 
  3.26%   [kernel.kallsyms]  [unknown] 
  0.37%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.04%  libpthread-2.23.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.02%         interpreter  if_icmpne  160 if_icmpne  
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%           libjvm.so  _ZN2os5Posix24supports_monotonic_clockEv 
  0.02%           libjvm.so  _ZN17DependencyContext23mark_dependent_nmethodsER9DepChange 
  0.02%        libc-2.23.so  _int_free 
  0.02%         interpreter  nofast_putfield  235 nofast_putfield  
  0.02%           libjvm.so  _ZN15PerfLongVariant6sampleEv 
  0.02%  libpthread-2.23.so  pthread_mutex_lock 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.46%                  c2
  3.26%   [kernel.kallsyms]
  0.12%         interpreter
  0.06%           libjvm.so
  0.06%  libpthread-2.23.so
  0.02%        libc-2.23.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 53378 total address lines.
Perf output processed (skipped 6.648 seconds):
 Column 1: cycles (5089 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (532 bytes) 

                                                                                     ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007f12d0748897: cmp    $0x4,%ebp
                           0x00007f12d074889a: jl     0x00007f12d0748df6             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - java.nio.Buffer::checkIndex@11 (line 687)
                                                                                     ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007f12d07488a0: vmovd  %xmm4,%r10d
  0.06%                    0x00007f12d07488a5: mov    %r10d,(%rax,%r8,1)
                           0x00007f12d07488a9: add    $0x2,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007f12d07488ad: cmp    %esi,%r11d
         ╭                 0x00007f12d07488b0: jge    0x00007f12d07488bc             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@9 (line 149)
         │                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │                 0x00007f12d07488b2: vmovd  %xmm3,%r8d
         │                 0x00007f12d07488b7: jmpq   0x00007f12d074883b
         ↘                 0x00007f12d07488bc: mov    $0xfffffffc,%r8d
  0.02%                    0x00007f12d07488c2: sub    %ebx,%r8d
                           0x00007f12d07488c5: mov    $0xfffffffc,%ebx
                           0x00007f12d07488ca: sub    %ecx,%ebx
                           0x00007f12d07488cc: mov    $0xfffffffc,%ecx
  0.02%                    0x00007f12d07488d1: sub    %edx,%ecx
                           0x00007f12d07488d3: inc    %r8d
                           0x00007f12d07488d6: inc    %ecx
                           0x00007f12d07488d8: inc    %ebx
                           0x00007f12d07488da: cmp    %ebx,%r8d
  0.02%                    0x00007f12d07488dd: cmovg  %ebx,%r8d
                           0x00007f12d07488e1: cmp    %r8d,%ecx
                           0x00007f12d07488e4: cmovg  %r8d,%ecx
  0.08%                    0x00007f12d07488e8: cmp    0x70(%rsp),%ecx
                           0x00007f12d07488ec: mov    0x70(%rsp),%r10d
                           0x00007f12d07488f1: cmovg  %r10d,%ecx
                           0x00007f12d07488f5: mov    %ecx,%edx
  0.04%                    0x00007f12d07488f7: add    $0xfffffffa,%edx
                           0x00007f12d07488fa: cmp    %edx,%ecx
  0.04%                    0x00007f12d07488fc: mov    $0x80000000,%r10d
  0.02%                    0x00007f12d0748902: cmovl  %r10d,%edx
  0.04%                    0x00007f12d0748906: cmp    %edx,%r11d
          ╭                0x00007f12d0748909: jge    0x00007f12d0748a23
          │                0x00007f12d074890f: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
          │                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.14%   │        ↗↗      0x00007f12d0748910: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - java.nio.DirectByteBuffer::ix@5 (line 258)
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.77%   │        ││      0x00007f12d0748913: mov    (%r9,%rcx,1),%r10d
  0.79%   │        ││      0x00007f12d0748917: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.98%   │        ││      0x00007f12d074891c: vucomiss %xmm6,%xmm6
  1.16%   │╭       ││      0x00007f12d0748920: jp     0x00007f12d074894b
  2.12%   ││╭      ││      0x00007f12d0748922: jne    0x00007f12d074894b             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.40%   │││      ││      0x00007f12d0748924: mov    0x0(%r13,%rcx,1),%r8d
  1.89%   │││      ││      0x00007f12d0748929: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │││      ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.18%   │││      ││      0x00007f12d074892e: vucomiss %xmm4,%xmm4
  1.77%   │││      ││      0x00007f12d0748932: jp     0x00007f12d0748b28
  1.28%   │││      ││      0x00007f12d0748938: jne    0x00007f12d0748b28             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │││      ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.75%   │││      ││      0x00007f12d074893e: vaddss %xmm4,%xmm6,%xmm6
  1.18%   │││      ││      0x00007f12d0748942: vmovd  %xmm6,%r10d
  1.59%   │││      ││      0x00007f12d0748947: mov    %r10d,(%rax,%rcx,1)            ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
          │││      ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.34%   │↘↘      ││      0x00007f12d074894b: movslq %r11d,%r10
  1.75%   │        ││      0x00007f12d074894e: mov    %r13,%r8
  1.00%   │        ││      0x00007f12d0748951: add    %r10,%r8
  1.98%   │        ││      0x00007f12d0748954: mov    %r9,%rcx
  1.28%   │        ││      0x00007f12d0748957: add    %r10,%rcx
  1.65%   │        ││      0x00007f12d074895a: mov    %rax,%rbx
  1.28%   │        ││      0x00007f12d074895d: add    %r10,%rbx
  1.85%   │        ││      0x00007f12d0748960: mov    0x2(%rcx),%r10d
  1.12%   │        ││      0x00007f12d0748964: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.97%   │        ││      0x00007f12d0748969: vucomiss %xmm6,%xmm6
  1.36%   │  ╭     ││      0x00007f12d074896d: jp     0x00007f12d0748997
  1.91%   │  │╭    ││      0x00007f12d074896f: jne    0x00007f12d0748997             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.24%   │  ││    ││      0x00007f12d0748971: mov    0x2(%r8),%r10d
  1.93%   │  ││    ││      0x00007f12d0748975: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │  ││    ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.34%   │  ││    ││      0x00007f12d074897a: vucomiss %xmm4,%xmm4
  1.85%   │  ││    ││      0x00007f12d074897e: jp     0x00007f12d0748b1e
  1.32%   │  ││    ││      0x00007f12d0748984: jne    0x00007f12d0748b1e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │  ││    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.81%   │  ││    ││      0x00007f12d074898a: vaddss %xmm4,%xmm6,%xmm6
  1.04%   │  ││    ││      0x00007f12d074898e: vmovd  %xmm6,%r10d
  2.08%   │  ││    ││      0x00007f12d0748993: mov    %r10d,0x2(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
          │  ││    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.20%   │  ↘↘    ││      0x00007f12d0748997: mov    0x4(%rcx),%r10d
  1.75%   │        ││      0x00007f12d074899b: vmovd  %r10d,%xmm6                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.12%   │        ││      0x00007f12d07489a0: vucomiss %xmm6,%xmm6
  1.89%   │    ╭   ││      0x00007f12d07489a4: jp     0x00007f12d07489ce
  1.45%   │    │╭  ││      0x00007f12d07489a6: jne    0x00007f12d07489ce             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.93%   │    ││  ││      0x00007f12d07489a8: mov    0x4(%r8),%r10d
  1.04%   │    ││  ││      0x00007f12d07489ac: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │    ││  ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.97%   │    ││  ││      0x00007f12d07489b1: vucomiss %xmm4,%xmm4
  1.16%   │    ││  ││      0x00007f12d07489b5: jp     0x00007f12d0748b24
  1.73%   │    ││  ││      0x00007f12d07489bb: jne    0x00007f12d0748b24             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │    ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.92%   │    ││  ││      0x00007f12d07489c1: vaddss %xmm4,%xmm6,%xmm4
  1.65%   │    ││  ││      0x00007f12d07489c5: vmovd  %xmm4,%r10d
  1.26%   │    ││  ││      0x00007f12d07489ca: mov    %r10d,0x4(%rbx)                ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
          │    ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.61%   │    ↘↘  ││      0x00007f12d07489ce: mov    0x6(%rcx),%ecx
  1.20%   │        ││      0x00007f12d07489d1: vmovd  %ecx,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │        ││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.87%   │        ││      0x00007f12d07489d5: vucomiss %xmm6,%xmm6
  1.02%   │      ╭ ││      0x00007f12d07489d9: jp     0x00007f12d0748a03
  1.85%   │      │╭││      0x00007f12d07489db: jne    0x00007f12d0748a03             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.20%   │      ││││      0x00007f12d07489dd: mov    0x6(%r8),%r8d
  1.63%   │      ││││      0x00007f12d07489e1: vmovd  %r8d,%xmm4                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
          │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
          │      ││││                                                                ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.47%   │      ││││      0x00007f12d07489e6: vucomiss %xmm4,%xmm4
  2.10%   │      ││││      0x00007f12d07489ea: jp     0x00007f12d0748b1a
  1.38%   │      ││││      0x00007f12d07489f0: jne    0x00007f12d0748b1a             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │      ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
          │      ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.22%   │      ││││      0x00007f12d07489f6: vaddss %xmm4,%xmm6,%xmm4
  1.08%   │      ││││      0x00007f12d07489fa: vmovd  %xmm4,%r10d
  1.87%   │      ││││      0x00007f12d07489ff: mov    %r10d,0x6(%rbx)
  1.12%   │      ↘↘││      0x00007f12d0748a03: add    $0x8,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
          │        ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.95%   │        ││      0x00007f12d0748a07: cmp    %edx,%r11d
          │        ╰│      0x00007f12d0748a0a: jl     0x00007f12d0748910             ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │         │      0x00007f12d0748a10: mov    0x108(%r15),%r10               ; ImmutableOopMap{rdi=NarrowOop xmm0=Oop xmm1=Oop xmm2=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
          │         │                                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%   │         │      0x00007f12d0748a17: test   %eax,(%r10)                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
          │         │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │         │                                                                ;   {poll}
  0.08%   │         │      0x00007f12d0748a1a: cmp    %edx,%r11d
          │         ╰      0x00007f12d0748a1d: jl     0x00007f12d0748910
          ↘                0x00007f12d0748a23: cmp    0x70(%rsp),%r11d
                     ╭     0x00007f12d0748a28: jge    0x00007f12d0748aa1
                     │     0x00007f12d0748a2a: xchg   %ax,%ax                        ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                     │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@12 (line 150)
                     │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     │  ↗  0x00007f12d0748a2c: vmovd  %xmm5,%ebp
                     │  │  0x00007f12d0748a30: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%              │  │  0x00007f12d0748a33: cmp    $0x4,%ebp
                     │  │  0x00007f12d0748a36: jl     0x00007f12d0748d72             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     │  │  0x00007f12d0748a3c: vmovd  %xmm3,%ebp
                     │  │  0x00007f12d0748a40: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     │  │  0x00007f12d0748a43: movslq %r11d,%rcx                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 258)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@8 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%              │  │  0x00007f12d0748a46: mov    (%r9,%rcx,1),%r8d
                     │  │  0x00007f12d0748a4a: vmovd  %r8d,%xmm6                     ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@17 (line 150)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     │  │  0x00007f12d0748a4f: cmp    $0x4,%ebp
                     │  │  0x00007f12d0748a52: jl     0x00007f12d0748e5e             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                     │  │                                                            ; - java.nio.DirectByteBuffer::getFloat@5 (line 960)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%              │  │  0x00007f12d0748a58: vucomiss %xmm6,%xmm6
  0.10%              │╭ │  0x00007f12d0748a5c: jp     0x00007f12d0748a96
                     ││╭│  0x00007f12d0748a5e: jne    0x00007f12d0748a96             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@32 (line 152)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%              ││││  0x00007f12d0748a60: mov    0x0(%r13,%rcx,1),%r10d
                     ││││  0x00007f12d0748a65: vmovd  %r10d,%xmm4                    ;*invokestatic intBitsToFloat {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@14 (line 944)
                     ││││                                                            ; - java.nio.DirectByteBuffer::getFloat@11 (line 960)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@26 (line 151)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%              ││││  0x00007f12d0748a6a: vucomiss %xmm4,%xmm4
                     ││││  0x00007f12d0748a6e: jp     0x00007f12d0748e4f
                     ││││  0x00007f12d0748a74: jne    0x00007f12d0748e4f             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@40 (line 152)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%              ││││  0x00007f12d0748a7a: vaddss %xmm4,%xmm6,%xmm4              ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@54 (line 153)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%              ││││  0x00007f12d0748a7e: mov    %r14d,%ebp
  0.04%              ││││  0x00007f12d0748a81: sub    %r11d,%ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - java.nio.Buffer::checkIndex@10 (line 687)
                     ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     ││││  0x00007f12d0748a84: cmp    $0x4,%ebp
                     ││││  0x00007f12d0748a87: jl     0x00007f12d0748e69             ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                     ││││                                                            ; - java.nio.Buffer::checkIndex@11 (line 687)
                     ││││                                                            ; - java.nio.DirectByteBuffer::putFloat@5 (line 993)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@55 (line 153)
                     ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%              ││││  0x00007f12d0748a8d: vmovd  %xmm4,%r8d
  0.02%              ││││  0x00007f12d0748a92: mov    %r8d,(%rax,%rcx,1)
  0.08%              │↘↘│  0x00007f12d0748a96: add    $0x2,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@59 (line 149)
                     │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%              │  │  0x00007f12d0748a9a: cmp    0x70(%rsp),%r11d
                     │  ╰  0x00007f12d0748a9f: jl     0x00007f12d0748a2c             ;*invokevirtual verticalSumBufferNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
                     │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                     ↘     0x00007f12d0748aa1: mov    %rdi,%rdx
                           0x00007f12d0748aa4: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@47 (line 153)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007f12d0748aa8: mov    0x18(%rsp),%rsi
                           0x00007f12d0748aad: xchg   %ax,%ax
                           0x00007f12d0748aaf: callq  0x00007f12d06bf900             ; ImmutableOopMap{[120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                     ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
                                                                                     ;   {optimized virtual_call}
  0.06%                    0x00007f12d0748ab4: mov    0x78(%rsp),%rdx
  0.02%                    0x00007f12d0748ab9: movzbl 0x94(%rdx),%r8d                ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumBufferNaNCheckPessimistic@62 (line 149)
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                           0x00007f12d0748ac1: mov    0x108(%r15),%r9
                           0x00007f12d0748ac8: mov    0x10(%rsp),%rbx
                           0x00007f12d0748acd: add    $0x1,%rbx                      ; ImmutableOopMap{rdx=Oop [120]=Oop [128]=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                                     ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                                     ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
                           0x00007f12d0748ad1: test   %eax,(%r9)                     ;   {poll}
                           0x00007f12d0748ad4: test   %r8d,%r8d
                           0x00007f12d0748ad7: je     0x00007f12d07486e3             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 95.76%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.76%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (532 bytes) 
  2.42%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.57%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (215 bytes) 
  0.18%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.16%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 (65 bytes) 
  0.14%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (64 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (13 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (1 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (12 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 (9 bytes) 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm (8 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.33%  <...other 17 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.50%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumBufferNaNCheckPessimistic_jmhTest::verticalSumBufferNaNCheckPessimistic_thrpt_jmhStub, version 145 
  3.09%   [kernel.kallsyms]  [unknown] 
  0.16%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 142 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%         interpreter  iconst_0  3 iconst_0  
  0.02%        libc-2.23.so  _itoa_word 
  0.02%         interpreter  invoke return entry points  
  0.02%         interpreter  iload_1  27 iload_1  
  0.02%         interpreter  method entry point (kind = native)  
  0.02%           libjvm.so  _ZN2os13PlatformEvent4parkEl 
  0.02%        libc-2.23.so  vfprintf 
  0.02%         interpreter  ireturn  172 ireturn  
  0.02%  libpthread-2.23.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.02%           libjvm.so  _ZN9CodeCache9find_blobEPv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.66%                  c2
  3.09%   [kernel.kallsyms]
  0.10%         interpreter
  0.08%           libjvm.so
  0.04%        libc-2.23.so
  0.02%  libpthread-2.23.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckOptimistic
# Parameters: (probabilityOfNaN = 0, size = 1024)

# Run progress: 44.44% complete, ETA 00:09:00
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1358.624 ops/ms
# Warmup Iteration   2: 1390.965 ops/ms
# Warmup Iteration   3: 1371.190 ops/ms
# Warmup Iteration   4: 1374.652 ops/ms
# Warmup Iteration   5: 1385.494 ops/ms
Iteration   1: 1383.227 ops/ms
Iteration   2: 1378.871 ops/ms
Iteration   3: 1378.713 ops/ms
Iteration   4: 1375.451 ops/ms
Iteration   5: 1376.922 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 45.68% complete, ETA 00:08:48
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1372.110 ops/ms
# Warmup Iteration   2: 1392.613 ops/ms
# Warmup Iteration   3: 1369.761 ops/ms
# Warmup Iteration   4: 1360.163 ops/ms
# Warmup Iteration   5: 1352.879 ops/ms
Iteration   1: 1354.681 ops/ms
Iteration   2: 1359.732 ops/ms
Iteration   3: 1365.756 ops/ms
Iteration   4: 1370.576 ops/ms
Iteration   5: 1357.439 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 46.91% complete, ETA 00:08:36
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1334.775 ops/ms
# Warmup Iteration   2: 1368.070 ops/ms
# Warmup Iteration   3: 1385.181 ops/ms
# Warmup Iteration   4: 1331.368 ops/ms
# Warmup Iteration   5: 1374.158 ops/ms
Iteration   1: 1398.353 ops/ms
Iteration   2: 1372.966 ops/ms
Iteration   3: 1378.333 ops/ms
Iteration   4: 1370.550 ops/ms
Iteration   5: 1380.875 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckOptimistic":
  1373.496 ±(99.9%) 11.921 ops/ms [Average]
  (min, avg, max) = (1354.681, 1373.496, 1398.353), stdev = 11.151
  CI (99.9%): [1361.576, 1385.417] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckOptimistic:·asm":
PrintAssembly processed: 51273 total address lines.
Perf output processed (skipped 6.623 seconds):
 Column 1: cycles (5093 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (282 bytes) 

               0x00007f0edc73fd1c: mov    $0x80000000,%r11d
               0x00007f0edc73fd22: cmovl  %r11d,%esi
               0x00007f0edc73fd26: shl    $0x3,%rdi
               0x00007f0edc73fd2a: lea    (%r12,%r9,8),%rdx
               0x00007f0edc73fd2e: lea    (%r12,%r10,8),%rax
               0x00007f0edc73fd32: cmp    $0x1,%esi
               0x00007f0edc73fd35: jle    0x00007f0edc73ff96
               0x00007f0edc73fd3b: mov    $0x1,%r11d                     ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.57%  ↗↗    0x00007f0edc73fd41: vmovss 0x10(%rdx,%r11,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.22%  ││    0x00007f0edc73fd48: vucomiss %xmm0,%xmm0
  1.53%  ││    0x00007f0edc73fd4c: jp     0x00007f0edc73febd
  6.75%  ││    0x00007f0edc73fd52: jne    0x00007f0edc73febd             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.24%  ││    0x00007f0edc73fd58: vaddss 0x10(%rdi,%r11,4),%xmm0,%xmm1
  4.54%  ││    0x00007f0edc73fd5f: vmovss %xmm1,0x10(%rax,%r11,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.91%  ││    0x00007f0edc73fd66: vmovss 0x14(%rdx,%r11,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.36%  ││    0x00007f0edc73fd6d: vucomiss %xmm0,%xmm0
  2.81%  ││    0x00007f0edc73fd71: jp     0x00007f0edc73feae
  2.24%  ││    0x00007f0edc73fd77: jne    0x00007f0edc73feae             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.66%  ││    0x00007f0edc73fd7d: vaddss 0x14(%rdi,%r11,4),%xmm0,%xmm1
  4.50%  ││    0x00007f0edc73fd84: vmovss %xmm1,0x14(%rax,%r11,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.10%  ││    0x00007f0edc73fd8b: vmovss 0x18(%rdx,%r11,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.28%  ││    0x00007f0edc73fd92: vucomiss %xmm0,%xmm0
  1.14%  ││    0x00007f0edc73fd96: jp     0x00007f0edc73feb3
  3.81%  ││    0x00007f0edc73fd9c: jne    0x00007f0edc73feb3             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.67%  ││    0x00007f0edc73fda2: vaddss 0x18(%rdi,%r11,4),%xmm0,%xmm1
  6.36%  ││    0x00007f0edc73fda9: vmovss %xmm1,0x18(%rax,%r11,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.83%  ││    0x00007f0edc73fdb0: vmovss 0x1c(%rdx,%r11,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.59%  ││    0x00007f0edc73fdb7: vucomiss %xmm0,%xmm0
  5.09%  ││    0x00007f0edc73fdbb: jp     0x00007f0edc73feb9
  1.71%  ││    0x00007f0edc73fdc1: jne    0x00007f0edc73feb9             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.46%  ││    0x00007f0edc73fdc7: vaddss 0x1c(%rdi,%r11,4),%xmm0,%xmm1
  6.48%  ││    0x00007f0edc73fdce: vmovss %xmm1,0x1c(%rax,%r11,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.02%  ││    0x00007f0edc73fdd5: add    $0x4,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.01%  ││    0x00007f0edc73fdd9: cmp    %esi,%r11d
         ╰│    0x00007f0edc73fddc: jl     0x00007f0edc73fd41             ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
          │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.06%   │    0x00007f0edc73fde2: mov    0x108(%r15),%r13               ; ImmutableOopMap{r10=NarrowOop r8=Oop rdi=Oop rdx=Oop rax=Oop [88]=Oop [96]=Oop [104]=Oop [8]=Oop }
          │                                                              ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
          │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.49%   │    0x00007f0edc73fde9: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
          │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │                                                              ;   {poll}
  0.33%   │    0x00007f0edc73fded: cmp    %esi,%r11d
          ╰    0x00007f0edc73fdf0: jl     0x00007f0edc73fd41
               0x00007f0edc73fdf6: cmp    %ebp,%r11d
           ╭   0x00007f0edc73fdf9: jge    0x00007f0edc73fe29
           │   0x00007f0edc73fdfb: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
           │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           │↗  0x00007f0edc73fdfc: vmovss 0x10(%rdx,%r11,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%    ││  0x00007f0edc73fe03: vucomiss %xmm0,%xmm0
           ││  0x00007f0edc73fe07: jp     0x00007f0edc73febd
           ││  0x00007f0edc73fe0d: jne    0x00007f0edc73febd             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.08%    ││  0x00007f0edc73fe13: vaddss 0x10(%rdi,%r11,4),%xmm0,%xmm1
  0.12%    ││  0x00007f0edc73fe1a: vmovss %xmm1,0x10(%rax,%r11,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.18%    ││  0x00007f0edc73fe21: inc    %r11d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007f0edc73fe24: cmp    %ebp,%r11d
           │╰  0x00007f0edc73fe27: jl     0x00007f0edc73fdfc             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@7 (line 125)
           │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ↘   0x00007f0edc73fe29: mov    %r8,%rbp
  0.02%        0x00007f0edc73fe2c: mov    %rbx,0x50(%rsp)                ;*invokevirtual verticalSumNaNCheckOptimistic {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               0x00007f0edc73fe31: mov    %r10,%rdx
               0x00007f0edc73fe34: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@84 (line 133)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               0x00007f0edc73fe38: mov    0x8(%rsp),%rsi
               0x00007f0edc73fe3d: xchg   %ax,%ax
  0.02%        0x00007f0edc73fe3f: callq  0x00007f0edc6bf900             ; ImmutableOopMap{rbp=Oop [88]=Oop [96]=Oop [104]=Oop [8]=Oop }
                                                                         ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
                                                                         ;   {optimized virtual_call}
               0x00007f0edc73fe44: mov    %rbp,%r8
  0.12%        0x00007f0edc73fe47: movzbl 0x94(%rbp),%r10d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               0x00007f0edc73fe4f: mov    0x108(%r15),%r11
               0x00007f0edc73fe56: mov    0x50(%rsp),%rbx
  0.04%        0x00007f0edc73fe5b: add    $0x1,%rbx                      ; ImmutableOopMap{r8=Oop rbp=Oop [88]=Oop [96]=Oop [104]=Oop [8]=Oop }
                                                                         ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
               0x00007f0edc73fe5f: test   %eax,(%r11)                    ;   {poll}
               0x00007f0edc73fe62: test   %r10d,%r10d
               0x00007f0edc73fe65: je     0x00007f0edc73fc72             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
               0x00007f0edc73fe6b: jmpq   0x00007f0edc73ff08
               0x00007f0edc73fe70: inc    %r11d
               0x00007f0edc73fe73: jmp    0x00007f0edc73fe7f
               0x00007f0edc73fe75: add    $0x2,%r11d
....................................................................................................
 95.35%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.35%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (282 bytes) 
  2.61%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.84%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (65 bytes) 
  0.31%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (79 bytes) 
  0.27%   [kernel.kallsyms]  [unknown] (41 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (20 bytes) 
  0.06%         interpreter  method entry point (kind = zerolocals)  (4 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (1 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.12%  <...other 6 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.72%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 
  3.24%   [kernel.kallsyms]  [unknown] 
  0.84%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  istore  54 istore  
  0.02%         interpreter  nofast_getfield  234 nofast_getfield  
  0.02%           libjvm.so  jni_GetObjectClass 
  0.02%           libjvm.so  _ZN10Reflection13invoke_methodEP7oopDesc6Handle14objArrayHandleP6Thread 
  0.02%         interpreter  new  187 new  
  0.02%  libpthread-2.23.so  pthread_cond_signal@@GLIBC_2.3.2 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.56%                  c2
  3.24%   [kernel.kallsyms]
  0.12%         interpreter
  0.04%           libjvm.so
  0.02%  libpthread-2.23.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51295 total address lines.
Perf output processed (skipped 6.604 seconds):
 Column 1: cycles (5055 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (484 bytes) 

                0x00007fe62873fb58: mov    (%rsp),%r8
                0x00007fe62873fb5c: movzbl 0x94(%r8),%r11d                ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@32 (line 147)
                                                                          ; implicit exception: dispatches to 0x00007fe62873feee
                0x00007fe62873fb64: test   %r11d,%r11d
                0x00007fe62873fb67: jne    0x00007fe62873fe03             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
                0x00007fe62873fb6d: mov    $0x1,%ebx                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@38 (line 148)
             ↗  0x00007fe62873fb72: mov    0x60(%rsp),%r10
  0.04%      │  0x00007fe62873fb77: mov    0xc(%r10),%ebp                 ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@4 (line 125)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fe62873fb7b: mov    0x20(%r10),%r10d               ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@84 (line 133)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%      │  0x00007fe62873fb7f: test   %ebp,%ebp
             │  0x00007fe62873fb81: jle    0x00007fe62873fdf6             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@7 (line 125)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fe62873fb87: mov    0x60(%rsp),%r11
  0.02%      │  0x00007fe62873fb8c: mov    0x18(%r11),%r9d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@11 (line 126)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fe62873fb90: mov    0xc(%r12,%r9,8),%r11d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │                                                            ; implicit exception: dispatches to 0x00007fe62873fe7d
             │  0x00007fe62873fb95: test   %r11d,%r11d
             │  0x00007fe62873fb98: jbe    0x00007fe62873fe7d
             │  0x00007fe62873fb9e: movslq %ebp,%rdx
  0.04%      │  0x00007fe62873fba1: movslq %r11d,%r11
             │  0x00007fe62873fba4: dec    %rdx
             │  0x00007fe62873fba7: cmp    %r11,%rdx
             │  0x00007fe62873fbaa: jae    0x00007fe62873fe7d
             │  0x00007fe62873fbb0: mov    0x60(%rsp),%r11
  0.06%      │  0x00007fe62873fbb5: mov    0x1c(%r11),%edi                ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@95 (line 133)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fe62873fbb9: mov    0xc(%r12,%rdi,8),%ecx          ;*faload {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@99 (line 133)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │                                                            ; implicit exception: dispatches to 0x00007fe62873fe7d
             │  0x00007fe62873fbbe: test   %ecx,%ecx
             │  0x00007fe62873fbc0: jbe    0x00007fe62873fe7d
  0.04%      │  0x00007fe62873fbc6: movslq %ecx,%r11
             │  0x00007fe62873fbc9: cmp    %r11,%rdx
             │  0x00007fe62873fbcc: jae    0x00007fe62873fe7d
             │  0x00007fe62873fbd2: mov    0xc(%r12,%r10,8),%r11d         ;*fastore {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │                                                            ; implicit exception: dispatches to 0x00007fe62873fe7d
             │  0x00007fe62873fbd7: test   %r11d,%r11d
             │  0x00007fe62873fbda: jbe    0x00007fe62873fe7d
  0.06%      │  0x00007fe62873fbe0: movslq %r11d,%r11
             │  0x00007fe62873fbe3: cmp    %r11,%rdx
             │  0x00007fe62873fbe6: jae    0x00007fe62873fe7d
             │  0x00007fe62873fbec: vmovss 0x10(%r12,%r9,8),%xmm0         ;*faload {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fe62873fbf3: vucomiss %xmm0,%xmm0
  0.06%      │  0x00007fe62873fbf7: jp     0x00007fe62873feb6
             │  0x00007fe62873fbfd: jne    0x00007fe62873feb6             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.lang.Float::isNaN@3 (line 467)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fe62873fc03: vmovss 0x10(%r12,%rdi,8),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@99 (line 133)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fe62873fc0a: vaddss %xmm0,%xmm1,%xmm1
  0.08%      │  0x00007fe62873fc0e: vmovss %xmm1,0x10(%r12,%r10,8)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fe62873fc15: mov    %ebp,%esi
             │  0x00007fe62873fc17: add    $0xfffffffd,%esi
             │  0x00007fe62873fc1a: cmp    %esi,%ebp
  0.06%      │  0x00007fe62873fc1c: mov    $0x80000000,%r11d
             │  0x00007fe62873fc22: cmovl  %r11d,%esi
             │  0x00007fe62873fc26: shl    $0x3,%rdi
             │  0x00007fe62873fc2a: lea    (%r12,%r9,8),%rdx
  0.02%      │  0x00007fe62873fc2e: lea    (%r12,%r10,8),%rax
             │  0x00007fe62873fc32: cmp    $0x1,%esi
             │  0x00007fe62873fc35: jle    0x00007fe62873fe96
             │  0x00007fe62873fc3b: mov    $0x1,%r11d                     ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.64%  ↗↗  │  0x00007fe62873fc41: vmovss 0x10(%rdx,%r11,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.85%  ││  │  0x00007fe62873fc48: vucomiss %xmm0,%xmm0
  1.66%  ││  │  0x00007fe62873fc4c: jp     0x00007fe62873fdbd
  7.06%  ││  │  0x00007fe62873fc52: jne    0x00007fe62873fdbd             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.26%  ││  │  0x00007fe62873fc58: vaddss 0x10(%rdi,%r11,4),%xmm0,%xmm1
  4.45%  ││  │  0x00007fe62873fc5f: vmovss %xmm1,0x10(%rax,%r11,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.79%  ││  │  0x00007fe62873fc66: vmovss 0x14(%rdx,%r11,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.51%  ││  │  0x00007fe62873fc6d: vucomiss %xmm0,%xmm0
  3.24%  ││  │  0x00007fe62873fc71: jp     0x00007fe62873fdae
  1.94%  ││  │  0x00007fe62873fc77: jne    0x00007fe62873fdae             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  7.10%  ││  │  0x00007fe62873fc7d: vaddss 0x14(%rdi,%r11,4),%xmm0,%xmm1
  4.53%  ││  │  0x00007fe62873fc84: vmovss %xmm1,0x14(%rax,%r11,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.24%  ││  │  0x00007fe62873fc8b: vmovss 0x18(%rdx,%r11,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.04%  ││  │  0x00007fe62873fc92: vucomiss %xmm0,%xmm0
  1.36%  ││  │  0x00007fe62873fc96: jp     0x00007fe62873fdb3
  3.62%  ││  │  0x00007fe62873fc9c: jne    0x00007fe62873fdb3             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.90%  ││  │  0x00007fe62873fca2: vaddss 0x18(%rdi,%r11,4),%xmm0,%xmm1
  5.93%  ││  │  0x00007fe62873fca9: vmovss %xmm1,0x18(%rax,%r11,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.39%  ││  │  0x00007fe62873fcb0: vmovss 0x1c(%rdx,%r11,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.80%  ││  │  0x00007fe62873fcb7: vucomiss %xmm0,%xmm0
  4.95%  ││  │  0x00007fe62873fcbb: jp     0x00007fe62873fdb9
  1.80%  ││  │  0x00007fe62873fcc1: jne    0x00007fe62873fdb9             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.82%  ││  │  0x00007fe62873fcc7: vaddss 0x1c(%rdi,%r11,4),%xmm0,%xmm1
  5.93%  ││  │  0x00007fe62873fcce: vmovss %xmm1,0x1c(%rax,%r11,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.02%  ││  │  0x00007fe62873fcd5: add    $0x4,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.50%  ││  │  0x00007fe62873fcd9: cmp    %esi,%r11d
         ╰│  │  0x00007fe62873fcdc: jl     0x00007fe62873fc41             ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
          │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.14%   │  │  0x00007fe62873fce2: mov    0x108(%r15),%r13               ; ImmutableOopMap{r10=NarrowOop r8=Oop rdi=Oop rdx=Oop rax=Oop [88]=Oop [96]=Oop [104]=Oop [8]=Oop }
          │  │                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
          │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.44%   │  │  0x00007fe62873fce9: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
          │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │  │                                                            ;   {poll}
  0.26%   │  │  0x00007fe62873fced: cmp    %esi,%r11d
          ╰  │  0x00007fe62873fcf0: jl     0x00007fe62873fc41
             │  0x00007fe62873fcf6: cmp    %ebp,%r11d
           ╭ │  0x00007fe62873fcf9: jge    0x00007fe62873fd29
           │ │  0x00007fe62873fcfb: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
           │ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           │↗│  0x00007fe62873fcfc: vmovss 0x10(%rdx,%r11,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%    │││  0x00007fe62873fd03: vucomiss %xmm0,%xmm0
  0.06%    │││  0x00007fe62873fd07: jp     0x00007fe62873fdbd
           │││  0x00007fe62873fd0d: jne    0x00007fe62873fdbd             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
           │││                                                            ; - java.lang.Float::isNaN@3 (line 467)
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.06%    │││  0x00007fe62873fd13: vaddss 0x10(%rdi,%r11,4),%xmm0,%xmm1
  0.16%    │││  0x00007fe62873fd1a: vmovss %xmm1,0x10(%rax,%r11,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%    │││  0x00007fe62873fd21: inc    %r11d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           │││  0x00007fe62873fd24: cmp    %ebp,%r11d
           │╰│  0x00007fe62873fd27: jl     0x00007fe62873fcfc             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@7 (line 125)
           │ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ↘ │  0x00007fe62873fd29: mov    %r8,%rbp
             │  0x00007fe62873fd2c: mov    %rbx,0x50(%rsp)                ;*invokevirtual verticalSumNaNCheckOptimistic {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fe62873fd31: mov    %r10,%rdx
             │  0x00007fe62873fd34: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@84 (line 133)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fe62873fd38: mov    0x8(%rsp),%rsi
             │  0x00007fe62873fd3d: xchg   %ax,%ax
  0.02%      │  0x00007fe62873fd3f: callq  0x00007fe6286bf900             ; ImmutableOopMap{rbp=Oop [88]=Oop [96]=Oop [104]=Oop [8]=Oop }
             │                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
             │                                                            ;   {optimized virtual_call}
  0.02%      │  0x00007fe62873fd44: mov    %rbp,%r8
             │  0x00007fe62873fd47: movzbl 0x94(%rbp),%r10d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fe62873fd4f: mov    0x108(%r15),%r11
             │  0x00007fe62873fd56: mov    0x50(%rsp),%rbx
  0.06%      │  0x00007fe62873fd5b: add    $0x1,%rbx                      ; ImmutableOopMap{r8=Oop rbp=Oop [88]=Oop [96]=Oop [104]=Oop [8]=Oop }
             │                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
             │  0x00007fe62873fd5f: test   %eax,(%r11)                    ;   {poll}
             │  0x00007fe62873fd62: test   %r10d,%r10d
             ╰  0x00007fe62873fd65: je     0x00007fe62873fb72             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
                0x00007fe62873fd6b: jmpq   0x00007fe62873fe08
                0x00007fe62873fd70: inc    %r11d
                0x00007fe62873fd73: jmp    0x00007fe62873fd7f
                0x00007fe62873fd75: add    $0x2,%r11d
....................................................................................................
 96.10%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (484 bytes) 
  1.88%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.79%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (58 bytes) 
  0.40%   [kernel.kallsyms]  [unknown] (41 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (9 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  invokevirtual  182 invokevirtual  (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.40%  <...other 20 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 
  2.83%   [kernel.kallsyms]  [unknown] 
  0.79%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.06%         interpreter  invokevirtual  182 invokevirtual  
  0.02%           libjvm.so  _ZNK15ClassFileParser29verify_legal_method_signatureEPK6SymbolS2_P6Thread 
  0.02%         interpreter  aload_2  44 aload_2  
  0.02%        libc-2.23.so  _int_free 
  0.02%           libjvm.so  _ZNK6Symbol22as_klass_external_nameEv 
  0.02%           libjvm.so  _ZNK13WatcherThread5sleepEv 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  new  187 new  
  0.02%        libc-2.23.so  free 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%           libjvm.so  _ZN27G1YoungRemSetSamplingThread11run_serviceEv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.89%                  c2
  2.83%   [kernel.kallsyms]
  0.12%         interpreter
  0.10%           libjvm.so
  0.04%        libc-2.23.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51279 total address lines.
Perf output processed (skipped 6.617 seconds):
 Column 1: cycles (5090 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (484 bytes) 

                0x00007fb2887410d8: mov    (%rsp),%r8
                0x00007fb2887410dc: movzbl 0x94(%r8),%r11d                ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@32 (line 147)
                                                                          ; implicit exception: dispatches to 0x00007fb28874146e
                0x00007fb2887410e4: test   %r11d,%r11d
                0x00007fb2887410e7: jne    0x00007fb288741383             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
                0x00007fb2887410ed: mov    $0x1,%ebx                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@38 (line 148)
             ↗  0x00007fb2887410f2: mov    0x60(%rsp),%r10
  0.06%      │  0x00007fb2887410f7: mov    0xc(%r10),%ebp                 ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@4 (line 125)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%      │  0x00007fb2887410fb: mov    0x20(%r10),%r10d               ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@84 (line 133)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fb2887410ff: test   %ebp,%ebp
             │  0x00007fb288741101: jle    0x00007fb288741376             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@7 (line 125)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fb288741107: mov    0x60(%rsp),%r11
  0.04%      │  0x00007fb28874110c: mov    0x18(%r11),%r9d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@11 (line 126)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fb288741110: mov    0xc(%r12,%r9,8),%r11d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │                                                            ; implicit exception: dispatches to 0x00007fb2887413fd
             │  0x00007fb288741115: test   %r11d,%r11d
             │  0x00007fb288741118: jbe    0x00007fb2887413fd
             │  0x00007fb28874111e: movslq %ebp,%rdx
  0.08%      │  0x00007fb288741121: movslq %r11d,%r11
             │  0x00007fb288741124: dec    %rdx
             │  0x00007fb288741127: cmp    %r11,%rdx
             │  0x00007fb28874112a: jae    0x00007fb2887413fd
             │  0x00007fb288741130: mov    0x60(%rsp),%r11
  0.04%      │  0x00007fb288741135: mov    0x1c(%r11),%edi                ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@95 (line 133)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fb288741139: mov    0xc(%r12,%rdi,8),%ecx          ;*faload {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@99 (line 133)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │                                                            ; implicit exception: dispatches to 0x00007fb2887413fd
             │  0x00007fb28874113e: test   %ecx,%ecx
             │  0x00007fb288741140: jbe    0x00007fb2887413fd
  0.04%      │  0x00007fb288741146: movslq %ecx,%r11
             │  0x00007fb288741149: cmp    %r11,%rdx
             │  0x00007fb28874114c: jae    0x00007fb2887413fd
             │  0x00007fb288741152: mov    0xc(%r12,%r10,8),%r11d         ;*fastore {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │                                                            ; implicit exception: dispatches to 0x00007fb2887413fd
             │  0x00007fb288741157: test   %r11d,%r11d
             │  0x00007fb28874115a: jbe    0x00007fb2887413fd
  0.04%      │  0x00007fb288741160: movslq %r11d,%r11
             │  0x00007fb288741163: cmp    %r11,%rdx
             │  0x00007fb288741166: jae    0x00007fb2887413fd
             │  0x00007fb28874116c: vmovss 0x10(%r12,%r9,8),%xmm0         ;*faload {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fb288741173: vucomiss %xmm0,%xmm0
  0.04%      │  0x00007fb288741177: jp     0x00007fb288741436
             │  0x00007fb28874117d: jne    0x00007fb288741436             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - java.lang.Float::isNaN@3 (line 467)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fb288741183: vmovss 0x10(%r12,%rdi,8),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@99 (line 133)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%      │  0x00007fb28874118a: vaddss %xmm0,%xmm1,%xmm1
  0.04%      │  0x00007fb28874118e: vmovss %xmm1,0x10(%r12,%r10,8)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fb288741195: mov    %ebp,%esi
             │  0x00007fb288741197: add    $0xfffffffd,%esi
             │  0x00007fb28874119a: cmp    %esi,%ebp
             │  0x00007fb28874119c: mov    $0x80000000,%r11d
             │  0x00007fb2887411a2: cmovl  %r11d,%esi
             │  0x00007fb2887411a6: shl    $0x3,%rdi
             │  0x00007fb2887411aa: lea    (%r12,%r9,8),%rdx
  0.06%      │  0x00007fb2887411ae: lea    (%r12,%r10,8),%rax
             │  0x00007fb2887411b2: cmp    $0x1,%esi
             │  0x00007fb2887411b5: jle    0x00007fb288741416
             │  0x00007fb2887411bb: mov    $0x1,%r11d                     ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.55%  ↗↗  │  0x00007fb2887411c1: vmovss 0x10(%rdx,%r11,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.48%  ││  │  0x00007fb2887411c8: vucomiss %xmm0,%xmm0
  2.08%  ││  │  0x00007fb2887411cc: jp     0x00007fb28874133d
  6.01%  ││  │  0x00007fb2887411d2: jne    0x00007fb28874133d             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.20%  ││  │  0x00007fb2887411d8: vaddss 0x10(%rdi,%r11,4),%xmm0,%xmm1
  5.09%  ││  │  0x00007fb2887411df: vmovss %xmm1,0x10(%rax,%r11,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.66%  ││  │  0x00007fb2887411e6: vmovss 0x14(%rdx,%r11,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.38%  ││  │  0x00007fb2887411ed: vucomiss %xmm0,%xmm0
  2.93%  ││  │  0x00007fb2887411f1: jp     0x00007fb28874132e
  2.22%  ││  │  0x00007fb2887411f7: jne    0x00007fb28874132e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  7.37%  ││  │  0x00007fb2887411fd: vaddss 0x14(%rdi,%r11,4),%xmm0,%xmm1
  4.24%  ││  │  0x00007fb288741204: vmovss %xmm1,0x14(%rax,%r11,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.44%  ││  │  0x00007fb28874120b: vmovss 0x18(%rdx,%r11,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.19%  ││  │  0x00007fb288741212: vucomiss %xmm0,%xmm0
  1.26%  ││  │  0x00007fb288741216: jp     0x00007fb288741333
  3.83%  ││  │  0x00007fb28874121c: jne    0x00007fb288741333             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.94%  ││  │  0x00007fb288741222: vaddss 0x18(%rdi,%r11,4),%xmm0,%xmm1
  5.99%  ││  │  0x00007fb288741229: vmovss %xmm1,0x18(%rax,%r11,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.67%  ││  │  0x00007fb288741230: vmovss 0x1c(%rdx,%r11,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.71%  ││  │  0x00007fb288741237: vucomiss %xmm0,%xmm0
  4.66%  ││  │  0x00007fb28874123b: jp     0x00007fb288741339
  1.61%  ││  │  0x00007fb288741241: jne    0x00007fb288741339             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.60%  ││  │  0x00007fb288741247: vaddss 0x1c(%rdi,%r11,4),%xmm0,%xmm1
  7.31%  ││  │  0x00007fb28874124e: vmovss %xmm1,0x1c(%rax,%r11,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.87%  ││  │  0x00007fb288741255: add    $0x4,%r11d                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
         ││  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.34%  ││  │  0x00007fb288741259: cmp    %esi,%r11d
         ╰│  │  0x00007fb28874125c: jl     0x00007fb2887411c1             ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
          │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%   │  │  0x00007fb288741262: mov    0x108(%r15),%r13               ; ImmutableOopMap{r10=NarrowOop r8=Oop rdi=Oop rdx=Oop rax=Oop [88]=Oop [96]=Oop [104]=Oop [8]=Oop }
          │  │                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
          │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.49%   │  │  0x00007fb288741269: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
          │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │  │                                                            ;   {poll}
  0.18%   │  │  0x00007fb28874126d: cmp    %esi,%r11d
          ╰  │  0x00007fb288741270: jl     0x00007fb2887411c1
             │  0x00007fb288741276: cmp    %ebp,%r11d
           ╭ │  0x00007fb288741279: jge    0x00007fb2887412a9
           │ │  0x00007fb28874127b: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
           │ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           │↗│  0x00007fb28874127c: vmovss 0x10(%rdx,%r11,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.14%    │││  0x00007fb288741283: vucomiss %xmm0,%xmm0
  0.04%    │││  0x00007fb288741287: jp     0x00007fb28874133d
           │││  0x00007fb28874128d: jne    0x00007fb28874133d             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
           │││                                                            ; - java.lang.Float::isNaN@3 (line 467)
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.10%    │││  0x00007fb288741293: vaddss 0x10(%rdi,%r11,4),%xmm0,%xmm1
  0.33%    │││  0x00007fb28874129a: vmovss %xmm1,0x10(%rax,%r11,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.10%    │││  0x00007fb2887412a1: inc    %r11d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
           │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           │││  0x00007fb2887412a4: cmp    %ebp,%r11d
           │╰│  0x00007fb2887412a7: jl     0x00007fb28874127c             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@7 (line 125)
           │ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ↘ │  0x00007fb2887412a9: mov    %r8,%rbp
             │  0x00007fb2887412ac: mov    %rbx,0x50(%rsp)                ;*invokevirtual verticalSumNaNCheckOptimistic {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fb2887412b1: mov    %r10,%rdx
             │  0x00007fb2887412b4: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@84 (line 133)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fb2887412b8: mov    0x8(%rsp),%rsi
  0.08%      │  0x00007fb2887412bd: xchg   %ax,%ax
             │  0x00007fb2887412bf: callq  0x00007fb2886bf900             ; ImmutableOopMap{rbp=Oop [88]=Oop [96]=Oop [104]=Oop [8]=Oop }
             │                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
             │                                                            ;   {optimized virtual_call}
             │  0x00007fb2887412c4: mov    %rbp,%r8
  0.08%      │  0x00007fb2887412c7: movzbl 0x94(%rbp),%r10d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
             │  0x00007fb2887412cf: mov    0x108(%r15),%r11
             │  0x00007fb2887412d6: mov    0x50(%rsp),%rbx
  0.10%      │  0x00007fb2887412db: add    $0x1,%rbx                      ; ImmutableOopMap{r8=Oop rbp=Oop [88]=Oop [96]=Oop [104]=Oop [8]=Oop }
             │                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
             │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
             │  0x00007fb2887412df: test   %eax,(%r11)                    ;   {poll}
             │  0x00007fb2887412e2: test   %r10d,%r10d
             ╰  0x00007fb2887412e5: je     0x00007fb2887410f2             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
                0x00007fb2887412eb: jmpq   0x00007fb288741388
                0x00007fb2887412f0: inc    %r11d
                0x00007fb2887412f3: jmp    0x00007fb2887412ff
                0x00007fb2887412f5: add    $0x2,%r11d
....................................................................................................
 95.76%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.76%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (484 bytes) 
  2.83%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.83%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (58 bytes) 
  0.14%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (2 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  invoke return entry points  (0 bytes) 
  0.02%         interpreter  method entry point (kind = native)  (0 bytes) 
  0.02%         interpreter  nofast_getfield  234 nofast_getfield  (0 bytes) 
  0.02%           libjvm.so  _ZN10JNIHandles10make_localEP7JNIEnv_P7oopDesc (0 bytes) 
  0.04%  <...other 2 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.76%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 
  3.28%   [kernel.kallsyms]  [unknown] 
  0.83%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.02%         interpreter  nofast_getfield  234 nofast_getfield  
  0.02%           libjvm.so  _ZN10JNIHandles10make_localEP7JNIEnv_P7oopDesc 
  0.02%         interpreter  invoke return entry points  
  0.02%           libjvm.so  _ZN14MethodCounters8allocateERK12methodHandleP6Thread 
  0.02%         interpreter  method entry point (kind = native)  
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.58%                  c2
  3.28%   [kernel.kallsyms]
  0.06%           libjvm.so
  0.06%         interpreter
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckOptimistic
# Parameters: (probabilityOfNaN = 0.001, size = 1024)

# Run progress: 48.15% complete, ETA 00:08:24
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1063.642 ops/ms
# Warmup Iteration   2: 1154.110 ops/ms
# Warmup Iteration   3: 1190.619 ops/ms
# Warmup Iteration   4: 1194.076 ops/ms
# Warmup Iteration   5: 1186.825 ops/ms
Iteration   1: 1176.324 ops/ms
Iteration   2: 1183.644 ops/ms
Iteration   3: 1184.894 ops/ms
Iteration   4: 1170.601 ops/ms
Iteration   5: 1178.394 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 49.38% complete, ETA 00:08:12
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1078.366 ops/ms
# Warmup Iteration   2: 1243.531 ops/ms
# Warmup Iteration   3: 1173.369 ops/ms
# Warmup Iteration   4: 1216.676 ops/ms
# Warmup Iteration   5: 1215.285 ops/ms
Iteration   1: 1241.997 ops/ms
Iteration   2: 1235.986 ops/ms
Iteration   3: 1157.241 ops/ms
Iteration   4: 1053.441 ops/ms
Iteration   5: 950.523 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 50.62% complete, ETA 00:08:00
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 941.609 ops/ms
# Warmup Iteration   2: 1151.581 ops/ms
# Warmup Iteration   3: 1106.204 ops/ms
# Warmup Iteration   4: 1143.191 ops/ms
# Warmup Iteration   5: 1135.642 ops/ms
Iteration   1: 1108.541 ops/ms
Iteration   2: 1102.199 ops/ms
Iteration   3: 1105.858 ops/ms
Iteration   4: 1141.813 ops/ms
Iteration   5: 1133.996 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckOptimistic":
  1141.697 ±(99.9%) 78.006 ops/ms [Average]
  (min, avg, max) = (950.523, 1141.697, 1241.997), stdev = 72.967
  CI (99.9%): [1063.691, 1219.703] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckOptimistic:·asm":
PrintAssembly processed: 51139 total address lines.
Perf output processed (skipped 6.636 seconds):
 Column 1: cycles (5050 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (192 bytes) 

                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@54 (line 150)
                      0x00007f989873fb85: mov    %rax,0x30(%r10)                ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@42 (line 148)
                      0x00007f989873fb89: movq   $0x0,0x20(%r10)                ;*putfield realTime {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@48 (line 149)
                      0x00007f989873fb91: add    $0x30,%rsp
                      0x00007f989873fb95: pop    %rbp
                      0x00007f989873fb96: mov    0x108(%r15),%r10
                      0x00007f989873fb9d: test   %eax,(%r10)                    ;   {poll_return}
                      0x00007f989873fba0: retq   
  4.53%       ↗       0x00007f989873fba1: vaddss 0x14(%rax,%r8,4),%xmm1,%xmm1
 11.41%       │       0x00007f989873fba8: vmovss %xmm1,0x14(%rsi,%r8,4)
  5.54%     ↗↗│       0x00007f989873fbaf: add    $0x2,%r8d                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
            │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.59%     │││       0x00007f989873fbb3: cmp    %r9d,%r8d
         ╭  │││       0x00007f989873fbb6: jge    0x00007f989873fbe6             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │  │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
         │  │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.35%  │  │││↗      0x00007f989873fbb8: vmovss 0x10(%rdx,%r8,4),%xmm0         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.17%  │  ││││      0x00007f989873fbbf: vucomiss %xmm0,%xmm0
  5.68%  │╭ ││││      0x00007f989873fbc3: jp     0x00007f989873fbd5
  6.44%  ││╭││││      0x00007f989873fbc5: jne    0x00007f989873fbd5             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  7.11%  │││││││      0x00007f989873fbc7: vaddss 0x10(%rax,%r8,4),%xmm0,%xmm0
  9.43%  │││││││      0x00007f989873fbce: vmovss %xmm0,0x10(%rsi,%r8,4)         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.86%  │↘↘││││      0x00007f989873fbd5: vmovss 0x14(%rdx,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.77%  │  ││││      0x00007f989873fbdc: vucomiss %xmm1,%xmm1
  4.46%  │  ╰│││      0x00007f989873fbe0: jp     0x00007f989873fbaf
  7.37%  │   ╰││      0x00007f989873fbe2: jne    0x00007f989873fbaf             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         │    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.29%  │    ╰│      0x00007f989873fbe4: jmp    0x00007f989873fba1             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │     │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
         │     │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.20%  ↘     │      0x00007f989873fbe6: mov    0x108(%r15),%r13               ; ImmutableOopMap{r11=NarrowOop rcx=Oop rdx=Oop rsi=Oop rax=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
               │                                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.59%        │      0x00007f989873fbed: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               │                                                                ;   {poll}
  0.20%        │      0x00007f989873fbf1: cmp    %r9d,%r8d
               ╰      0x00007f989873fbf4: jl     0x00007f989873fbb8
                      0x00007f989873fbf6: cmp    %r10d,%r8d
                ╭     0x00007f989873fbf9: jge    0x00007f989873fc21
                │     0x00007f989873fbfb: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                │  ↗  0x00007f989873fbfc: vmovss 0x10(%rdx,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.06%         │  │  0x00007f989873fc03: vucomiss %xmm1,%xmm1
                │╭ │  0x00007f989873fc07: jp     0x00007f989873fc19
  0.02%         ││╭│  0x00007f989873fc09: jne    0x00007f989873fc19             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
                ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%         ││││  0x00007f989873fc0b: vaddss 0x10(%rax,%r8,4),%xmm1,%xmm1
  0.04%         ││││  0x00007f989873fc12: vmovss %xmm1,0x10(%rsi,%r8,4)
  0.02%         │↘↘│  0x00007f989873fc19: inc    %r8d                           ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                │  │  0x00007f989873fc1c: cmp    %r10d,%r8d
                │  ╰  0x00007f989873fc1f: jl     0x00007f989873fbfc             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                ↘     0x00007f989873fc21: mov    %rcx,0x40(%rsp)                ;*invokevirtual verticalSumNaNCheckOptimistic {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007f989873fc26: mov    %r11,%rdx
  0.02%               0x00007f989873fc29: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@84 (line 133)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007f989873fc2d: mov    (%rsp),%rsi
                      0x00007f989873fc31: xchg   %ax,%ax
                      0x00007f989873fc33: callq  0x00007f98986bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                                                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
                                                                                ;   {optimized virtual_call}
  0.30%               0x00007f989873fc38: mov    0x40(%rsp),%rcx
                      0x00007f989873fc3d: movzbl 0x94(%rcx),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007f989873fc45: mov    0x108(%r15),%r10
  0.06%               0x00007f989873fc4c: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                                                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
                      0x00007f989873fc50: test   %eax,(%r10)                    ;   {poll}
  0.02%               0x00007f989873fc53: test   %r11d,%r11d
                      0x00007f989873fc56: jne    0x00007f989873fb6f             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@38 (line 148)
                      0x00007f989873fc5c: mov    0x50(%rsp),%r10
  0.06%               0x00007f989873fc61: mov    0xc(%r10),%r10d                ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@4 (line 125)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007f989873fc65: mov    0x50(%rsp),%r11
                      0x00007f989873fc6a: mov    0x20(%r11),%r11d               ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@84 (line 133)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007f989873fc6e: test   %r10d,%r10d
                      0x00007f989873fc71: jle    0x00007f989873fd25             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@7 (line 125)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
....................................................................................................
 96.59%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.59%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (192 bytes) 
  2.12%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.40%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (65 bytes) 
  0.14%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (41 bytes) 
  0.14%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (36 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (22 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (32 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.22%  <...other 11 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.87%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 
  2.57%   [kernel.kallsyms]  [unknown] 
  0.40%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  if_icmpne  160 if_icmpne  
  0.02%         interpreter  areturn  176 areturn  
  0.02%         interpreter  nofast_putfield  235 nofast_putfield  
  0.02%         interpreter  method entry point (kind = native)  
  0.02%         interpreter  invokehandle  233 invokehandle  
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 97.27%                  c2
  2.57%   [kernel.kallsyms]
  0.16%         interpreter
....................................................................................................
100.00%  <totals>

PrintAssembly processed: 51159 total address lines.
Perf output processed (skipped 6.617 seconds):
 Column 1: cycles (5075 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (246 bytes) 

                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@54 (line 150)
                      0x00007f4240741005: mov    %rax,0x30(%r10)                ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@42 (line 148)
                      0x00007f4240741009: movq   $0x0,0x20(%r10)                ;*putfield realTime {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@48 (line 149)
                      0x00007f4240741011: add    $0x30,%rsp
                      0x00007f4240741015: pop    %rbp
                      0x00007f4240741016: mov    0x108(%r15),%r10
                      0x00007f424074101d: test   %eax,(%r10)                    ;   {poll_return}
                      0x00007f4240741020: retq   
  4.32%       ↗       0x00007f4240741021: vaddss 0x14(%rax,%r8,4),%xmm1,%xmm1
 10.19%       │       0x00007f4240741028: vmovss %xmm1,0x14(%rsi,%r8,4)
  6.09%     ↗↗│       0x00007f424074102f: add    $0x2,%r8d                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
            │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.47%     │││       0x00007f4240741033: cmp    %r9d,%r8d
         ╭  │││       0x00007f4240741036: jge    0x00007f4240741066             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │  │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
         │  │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.00%  │  │││↗      0x00007f4240741038: vmovss 0x10(%rdx,%r8,4),%xmm0         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.85%  │  ││││      0x00007f424074103f: vucomiss %xmm0,%xmm0
  5.93%  │╭ ││││      0x00007f4240741043: jp     0x00007f4240741055
  7.07%  ││╭││││      0x00007f4240741045: jne    0x00007f4240741055             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.62%  │││││││      0x00007f4240741047: vaddss 0x10(%rax,%r8,4),%xmm0,%xmm0
  9.46%  │││││││      0x00007f424074104e: vmovss %xmm0,0x10(%rsi,%r8,4)         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.18%  │↘↘││││      0x00007f4240741055: vmovss 0x14(%rdx,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.38%  │  ││││      0x00007f424074105c: vucomiss %xmm1,%xmm1
  4.65%  │  ╰│││      0x00007f4240741060: jp     0x00007f424074102f
  7.35%  │   ╰││      0x00007f4240741062: jne    0x00007f424074102f             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         │    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.21%  │    ╰│      0x00007f4240741064: jmp    0x00007f4240741021             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │     │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
         │     │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.28%  ↘     │      0x00007f4240741066: mov    0x108(%r15),%r13               ; ImmutableOopMap{r11=NarrowOop rcx=Oop rdx=Oop rsi=Oop rax=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
               │                                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.37%        │      0x00007f424074106d: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               │                                                                ;   {poll}
  0.20%        │      0x00007f4240741071: cmp    %r9d,%r8d
               ╰      0x00007f4240741074: jl     0x00007f4240741038
                      0x00007f4240741076: cmp    %r10d,%r8d
                ╭     0x00007f4240741079: jge    0x00007f42407410a1
                │     0x00007f424074107b: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%         │  ↗  0x00007f424074107c: vmovss 0x10(%rdx,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%         │  │  0x00007f4240741083: vucomiss %xmm1,%xmm1
                │╭ │  0x00007f4240741087: jp     0x00007f4240741099
                ││╭│  0x00007f4240741089: jne    0x00007f4240741099             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
                ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                ││││  0x00007f424074108b: vaddss 0x10(%rax,%r8,4),%xmm1,%xmm1
  0.04%         ││││  0x00007f4240741092: vmovss %xmm1,0x10(%rsi,%r8,4)
  0.02%         │↘↘│  0x00007f4240741099: inc    %r8d                           ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                │  │  0x00007f424074109c: cmp    %r10d,%r8d
                │  ╰  0x00007f424074109f: jl     0x00007f424074107c             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                ↘     0x00007f42407410a1: mov    %rcx,0x40(%rsp)                ;*invokevirtual verticalSumNaNCheckOptimistic {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%               0x00007f42407410a6: mov    %r11,%rdx
  0.06%               0x00007f42407410a9: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@84 (line 133)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007f42407410ad: mov    (%rsp),%rsi
                      0x00007f42407410b1: xchg   %ax,%ax
                      0x00007f42407410b3: callq  0x00007f42406bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                                                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
                                                                                ;   {optimized virtual_call}
  0.18%               0x00007f42407410b8: mov    0x40(%rsp),%rcx
                      0x00007f42407410bd: movzbl 0x94(%rcx),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%               0x00007f42407410c5: mov    0x108(%r15),%r10
                      0x00007f42407410cc: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                                                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
                      0x00007f42407410d0: test   %eax,(%r10)                    ;   {poll}
                      0x00007f42407410d3: test   %r11d,%r11d
                      0x00007f42407410d6: jne    0x00007f4240740fef             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@38 (line 148)
                      0x00007f42407410dc: mov    0x50(%rsp),%r10
  0.06%               0x00007f42407410e1: mov    0xc(%r10),%r10d                ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@4 (line 125)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007f42407410e5: mov    0x50(%rsp),%r11
                      0x00007f42407410ea: mov    0x20(%r11),%r11d               ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@84 (line 133)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%               0x00007f42407410ee: test   %r10d,%r10d
                      0x00007f42407410f1: jle    0x00007f42407411a5             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@7 (line 125)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.10%               0x00007f42407410f7: mov    0x50(%rsp),%r8
                      0x00007f42407410fc: mov    0x18(%r8),%edx                 ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@11 (line 126)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007f4240741100: mov    0xc(%r12,%rdx,8),%r8d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                                                                                ; implicit exception: dispatches to 0x00007f42407411af
  0.02%               0x00007f4240741105: test   %r8d,%r8d
                      0x00007f4240741108: jbe    0x00007f42407411af
  0.02%               0x00007f424074110e: movslq %r10d,%rdi
                      0x00007f4240741111: movslq %r8d,%r8
                      0x00007f4240741114: dec    %rdi
  0.02%               0x00007f4240741117: cmp    %r8,%rdi
                      0x00007f424074111a: jae    0x00007f42407411af
                      0x00007f4240741120: mov    0x50(%rsp),%r8
                      0x00007f4240741125: mov    0x1c(%r8),%ebx                 ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@95 (line 133)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007f4240741129: mov    0xc(%r12,%rbx,8),%r8d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@99 (line 133)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                                                                                ; implicit exception: dispatches to 0x00007f42407411c6
                      0x00007f424074112e: test   %r8d,%r8d
....................................................................................................
 96.24%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.24%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (246 bytes) 
  2.36%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.33%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (27 bytes) 
  0.30%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (83 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (4 bytes) 
  0.04%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (0 bytes) 
  0.04%           libjvm.so  _ZN21ThreadStateTransition22transition_from_nativeEP10JavaThread15JavaThreadState.constprop.178 (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.28%  <...other 14 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.53%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 
  2.84%   [kernel.kallsyms]  [unknown] 
  0.37%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.04%           libjvm.so  _ZN21ThreadStateTransition22transition_from_nativeEP10JavaThread15JavaThreadState.constprop.178 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN17ThreadsListHandle32cv_internal_thread_to_JavaThreadEP8_jobjectPP10JavaThreadPP7oopDesc 
  0.02%           libjvm.so  _ZN7Monitor28lock_without_safepoint_checkEv 
  0.02%         interpreter  method entry point (kind = native)  
  0.02%        runtime stub  StubRoutines::call_stub 
  0.02%         interpreter  nofast_aload_0  236 nofast_aload_0  
  0.02%           libjvm.so  _ZN11SymbolTable9do_lookupEPKcim 
  0.02%         interpreter  ishl  120 ishl  
  0.02%         interpreter  new  187 new  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.91%                  c2
  2.84%   [kernel.kallsyms]
  0.12%         interpreter
  0.10%           libjvm.so
  0.02%        runtime stub
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51170 total address lines.
Perf output processed (skipped 6.755 seconds):
 Column 1: cycles (5089 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (98 bytes) 

                                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@54 (line 150)
                  0x00007efe2fce5305: mov    %rax,0x30(%r10)                ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@42 (line 148)
                  0x00007efe2fce5309: movq   $0x0,0x20(%r10)                ;*putfield realTime {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@48 (line 149)
                  0x00007efe2fce5311: add    $0x30,%rsp
                  0x00007efe2fce5315: pop    %rbp
                  0x00007efe2fce5316: mov    0x108(%r15),%r10
                  0x00007efe2fce531d: test   %eax,(%r10)                    ;   {poll_return}
                  0x00007efe2fce5320: retq   
  4.99%       ↗   0x00007efe2fce5321: vaddss 0x14(%rax,%r8,4),%xmm1,%xmm1
 10.71%       │   0x00007efe2fce5328: vmovss %xmm1,0x14(%rsi,%r8,4)
  5.97%     ↗↗│   0x00007efe2fce532f: add    $0x2,%r8d                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
            │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.42%     │││   0x00007efe2fce5333: cmp    %r9d,%r8d
         ╭  │││   0x00007efe2fce5336: jge    0x00007efe2fce5366             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │  │││                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
         │  │││                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.74%  │  │││↗  0x00007efe2fce5338: vmovss 0x10(%rdx,%r8,4),%xmm0         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │  ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         │  ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.99%  │  ││││  0x00007efe2fce533f: vucomiss %xmm0,%xmm0
  5.52%  │╭ ││││  0x00007efe2fce5343: jp     0x00007efe2fce5355
  7.03%  ││╭││││  0x00007efe2fce5345: jne    0x00007efe2fce5355             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
         │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.07%  │││││││  0x00007efe2fce5347: vaddss 0x10(%rax,%r8,4),%xmm0,%xmm0
  9.35%  │││││││  0x00007efe2fce534e: vmovss %xmm0,0x10(%rsi,%r8,4)         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
         │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.66%  │↘↘││││  0x00007efe2fce5355: vmovss 0x14(%rdx,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │  ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         │  ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.03%  │  ││││  0x00007efe2fce535c: vucomiss %xmm1,%xmm1
  4.91%  │  ╰│││  0x00007efe2fce5360: jp     0x00007efe2fce532f
  7.86%  │   ╰││  0x00007efe2fce5362: jne    0x00007efe2fce532f             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
         │    ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         │    ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.21%  │    ╰│  0x00007efe2fce5364: jmp    0x00007efe2fce5321             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │     │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
         │     │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.20%  ↘     │  0x00007efe2fce5366: mov    0x108(%r15),%r13               ; ImmutableOopMap{r11=NarrowOop rcx=Oop rdx=Oop rsi=Oop rax=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
               │                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
               │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
               │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.33%        │  0x00007efe2fce536d: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
               │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               │                                                            ;   {poll}
  0.16%        │  0x00007efe2fce5371: cmp    %r9d,%r8d
               ╰  0x00007efe2fce5374: jl     0x00007efe2fce5338
                  0x00007efe2fce5376: cmp    %r10d,%r8d
                  0x00007efe2fce5379: jge    0x00007efe2fce53a1
                  0x00007efe2fce537b: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
                                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                  0x00007efe2fce537c: vmovss 0x10(%rdx,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
                                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%           0x00007efe2fce5383: vucomiss %xmm1,%xmm1
                  0x00007efe2fce5387: jp     0x00007efe2fce5399
                  0x00007efe2fce5389: jne    0x00007efe2fce5399             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - java.lang.Float::isNaN@3 (line 467)
                                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
                                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                  0x00007efe2fce538b: vaddss 0x10(%rax,%r8,4),%xmm1,%xmm1
                  0x00007efe2fce5392: vmovss %xmm1,0x10(%rsi,%r8,4)
                  0x00007efe2fce5399: inc    %r8d                           ;*iinc {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 95.19%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.19%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (98 bytes) 
  2.81%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.49%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (15 bytes) 
  0.39%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (65 bytes) 
  0.26%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (72 bytes) 
  0.16%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.16%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (33 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (2 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (22 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  invoke return entry points  (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.20%  <...other 10 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.15%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 
  3.18%   [kernel.kallsyms]  [unknown] 
  0.39%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZNK15G1CollectionSet7iterateEP17HeapRegionClosure 
  0.02%         interpreter  invoke return entry points  
  0.02%           libjvm.so  _ZN21ThreadStateTransition22transition_from_nativeEP10JavaThread15JavaThreadState.constprop.186 
  0.02%         interpreter  ifne  154 ifne  
  0.02%           libjvm.so  _ZN20SafepointSynchronize5beginEv 
  0.02%                  c2  jdk.internal.reflect.ClassFileAssembler::emitByte, version 85 
  0.02%           libjvm.so  JVM_GetCallerClass 
  0.02%           libjvm.so  _ZN11SymbolTable11lookup_onlyEPKciRj 
  0.02%           libjvm.so  _ZN2os11elapsedTimeEv 
  0.02%           libjvm.so  JVM_CurrentThread 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.56%                  c2
  3.18%   [kernel.kallsyms]
  0.16%           libjvm.so
  0.08%         interpreter
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckOptimistic
# Parameters: (probabilityOfNaN = 0.01, size = 1024)

# Run progress: 51.85% complete, ETA 00:07:48
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 985.843 ops/ms
# Warmup Iteration   2: 1113.936 ops/ms
# Warmup Iteration   3: 1065.242 ops/ms
# Warmup Iteration   4: 1092.076 ops/ms
# Warmup Iteration   5: 1095.277 ops/ms
Iteration   1: 1099.285 ops/ms
Iteration   2: 1104.693 ops/ms
Iteration   3: 1093.105 ops/ms
Iteration   4: 1110.787 ops/ms
Iteration   5: 1088.653 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 53.09% complete, ETA 00:07:36
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 981.089 ops/ms
# Warmup Iteration   2: 1056.791 ops/ms
# Warmup Iteration   3: 1067.172 ops/ms
# Warmup Iteration   4: 1099.810 ops/ms
# Warmup Iteration   5: 1108.415 ops/ms
Iteration   1: 1089.532 ops/ms
Iteration   2: 1089.400 ops/ms
Iteration   3: 1097.978 ops/ms
Iteration   4: 1090.652 ops/ms
Iteration   5: 1077.096 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 54.32% complete, ETA 00:07:24
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 993.611 ops/ms
# Warmup Iteration   2: 1103.522 ops/ms
# Warmup Iteration   3: 1095.872 ops/ms
# Warmup Iteration   4: 1106.704 ops/ms
# Warmup Iteration   5: 1103.380 ops/ms
Iteration   1: 1104.709 ops/ms
Iteration   2: 1112.728 ops/ms
Iteration   3: 1114.219 ops/ms
Iteration   4: 1086.505 ops/ms
Iteration   5: 1112.794 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckOptimistic":
  1098.142 ±(99.9%) 12.235 ops/ms [Average]
  (min, avg, max) = (1077.096, 1098.142, 1114.219), stdev = 11.444
  CI (99.9%): [1085.908, 1110.377] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckOptimistic:·asm":
PrintAssembly processed: 51105 total address lines.
Perf output processed (skipped 6.680 seconds):
 Column 1: cycles (5052 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (371 bytes) 

                                                                                       ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@54 (line 150)
                             0x00007f328c107d05: mov    %rax,0x30(%r10)                ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                                                       ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@42 (line 148)
                             0x00007f328c107d09: movq   $0x0,0x20(%r10)                ;*putfield realTime {reexecute=0 rethrow=0 return_oop=0}
                                                                                       ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@48 (line 149)
                             0x00007f328c107d11: add    $0x30,%rsp
                             0x00007f328c107d15: pop    %rbp
                             0x00007f328c107d16: mov    0x108(%r15),%r10
                             0x00007f328c107d1d: test   %eax,(%r10)                    ;   {poll_return}
                             0x00007f328c107d20: retq   
  3.86%       ↗              0x00007f328c107d21: vaddss 0x14(%rax,%r8,4),%xmm1,%xmm1
 10.65%       │              0x00007f328c107d28: vmovss %xmm1,0x14(%rsi,%r8,4)
  5.82%     ↗↗│              0x00007f328c107d2f: add    $0x2,%r8d                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││                                                                        ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
            │││                                                                        ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.45%     │││              0x00007f328c107d33: cmp    %r9d,%r8d
         ╭  │││              0x00007f328c107d36: jge    0x00007f328c107d66             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │  │││                                                                        ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
         │  │││                                                                        ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.01%  │  │││↗         ↗   0x00007f328c107d38: vmovss 0x10(%rdx,%r8,4),%xmm0         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │  ││││         │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         │  ││││         │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.74%  │  ││││         │   0x00007f328c107d3f: vucomiss %xmm0,%xmm0
  6.02%  │╭ ││││         │   0x00007f328c107d43: jp     0x00007f328c107d55
  6.81%  ││╭││││         │   0x00007f328c107d45: jne    0x00007f328c107d55             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││││││         │                                                             ; - java.lang.Float::isNaN@3 (line 467)
         │││││││         │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         │││││││         │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.55%  │││││││         │   0x00007f328c107d47: vaddss 0x10(%rax,%r8,4),%xmm0,%xmm0
  8.97%  │││││││         │   0x00007f328c107d4e: vmovss %xmm0,0x10(%rsi,%r8,4)         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││││││         │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
         │││││││         │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.63%  │↘↘││││         │   0x00007f328c107d55: vmovss 0x14(%rdx,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │  ││││         │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         │  ││││         │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.50%  │  ││││         │   0x00007f328c107d5c: vucomiss %xmm1,%xmm1
  4.95%  │  ╰│││         │   0x00007f328c107d60: jp     0x00007f328c107d2f
  8.21%  │   ╰││         │   0x00007f328c107d62: jne    0x00007f328c107d2f             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││         │                                                             ; - java.lang.Float::isNaN@3 (line 467)
         │    ││         │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         │    ││         │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.64%  │    ╰│         │   0x00007f328c107d64: jmp    0x00007f328c107d21             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │     │         │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
         │     │         │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.36%  ↘     │         │   0x00007f328c107d66: mov    0x108(%r15),%r13               ; ImmutableOopMap{r11=NarrowOop rcx=Oop rdx=Oop rsi=Oop rax=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
               │         │                                                             ;*goto {reexecute=1 rethrow=0 return_oop=0}
               │         │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
               │         │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.32%        │         │   0x00007f328c107d6d: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
               │         │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
               │         │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               │         │                                                             ;   {poll}
  0.32%        │         │   0x00007f328c107d71: cmp    %r9d,%r8d
               ╰         │   0x00007f328c107d74: jl     0x00007f328c107d38
                         │   0x00007f328c107d76: cmp    %r10d,%r8d
                ╭        │   0x00007f328c107d79: jge    0x00007f328c107da1
                │        │   0x00007f328c107d7b: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                │        │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
                │        │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                │  ↗     │   0x00007f328c107d7c: vmovss 0x10(%rdx,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
                │  │     │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
                │  │     │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%         │  │     │   0x00007f328c107d83: vucomiss %xmm1,%xmm1
                │╭ │     │   0x00007f328c107d87: jp     0x00007f328c107d99
                ││╭│     │   0x00007f328c107d89: jne    0x00007f328c107d99             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                ││││     │                                                             ; - java.lang.Float::isNaN@3 (line 467)
                ││││     │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
                ││││     │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                ││││     │   0x00007f328c107d8b: vaddss 0x10(%rax,%r8,4),%xmm1,%xmm1
  0.02%         ││││     │   0x00007f328c107d92: vmovss %xmm1,0x10(%rsi,%r8,4)
  0.12%         │↘↘│     │   0x00007f328c107d99: inc    %r8d                           ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                │  │     │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
                │  │     │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                │  │     │   0x00007f328c107d9c: cmp    %r10d,%r8d
                │  ╰     │   0x00007f328c107d9f: jl     0x00007f328c107d7c             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                │        │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
                │        │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                ↘        │   0x00007f328c107da1: mov    %rcx,0x40(%rsp)                ;*invokevirtual verticalSumNaNCheckOptimistic {reexecute=0 rethrow=0 return_oop=0}
                         │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                         │↗  0x00007f328c107da6: mov    %r11,%rdx
  0.04%                  ││  0x00007f328c107da9: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@84 (line 133)
                         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                         ││  0x00007f328c107dad: mov    (%rsp),%rsi
  0.02%                  ││  0x00007f328c107db1: xchg   %ax,%ax
                         ││  0x00007f328c107db3: callq  0x00007f328c087900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                         ││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
                         ││                                                            ;   {optimized virtual_call}
  0.24%                  ││  0x00007f328c107db8: mov    0x40(%rsp),%rcx
                         ││  0x00007f328c107dbd: movzbl 0x94(%rcx),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
                         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                         ││  0x00007f328c107dc5: mov    0x108(%r15),%r10
  0.04%                  ││  0x00007f328c107dcc: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                         ││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
                         ││  0x00007f328c107dd0: test   %eax,(%r10)                    ;   {poll}
                         ││  0x00007f328c107dd3: test   %r11d,%r11d
                         ││  0x00007f328c107dd6: jne    0x00007f328c107cef             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@38 (line 148)
                         ││  0x00007f328c107ddc: mov    0x50(%rsp),%r10
  0.04%                  ││  0x00007f328c107de1: mov    0xc(%r10),%r10d                ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@4 (line 125)
                         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%                  ││  0x00007f328c107de5: mov    0x50(%rsp),%r11
                         ││  0x00007f328c107dea: mov    0x20(%r11),%r11d               ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@84 (line 133)
                         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                         ││  0x00007f328c107dee: test   %r10d,%r10d
                    ╭    ││  0x00007f328c107df1: jle    0x00007f328c107ea5             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                    │    ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@7 (line 125)
                    │    ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%             │    ││  0x00007f328c107df7: mov    0x50(%rsp),%r8
                    │    ││  0x00007f328c107dfc: mov    0x18(%r8),%edx                 ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
                    │    ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@11 (line 126)
                    │    ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                    │    ││  0x00007f328c107e00: mov    0xc(%r12,%rdx,8),%r8d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
                    │    ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
                    │    ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                    │    ││                                                            ; implicit exception: dispatches to 0x00007f328c107eaf
  0.06%             │    ││  0x00007f328c107e05: test   %r8d,%r8d
                    │╭   ││  0x00007f328c107e08: jbe    0x00007f328c107eaf
  0.02%             ││   ││  0x00007f328c107e0e: movslq %r10d,%rdi
                    ││   ││  0x00007f328c107e11: movslq %r8d,%r8
                    ││   ││  0x00007f328c107e14: dec    %rdi
                    ││   ││  0x00007f328c107e17: cmp    %r8,%rdi
                    ││╭  ││  0x00007f328c107e1a: jae    0x00007f328c107eaf
  0.04%             │││  ││  0x00007f328c107e20: mov    0x50(%rsp),%r8
                    │││  ││  0x00007f328c107e25: mov    0x1c(%r8),%ebx                 ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
                    │││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@95 (line 133)
                    │││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                    │││  ││  0x00007f328c107e29: mov    0xc(%r12,%rbx,8),%r8d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
                    │││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@99 (line 133)
                    │││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                    │││  ││                                                            ; implicit exception: dispatches to 0x00007f328c107ec6
                    │││  ││  0x00007f328c107e2e: test   %r8d,%r8d
                    │││  ││  0x00007f328c107e31: jbe    0x00007f328c107ec6
  0.02%             │││  ││  0x00007f328c107e37: movslq %r8d,%r8
                    │││  ││  0x00007f328c107e3a: cmp    %r8,%rdi
                    │││  ││  0x00007f328c107e3d: jae    0x00007f328c107ec6
                    │││  ││  0x00007f328c107e43: mov    0xc(%r12,%r11,8),%r9d          ;*fastore {reexecute=0 rethrow=0 return_oop=0}
                    │││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
                    │││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                    │││  ││                                                            ; implicit exception: dispatches to 0x00007f328c107ec6
                    │││  ││  0x00007f328c107e48: test   %r9d,%r9d
                    │││  ││  0x00007f328c107e4b: jbe    0x00007f328c107ec6
  0.06%             │││  ││  0x00007f328c107e4d: movslq %r9d,%r8
                    │││  ││  0x00007f328c107e50: cmp    %r8,%rdi
                    │││  ││  0x00007f328c107e53: jae    0x00007f328c107ec6
                    │││  ││  0x00007f328c107e55: vmovss 0x10(%r12,%rdx,8),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
                    │││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
                    │││  ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                    │││  ││  0x00007f328c107e5c: vucomiss %xmm0,%xmm0
                    │││╭ ││  0x00007f328c107e60: jp     0x00007f328c107e76
  0.02%             ││││╭││  0x00007f328c107e62: jne    0x00007f328c107e76             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                    │││││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                    │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
                    │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%             │││││││  0x00007f328c107e64: vmovss 0x10(%r12,%rbx,8),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
                    │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@99 (line 133)
                    │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%             │││││││  0x00007f328c107e6b: vaddss %xmm0,%xmm1,%xmm1
  0.02%             │││││││  0x00007f328c107e6f: vmovss %xmm1,0x10(%r12,%r11,8)        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                    │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
                    │││││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                    │││↘↘││  0x00007f328c107e76: mov    %r10d,%r9d
                    │││  ││  0x00007f328c107e79: dec    %r9d
                    │││  ││  0x00007f328c107e7c: cmp    %r9d,%r10d
  0.10%             │││  ││  0x00007f328c107e7f: mov    $0x80000000,%edi
                    │││  ││  0x00007f328c107e84: cmovl  %edi,%r9d
                    │││  ││  0x00007f328c107e88: shl    $0x3,%rdx
                    │││  ││  0x00007f328c107e8c: lea    (%r12,%r11,8),%rsi
  0.04%             │││  ││  0x00007f328c107e90: lea    (%r12,%rbx,8),%rax
  0.02%             │││  ││  0x00007f328c107e94: cmp    $0x1,%r9d
                    │││  ││  0x00007f328c107e98: jle    0x00007f328c107ede
                    │││  ││  0x00007f328c107e9a: mov    $0x1,%r8d
                    │││  ╰│  0x00007f328c107ea0: jmpq   0x00007f328c107d38
                    ↘││   │  0x00007f328c107ea5: mov    %rcx,0x40(%rsp)
                     ││   ╰  0x00007f328c107eaa: jmpq   0x00007f328c107da6
                     ↘↘      0x00007f328c107eaf: mov    $0xffffff7e,%esi
                             0x00007f328c107eb4: mov    %rcx,0x40(%rsp)
                             0x00007f328c107eb9: mov    %r10d,0x18(%rsp)
                             0x00007f328c107ebe: nop
                             0x00007f328c107ebf: callq  0x00007f328c089300             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
....................................................................................................
 96.85%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.85%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (371 bytes) 
  1.96%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.40%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (68 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (27 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.32%  <...other 16 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.85%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 
  2.49%   [kernel.kallsyms]  [unknown] 
  0.40%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%           libjvm.so  _ZN7Monitor4waitEblb 
  0.02%           libjvm.so  _ZN22SystemDictionaryShared25find_or_load_shared_classEP6Symbol6HandleP6Thread 
  0.02%           libjvm.so  _ZN18InterpreterRuntime8newarrayEP10JavaThread9BasicTypei 
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%           libjvm.so  _ZN11ResourceObjdlEPv 
  0.02%           libjvm.so  _ZN22ConstantPoolCacheEntry15set_direct_callEN9Bytecodes4CodeERK12methodHandleb 
  0.02%         interpreter  instanceof  193 instanceof  
  0.02%           libjvm.so  _ZN17ResourceHashtableIPhN10decode_env14SourceFileInfoEXadL_ZNS2_4hashERKS0_EEXadL_ZNS2_6equalsES4_S4_EELj15889ELN11ResourceObj15allocation_typeE2EL10MemoryType7EED2Ev 
  0.02%         interpreter  if_icmpeq  159 if_icmpeq  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.25%                  c2
  2.49%   [kernel.kallsyms]
  0.14%           libjvm.so
  0.10%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51164 total address lines.
Perf output processed (skipped 6.698 seconds):
 Column 1: cycles (5018 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (278 bytes) 

                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@54 (line 150)
                      0x00007fafe473f885: mov    %rax,0x30(%r10)                ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@42 (line 148)
                      0x00007fafe473f889: movq   $0x0,0x20(%r10)                ;*putfield realTime {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@48 (line 149)
                      0x00007fafe473f891: add    $0x30,%rsp
                      0x00007fafe473f895: pop    %rbp
                      0x00007fafe473f896: mov    0x108(%r15),%r10
                      0x00007fafe473f89d: test   %eax,(%r10)                    ;   {poll_return}
                      0x00007fafe473f8a0: retq   
  4.36%       ↗       0x00007fafe473f8a1: vaddss 0x14(%rax,%r8,4),%xmm1,%xmm1
 10.56%       │       0x00007fafe473f8a8: vmovss %xmm1,0x14(%rsi,%r8,4)
  5.82%     ↗↗│       0x00007fafe473f8af: add    $0x2,%r8d                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
            │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.86%     │││       0x00007fafe473f8b3: cmp    %r9d,%r8d
  0.02%  ╭  │││       0x00007fafe473f8b6: jge    0x00007fafe473f8e6             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │  │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
         │  │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.36%  │  │││↗      0x00007fafe473f8b8: vmovss 0x10(%rdx,%r8,4),%xmm0         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.54%  │  ││││      0x00007fafe473f8bf: vucomiss %xmm0,%xmm0
  5.56%  │╭ ││││      0x00007fafe473f8c3: jp     0x00007fafe473f8d5
  6.72%  ││╭││││      0x00007fafe473f8c5: jne    0x00007fafe473f8d5             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.97%  │││││││      0x00007fafe473f8c7: vaddss 0x10(%rax,%r8,4),%xmm0,%xmm0
 10.34%  │││││││      0x00007fafe473f8ce: vmovss %xmm0,0x10(%rsi,%r8,4)         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.70%  │↘↘││││      0x00007fafe473f8d5: vmovss 0x14(%rdx,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.80%  │  ││││      0x00007fafe473f8dc: vucomiss %xmm1,%xmm1
  4.54%  │  ╰│││      0x00007fafe473f8e0: jp     0x00007fafe473f8af
  7.19%  │   ╰││      0x00007fafe473f8e2: jne    0x00007fafe473f8af             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         │    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.24%  │    ╰│      0x00007fafe473f8e4: jmp    0x00007fafe473f8a1             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │     │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
         │     │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.24%  ↘     │      0x00007fafe473f8e6: mov    0x108(%r15),%r13               ; ImmutableOopMap{r11=NarrowOop rcx=Oop rdx=Oop rsi=Oop rax=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
               │                                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.36%        │      0x00007fafe473f8ed: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               │                                                                ;   {poll}
  0.20%        │      0x00007fafe473f8f1: cmp    %r9d,%r8d
               ╰      0x00007fafe473f8f4: jl     0x00007fafe473f8b8
                      0x00007fafe473f8f6: cmp    %r10d,%r8d
                ╭     0x00007fafe473f8f9: jge    0x00007fafe473f921
                │     0x00007fafe473f8fb: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                │  ↗  0x00007fafe473f8fc: vmovss 0x10(%rdx,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.08%         │  │  0x00007fafe473f903: vucomiss %xmm1,%xmm1
                │╭ │  0x00007fafe473f907: jp     0x00007fafe473f919
                ││╭│  0x00007fafe473f909: jne    0x00007fafe473f919             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
                ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%         ││││  0x00007fafe473f90b: vaddss 0x10(%rax,%r8,4),%xmm1,%xmm1
  0.10%         ││││  0x00007fafe473f912: vmovss %xmm1,0x10(%rsi,%r8,4)
                │↘↘│  0x00007fafe473f919: inc    %r8d                           ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                │  │  0x00007fafe473f91c: cmp    %r10d,%r8d
                │  ╰  0x00007fafe473f91f: jl     0x00007fafe473f8fc             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                ↘     0x00007fafe473f921: mov    %rcx,0x40(%rsp)                ;*invokevirtual verticalSumNaNCheckOptimistic {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007fafe473f926: mov    %r11,%rdx
  0.02%               0x00007fafe473f929: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@84 (line 133)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007fafe473f92d: mov    (%rsp),%rsi
  0.02%               0x00007fafe473f931: xchg   %ax,%ax
                      0x00007fafe473f933: callq  0x00007fafe46bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                                                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
                                                                                ;   {optimized virtual_call}
  0.26%               0x00007fafe473f938: mov    0x40(%rsp),%rcx
                      0x00007fafe473f93d: movzbl 0x94(%rcx),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007fafe473f945: mov    0x108(%r15),%r10
  0.10%               0x00007fafe473f94c: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                                                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
                      0x00007fafe473f950: test   %eax,(%r10)                    ;   {poll}
                      0x00007fafe473f953: test   %r11d,%r11d
                      0x00007fafe473f956: jne    0x00007fafe473f86f             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@38 (line 148)
                      0x00007fafe473f95c: mov    0x50(%rsp),%r10
  0.04%               0x00007fafe473f961: mov    0xc(%r10),%r10d                ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@4 (line 125)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007fafe473f965: mov    0x50(%rsp),%r11
                      0x00007fafe473f96a: mov    0x20(%r11),%r11d               ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@84 (line 133)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007fafe473f96e: test   %r10d,%r10d
                      0x00007fafe473f971: jle    0x00007fafe473fa25             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@7 (line 125)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.06%               0x00007fafe473f977: mov    0x50(%rsp),%r8
                      0x00007fafe473f97c: mov    0x18(%r8),%edx                 ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@11 (line 126)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007fafe473f980: mov    0xc(%r12,%rdx,8),%r8d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                                                                                ; implicit exception: dispatches to 0x00007fafe473fa2f
  0.06%               0x00007fafe473f985: test   %r8d,%r8d
                      0x00007fafe473f988: jbe    0x00007fafe473fa2f
  0.02%               0x00007fafe473f98e: movslq %r10d,%rdi
                      0x00007fafe473f991: movslq %r8d,%r8
                      0x00007fafe473f994: dec    %rdi
                      0x00007fafe473f997: cmp    %r8,%rdi
                      0x00007fafe473f99a: jae    0x00007fafe473fa2f
  0.04%               0x00007fafe473f9a0: mov    0x50(%rsp),%r8
                      0x00007fafe473f9a5: mov    0x1c(%r8),%ebx                 ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@95 (line 133)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007fafe473f9a9: mov    0xc(%r12,%rbx,8),%r8d          ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@99 (line 133)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                                                                                ; implicit exception: dispatches to 0x00007fafe473fa46
                      0x00007fafe473f9ae: test   %r8d,%r8d
                      0x00007fafe473f9b1: jbe    0x00007fafe473fa46
  0.04%               0x00007fafe473f9b7: movslq %r8d,%r8
                      0x00007fafe473f9ba: cmp    %r8,%rdi
                      0x00007fafe473f9bd: jae    0x00007fafe473fa46
                      0x00007fafe473f9c3: mov    0xc(%r12,%r11,8),%r9d          ;*fastore {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@101 (line 133)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                                                                                ; implicit exception: dispatches to 0x00007fafe473fa46
                      0x00007fafe473f9c8: test   %r9d,%r9d
                      0x00007fafe473f9cb: jbe    0x00007fafe473fa46
                      0x00007fafe473f9cd: movslq %r9d,%r8
                      0x00007fafe473f9d0: cmp    %r8,%rdi
....................................................................................................
 97.25%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.25%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (278 bytes) 
  1.10%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.40%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (65 bytes) 
  0.32%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (52 bytes) 
  0.18%   [kernel.kallsyms]  [unknown] (41 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (14 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (4 bytes) 
  0.04%         interpreter  if_acmpne  166 if_acmpne  (4 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.34%  <...other 17 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.57%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 
  1.63%   [kernel.kallsyms]  [unknown] 
  0.40%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.04%         interpreter  invokevirtual  182 invokevirtual  
  0.04%         interpreter  if_acmpne  166 if_acmpne  
  0.02%         interpreter  iconst_0  3 iconst_0  
  0.02%           libjvm.so  _ZN6HandleC2EP6ThreadP7oopDesc 
  0.02%         interpreter  method entry point (kind = native)  
  0.02%         interpreter  return  177 return  
  0.02%       perf-6816.map  [unknown] 
  0.02%           libjvm.so  _ZN6Thread10muxAcquireEPVlPKc 
  0.02%         interpreter  astore  58 astore  
  0.02%  libpthread-2.23.so  pthread_mutex_unlock 
  0.02%         classes.jsa  [unknown] 
  0.02%          libjava.so  Java_java_io_ObjectStreamClass_hasStaticInitializer 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%         interpreter  aload_3  45 aload_3  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.97%                  c2
  1.63%   [kernel.kallsyms]
  0.24%         interpreter
  0.06%           libjvm.so
  0.02%         classes.jsa
  0.02%          libjava.so
  0.02%  libpthread-2.23.so
  0.02%       perf-6816.map
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51138 total address lines.
Perf output processed (skipped 6.672 seconds):
 Column 1: cycles (5058 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (151 bytes) 

                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@54 (line 150)
                      0x00007f629c73fc85: mov    %rax,0x30(%r10)                ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@42 (line 148)
                      0x00007f629c73fc89: movq   $0x0,0x20(%r10)                ;*putfield realTime {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@48 (line 149)
                      0x00007f629c73fc91: add    $0x30,%rsp
                      0x00007f629c73fc95: pop    %rbp
                      0x00007f629c73fc96: mov    0x108(%r15),%r10
                      0x00007f629c73fc9d: test   %eax,(%r10)                    ;   {poll_return}
                      0x00007f629c73fca0: retq   
  4.43%       ↗       0x00007f629c73fca1: vaddss 0x14(%rax,%r8,4),%xmm1,%xmm1
 10.60%       │       0x00007f629c73fca8: vmovss %xmm1,0x14(%rsi,%r8,4)
  6.86%     ↗↗│       0x00007f629c73fcaf: add    $0x2,%r8d                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
            │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.71%     │││       0x00007f629c73fcb3: cmp    %r9d,%r8d
         ╭  │││       0x00007f629c73fcb6: jge    0x00007f629c73fce6             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │  │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
         │  │││                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.78%  │  │││↗      0x00007f629c73fcb8: vmovss 0x10(%rdx,%r8,4),%xmm0         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.38%  │  ││││      0x00007f629c73fcbf: vucomiss %xmm0,%xmm0
  6.37%  │╭ ││││      0x00007f629c73fcc3: jp     0x00007f629c73fcd5
  6.43%  ││╭││││      0x00007f629c73fcc5: jne    0x00007f629c73fcd5             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │││││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.17%  │││││││      0x00007f629c73fcc7: vaddss 0x10(%rax,%r8,4),%xmm0,%xmm0
 10.10%  │││││││      0x00007f629c73fcce: vmovss %xmm0,0x10(%rsi,%r8,4)         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
         │││││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.17%  │↘↘││││      0x00007f629c73fcd5: vmovss 0x14(%rdx,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
         │  ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.73%  │  ││││      0x00007f629c73fcdc: vucomiss %xmm1,%xmm1
  4.71%  │  ╰│││      0x00007f629c73fce0: jp     0x00007f629c73fcaf
  7.02%  │   ╰││      0x00007f629c73fce2: jne    0x00007f629c73fcaf             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
         │    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
         │    ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.79%  │    ╰│      0x00007f629c73fce4: jmp    0x00007f629c73fca1             ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │     │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
         │     │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.43%  ↘     │      0x00007f629c73fce6: mov    0x108(%r15),%r13               ; ImmutableOopMap{r11=NarrowOop rcx=Oop rdx=Oop rsi=Oop rax=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
               │                                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.30%        │      0x00007f629c73fced: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
               │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               │                                                                ;   {poll}
  0.20%        │      0x00007f629c73fcf1: cmp    %r9d,%r8d
               ╰      0x00007f629c73fcf4: jl     0x00007f629c73fcb8
                      0x00007f629c73fcf6: cmp    %r10d,%r8d
                ╭     0x00007f629c73fcf9: jge    0x00007f629c73fd21
                │     0x00007f629c73fcfb: nop                                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%         │  ↗  0x00007f629c73fcfc: vmovss 0x10(%rdx,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@15 (line 126)
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%         │  │  0x00007f629c73fd03: vucomiss %xmm1,%xmm1
                │╭ │  0x00007f629c73fd07: jp     0x00007f629c73fd19
                ││╭│  0x00007f629c73fd09: jne    0x00007f629c73fd19             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@16 (line 126)
                ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                ││││  0x00007f629c73fd0b: vaddss 0x10(%rax,%r8,4),%xmm1,%xmm1
  0.02%         ││││  0x00007f629c73fd12: vmovss %xmm1,0x10(%rsi,%r8,4)
  0.02%         │↘↘│  0x00007f629c73fd19: inc    %r8d                           ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@102 (line 125)
                │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                │  │  0x00007f629c73fd1c: cmp    %r10d,%r8d
                │  ╰  0x00007f629c73fd1f: jl     0x00007f629c73fcfc             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@10 (line 126)
                │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                ↘     0x00007f629c73fd21: mov    %rcx,0x40(%rsp)                ;*invokevirtual verticalSumNaNCheckOptimistic {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007f629c73fd26: mov    %r11,%rdx
  0.04%               0x00007f629c73fd29: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@84 (line 133)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007f629c73fd2d: mov    (%rsp),%rsi
                      0x00007f629c73fd31: xchg   %ax,%ax
                      0x00007f629c73fd33: callq  0x00007f629c6bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                                                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
                                                                                ;   {optimized virtual_call}
  0.20%               0x00007f629c73fd38: mov    0x40(%rsp),%rcx
                      0x00007f629c73fd3d: movzbl 0x94(%rcx),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckOptimistic@105 (line 125)
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                      0x00007f629c73fd45: mov    0x108(%r15),%r10
                      0x00007f629c73fd4c: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
                                                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
....................................................................................................
 96.50%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.50%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (151 bytes) 
  2.31%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.28%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (65 bytes) 
  0.24%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (48 bytes) 
  0.18%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 (63 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.16%  <...other 8 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.92%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckOptimistic_jmhTest::verticalSumNaNCheckOptimistic_thrpt_jmhStub, version 130 
  2.67%   [kernel.kallsyms]  [unknown] 
  0.28%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.02%           libjvm.so  _ZNK13InstanceKlass21should_be_initializedEv 
  0.02%           libjvm.so  _ZNK15G1CollectionSet7iterateEP17HeapRegionClosure 
  0.02%  libpthread-2.23.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.02%           libjvm.so  _ZN21ThreadStateTransition22transition_from_nativeEP10JavaThread15JavaThreadState.constprop.186 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN9metaspace12SpaceManager8allocateEm 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.19%                  c2
  2.67%   [kernel.kallsyms]
  0.08%           libjvm.so
  0.02%  libpthread-2.23.so
  0.02%         interpreter
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckPessimistic
# Parameters: (probabilityOfNaN = 0, size = 1024)

# Run progress: 55.56% complete, ETA 00:07:12
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 739.973 ops/ms
# Warmup Iteration   2: 753.642 ops/ms
# Warmup Iteration   3: 774.585 ops/ms
# Warmup Iteration   4: 770.560 ops/ms
# Warmup Iteration   5: 765.821 ops/ms
Iteration   1: 763.031 ops/ms
Iteration   2: 775.829 ops/ms
Iteration   3: 761.722 ops/ms
Iteration   4: 775.324 ops/ms
Iteration   5: 818.947 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 56.79% complete, ETA 00:07:00
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 917.555 ops/ms
# Warmup Iteration   2: 908.998 ops/ms
# Warmup Iteration   3: 931.792 ops/ms
# Warmup Iteration   4: 927.675 ops/ms
# Warmup Iteration   5: 777.124 ops/ms
Iteration   1: 739.535 ops/ms
Iteration   2: 756.088 ops/ms
Iteration   3: 736.137 ops/ms
Iteration   4: 767.682 ops/ms
Iteration   5: 806.919 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 58.02% complete, ETA 00:06:48
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 707.298 ops/ms
# Warmup Iteration   2: 750.956 ops/ms
# Warmup Iteration   3: 735.966 ops/ms
# Warmup Iteration   4: 761.129 ops/ms
# Warmup Iteration   5: 851.693 ops/ms
Iteration   1: 952.067 ops/ms
Iteration   2: 860.140 ops/ms
Iteration   3: 837.592 ops/ms
Iteration   4: 820.183 ops/ms
Iteration   5: 795.909 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckPessimistic":
  797.807 ±(99.9%) 59.691 ops/ms [Average]
  (min, avg, max) = (736.137, 797.807, 952.067), stdev = 55.835
  CI (99.9%): [738.116, 857.498] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckPessimistic:·asm":
PrintAssembly processed: 51356 total address lines.
Perf output processed (skipped 6.664 seconds):
 Column 1: cycles (5092 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (212 bytes) 

             0x00007f99a78adc56: jae    0x00007f99a78adf38
             0x00007f99a78adc5c: vmovss 0x10(%r12,%r8,8),%xmm0         ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
                                                                       ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
             0x00007f99a78adc63: vucomiss %xmm0,%xmm0
             0x00007f99a78adc67: jp     0x00007f99a78adf76
             0x00007f99a78adc6d: jne    0x00007f99a78adf76             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.Float::isNaN@3 (line 467)
                                                                       ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
                                                                       ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%      0x00007f99a78adc73: vmovss 0x10(%r12,%rdi,8),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
                                                                       ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
             0x00007f99a78adc7a: vucomiss %xmm1,%xmm1
             0x00007f99a78adc7e: jp     0x00007f99a78adf7e
  0.02%      0x00007f99a78adc84: jne    0x00007f99a78adf7e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.Float::isNaN@3 (line 467)
                                                                       ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
                                                                       ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
             0x00007f99a78adc8a: vaddss %xmm1,%xmm0,%xmm0
             0x00007f99a78adc8e: vmovss %xmm0,0x10(%r12,%rcx,8)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@52 (line 117)
                                                                       ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
             0x00007f99a78adc95: mov    %ebp,%r9d
             0x00007f99a78adc98: dec    %r9d
  0.02%      0x00007f99a78adc9b: cmp    %r9d,%ebp
             0x00007f99a78adc9e: mov    $0x80000000,%edx
             0x00007f99a78adca3: cmovl  %edx,%r9d
             0x00007f99a78adca7: shl    $0x3,%rdi
  0.06%      0x00007f99a78adcab: lea    (%r12,%r8,8),%rsi
             0x00007f99a78adcaf: lea    (%r12,%rcx,8),%rax
             0x00007f99a78adcb3: cmp    $0x1,%r9d
             0x00007f99a78adcb7: jle    0x00007f99a78adf4e
             0x00007f99a78adcbd: mov    $0x1,%edx                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
                                                                       ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 12.41%  ↗↗  0x00007f99a78adcc2: vmovss 0x10(%rsi,%rdx,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%  ││  0x00007f99a78adcc8: vucomiss %xmm0,%xmm0
  0.18%  ││  0x00007f99a78adccc: jp     0x00007f99a78ade3e
  2.14%  ││  0x00007f99a78adcd2: jne    0x00007f99a78ade3e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 13.53%  ││  0x00007f99a78adcd8: vmovss 0x10(%rdi,%rdx,4),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%  ││  0x00007f99a78adcde: vucomiss %xmm1,%xmm1
  0.20%  ││  0x00007f99a78adce2: jp     0x00007f99a78ade7a
  3.14%  ││  0x00007f99a78adce8: jne    0x00007f99a78ade7a             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 12.82%  ││  0x00007f99a78adcee: vaddss %xmm1,%xmm0,%xmm1
  0.04%  ││  0x00007f99a78adcf2: vmovss %xmm1,0x10(%rax,%rdx,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@52 (line 117)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%  ││  0x00007f99a78adcf8: vmovss 0x14(%rsi,%rdx,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.73%  ││  0x00007f99a78adcfe: mov    %edx,%r11d
 12.80%  ││  0x00007f99a78add01: inc    %r11d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ││  0x00007f99a78add04: vucomiss %xmm0,%xmm0
  0.10%  ││  0x00007f99a78add08: jp     0x00007f99a78ade41
  2.12%  ││  0x00007f99a78add0e: jne    0x00007f99a78ade41             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 13.79%  ││  0x00007f99a78add14: vmovss 0x14(%rdi,%rdx,4),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.16%  ││  0x00007f99a78add1a: vucomiss %xmm1,%xmm1
  0.18%  ││  0x00007f99a78add1e: jp     0x00007f99a78ade7d
  3.34%  ││  0x00007f99a78add24: jne    0x00007f99a78ade7d             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 14.47%  ││  0x00007f99a78add2a: vaddss %xmm1,%xmm0,%xmm1
  0.04%  ││  0x00007f99a78add2e: vmovss %xmm1,0x14(%rax,%rdx,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@52 (line 117)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%  ││  0x00007f99a78add34: add    $0x2,%edx                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.73%  ││  0x00007f99a78add37: cmp    %r9d,%edx
  0.02%  ╰│  0x00007f99a78add3a: jl     0x00007f99a78adcc2             ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@56 (line 115)
          │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │  0x00007f99a78add3c: mov    0x108(%r15),%r13               ; ImmutableOopMap{r10=Oop rcx=NarrowOop rdi=Oop rsi=Oop rax=Oop [88]=Oop [96]=Oop [104]=Oop [8]=Oop }
          │                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@56 (line 115)
          │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%   │  0x00007f99a78add43: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@56 (line 115)
          │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │                                                            ;   {poll}
  0.04%   │  0x00007f99a78add47: cmp    %r9d,%edx
          ╰  0x00007f99a78add4a: jl     0x00007f99a78adcc2
             0x00007f99a78add50: cmp    %ebp,%edx
             0x00007f99a78add52: jge    0x00007f99a78add90             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
                                                                       ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
             0x00007f99a78add54: vmovss 0x10(%rsi,%rdx,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
....................................................................................................
 95.38%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.38%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (212 bytes) 
  2.63%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.71%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (65 bytes) 
  0.26%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (89 bytes) 
  0.22%   [kernel.kallsyms]  [unknown] (68 bytes) 
  0.16%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (47 bytes) 
  0.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (4 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (1 bytes) 
  0.06%         interpreter  method entry point (kind = zerolocals)  (4 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.16%  <...other 8 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.90%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 
  3.24%   [kernel.kallsyms]  [unknown] 
  0.71%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  areturn  176 areturn  
  0.02%           libjvm.so  _ZN22ConstantPoolCacheEntry15set_vtable_callEN9Bytecodes4CodeERK12methodHandlei 
  0.02%         interpreter  iload_1  27 iload_1  
  0.02%           libjvm.so  _ZN13InstanceKlass17find_method_indexEPK5ArrayIP6MethodEPK6SymbolS8_N5Klass18OverpassLookupModeENS9_16StaticLookupModeENS9_17PrivateLookupModeE.constprop.305 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.60%                  c2
  3.24%   [kernel.kallsyms]
  0.10%         interpreter
  0.04%           libjvm.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51436 total address lines.
Perf output processed (skipped 6.450 seconds):
 Column 1: cycles (5135 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (133 bytes) 

  0.02%      0x00007f173073fd1e: mov    $0x80000000,%edx
             0x00007f173073fd23: cmovl  %edx,%r9d
             0x00007f173073fd27: shl    $0x3,%rdi
             0x00007f173073fd2b: lea    (%r12,%r8,8),%rsi
             0x00007f173073fd2f: lea    (%r12,%rcx,8),%rax
             0x00007f173073fd33: cmp    $0x1,%r9d
             0x00007f173073fd37: jle    0x00007f173073ffce
             0x00007f173073fd3d: mov    $0x1,%edx                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
                                                                       ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 11.10%  ↗↗  0x00007f173073fd42: vmovss 0x10(%rsi,%rdx,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%  ││  0x00007f173073fd48: vucomiss %xmm0,%xmm0
  0.23%  ││  0x00007f173073fd4c: jp     0x00007f173073febe
  2.80%  ││  0x00007f173073fd52: jne    0x00007f173073febe             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 14.04%  ││  0x00007f173073fd58: vmovss 0x10(%rdi,%rdx,4),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.10%  ││  0x00007f173073fd5e: vucomiss %xmm1,%xmm1
  0.23%  ││  0x00007f173073fd62: jp     0x00007f173073fefa
  3.19%  ││  0x00007f173073fd68: jne    0x00007f173073fefa             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 11.94%  ││  0x00007f173073fd6e: vaddss %xmm1,%xmm0,%xmm1
  0.10%  ││  0x00007f173073fd72: vmovss %xmm1,0x10(%rax,%rdx,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@52 (line 117)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.12%  ││  0x00007f173073fd78: vmovss 0x14(%rsi,%rdx,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.06%  ││  0x00007f173073fd7e: mov    %edx,%r11d
 11.14%  ││  0x00007f173073fd81: inc    %r11d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%  ││  0x00007f173073fd84: vucomiss %xmm0,%xmm0
  0.14%  ││  0x00007f173073fd88: jp     0x00007f173073fec1
  2.30%  ││  0x00007f173073fd8e: jne    0x00007f173073fec1             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 14.26%  ││  0x00007f173073fd94: vmovss 0x14(%rdi,%rdx,4),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.58%  ││  0x00007f173073fd9a: vucomiss %xmm1,%xmm1
  0.27%  ││  0x00007f173073fd9e: jp     0x00007f173073fefd
  3.21%  ││  0x00007f173073fda4: jne    0x00007f173073fefd             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 13.98%  ││  0x00007f173073fdaa: vaddss %xmm1,%xmm0,%xmm1
  0.19%  ││  0x00007f173073fdae: vmovss %xmm1,0x14(%rax,%rdx,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@52 (line 117)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.19%  ││  0x00007f173073fdb4: add    $0x2,%edx                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
         ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.10%  ││  0x00007f173073fdb7: cmp    %r9d,%edx
  0.04%  ╰│  0x00007f173073fdba: jl     0x00007f173073fd42             ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@56 (line 115)
          │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%   │  0x00007f173073fdbc: mov    0x108(%r15),%r13               ; ImmutableOopMap{r10=Oop rcx=NarrowOop rdi=Oop rsi=Oop rax=Oop [88]=Oop [96]=Oop [104]=Oop [8]=Oop }
          │                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@56 (line 115)
          │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.16%   │  0x00007f173073fdc3: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@56 (line 115)
          │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │                                                            ;   {poll}
  0.06%   │  0x00007f173073fdc7: cmp    %r9d,%edx
          ╰  0x00007f173073fdca: jl     0x00007f173073fd42
             0x00007f173073fdd0: cmp    %ebp,%edx
             0x00007f173073fdd2: jge    0x00007f173073fe10             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
                                                                       ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
             0x00007f173073fdd4: vmovss 0x10(%rsi,%rdx,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
....................................................................................................
 94.68%  <total for region 1>

....[Hottest Regions]...............................................................................
 94.68%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (133 bytes) 
  3.12%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.49%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (179 bytes) 
  0.37%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (77 bytes) 
  0.25%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (68 bytes) 
  0.18%   [kernel.kallsyms]  [unknown] (17 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (1 bytes) 
  0.06%         interpreter  method entry point (kind = zerolocals)  (7 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (13 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         classes.jsa  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.41%  <...other 21 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.54%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 
  3.78%   [kernel.kallsyms]  [unknown] 
  0.25%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.10%         interpreter  method entry point (kind = zerolocals)  
  0.04%         classes.jsa  [unknown] 
  0.02%           libjvm.so  _ZN20ThreadSafepointState23examine_state_of_threadEv 
  0.02%         interpreter  aload_1  43 aload_1  
  0.02%        libc-2.23.so  __strncpy_sse2 
  0.02%         interpreter  invoke return entry points  
  0.02%         interpreter  method entry point (kind = native)  
  0.02%       libz.so.1.2.8  inflate 
  0.02%         interpreter  ireturn  172 ireturn  
  0.02%         interpreter  nofast_getfield  234 nofast_getfield  
  0.02%                      <unknown> 
  0.02%           libjvm.so  _ZN18PerfClassTraceTimeD1Ev 
  0.02%           libjvm.so  _ZN13InstanceKlass16array_klass_implEbiP6Thread 
  0.02%         interpreter  aconst_null  1 aconst_null  
  0.02%         interpreter  if_icmpge  162 if_icmpge  
  0.02%           libjvm.so  _ZN18vframeStreamCommon13security_nextEv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.79%                  c2
  3.78%   [kernel.kallsyms]
  0.23%         interpreter
  0.08%           libjvm.so
  0.04%         classes.jsa
  0.02%                    
  0.02%        libc-2.23.so
  0.02%       libz.so.1.2.8
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51416 total address lines.
Perf output processed (skipped 6.673 seconds):
 Column 1: cycles (5028 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (257 bytes) 

               0x00007fa4b473fc1e: mov    $0x80000000,%edx
               0x00007fa4b473fc23: cmovl  %edx,%r9d
               0x00007fa4b473fc27: shl    $0x3,%rdi
               0x00007fa4b473fc2b: lea    (%r12,%r8,8),%rsi
               0x00007fa4b473fc2f: lea    (%r12,%rcx,8),%rax
               0x00007fa4b473fc33: cmp    $0x1,%r9d
               0x00007fa4b473fc37: jle    0x00007fa4b473fece
               0x00007fa4b473fc3d: mov    $0x1,%edx                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 12.07%  ↗↗    0x00007fa4b473fc42: vmovss 0x10(%rsi,%rdx,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%  ││    0x00007fa4b473fc48: vucomiss %xmm0,%xmm0
  0.40%  ││    0x00007fa4b473fc4c: jp     0x00007fa4b473fdbe
  2.86%  ││    0x00007fa4b473fc52: jne    0x00007fa4b473fdbe             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 13.54%  ││    0x00007fa4b473fc58: vmovss 0x10(%rdi,%rdx,4),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%  ││    0x00007fa4b473fc5e: vucomiss %xmm1,%xmm1
  0.32%  ││    0x00007fa4b473fc62: jp     0x00007fa4b473fdfa
  3.16%  ││    0x00007fa4b473fc68: jne    0x00007fa4b473fdfa             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 12.21%  ││    0x00007fa4b473fc6e: vaddss %xmm1,%xmm0,%xmm1
  0.04%  ││    0x00007fa4b473fc72: vmovss %xmm1,0x10(%rax,%rdx,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@52 (line 117)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.18%  ││    0x00007fa4b473fc78: vmovss 0x14(%rsi,%rdx,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.11%  ││    0x00007fa4b473fc7e: mov    %edx,%r11d
 12.21%  ││    0x00007fa4b473fc81: inc    %r11d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ││    0x00007fa4b473fc84: vucomiss %xmm0,%xmm0
  0.30%  ││    0x00007fa4b473fc88: jp     0x00007fa4b473fdc1
  3.04%  ││    0x00007fa4b473fc8e: jne    0x00007fa4b473fdc1             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 14.00%  ││    0x00007fa4b473fc94: vmovss 0x14(%rdi,%rdx,4),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.14%  ││    0x00007fa4b473fc9a: vucomiss %xmm1,%xmm1
  0.42%  ││    0x00007fa4b473fc9e: jp     0x00007fa4b473fdfd
  2.90%  ││    0x00007fa4b473fca4: jne    0x00007fa4b473fdfd             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 14.18%  ││    0x00007fa4b473fcaa: vaddss %xmm1,%xmm0,%xmm1
  0.02%  ││    0x00007fa4b473fcae: vmovss %xmm1,0x14(%rax,%rdx,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@52 (line 117)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.16%  ││    0x00007fa4b473fcb4: add    $0x2,%edx                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
         ││                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.05%  ││    0x00007fa4b473fcb7: cmp    %r9d,%edx
         ╰│    0x00007fa4b473fcba: jl     0x00007fa4b473fc42             ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@56 (line 115)
          │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │    0x00007fa4b473fcbc: mov    0x108(%r15),%r13               ; ImmutableOopMap{r10=Oop rcx=NarrowOop rdi=Oop rsi=Oop rax=Oop [88]=Oop [96]=Oop [104]=Oop [8]=Oop }
          │                                                              ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@56 (line 115)
          │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%   │    0x00007fa4b473fcc3: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@56 (line 115)
          │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │                                                              ;   {poll}
  0.16%   │    0x00007fa4b473fcc7: cmp    %r9d,%edx
          ╰    0x00007fa4b473fcca: jl     0x00007fa4b473fc42
               0x00007fa4b473fcd0: cmp    %ebp,%edx
           ╭   0x00007fa4b473fcd2: jge    0x00007fa4b473fd10             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
           │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
           │↗  0x00007fa4b473fcd4: vmovss 0x10(%rsi,%rdx,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007fa4b473fcda: vucomiss %xmm0,%xmm0
           ││  0x00007fa4b473fcde: jp     0x00007fa4b473ff16
  0.02%    ││  0x00007fa4b473fce4: jne    0x00007fa4b473ff16             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007fa4b473fcea: vmovss 0x10(%rdi,%rdx,4),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007fa4b473fcf0: vucomiss %xmm1,%xmm1
  0.02%    ││  0x00007fa4b473fcf4: jp     0x00007fa4b473ff1e
           ││  0x00007fa4b473fcfa: jne    0x00007fa4b473ff1e             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - java.lang.Float::isNaN@3 (line 467)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%    ││  0x00007fa4b473fd00: vaddss %xmm1,%xmm0,%xmm1
           ││  0x00007fa4b473fd04: vmovss %xmm1,0x10(%rax,%rdx,4)        ;*fastore {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@52 (line 117)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%    ││  0x00007fa4b473fd0a: inc    %edx                           ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007fa4b473fd0c: cmp    %ebp,%edx
           │╰  0x00007fa4b473fd0e: jl     0x00007fa4b473fcd4             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@7 (line 115)
           │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
           ↘   0x00007fa4b473fd10: mov    %r10,%rbp
               0x00007fa4b473fd13: mov    %rbx,0x50(%rsp)                ;*invokevirtual verticalSumNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%        0x00007fa4b473fd18: mov    %rcx,%rdx
               0x00007fa4b473fd1b: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@35 (line 117)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
               0x00007fa4b473fd1f: mov    0x8(%rsp),%rsi
               0x00007fa4b473fd24: data16 xchg %ax,%ax
  0.04%        0x00007fa4b473fd27: callq  0x00007fa4b46bf900             ; ImmutableOopMap{rbp=Oop [88]=Oop [96]=Oop [104]=Oop [8]=Oop }
                                                                         ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
                                                                         ;   {optimized virtual_call}
  0.30%        0x00007fa4b473fd2c: mov    %rbp,%r10
               0x00007fa4b473fd2f: movzbl 0x94(%rbp),%r8d                ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@56 (line 115)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
               0x00007fa4b473fd37: mov    0x108(%r15),%r11
               0x00007fa4b473fd3e: mov    0x50(%rsp),%rbx
  0.02%        0x00007fa4b473fd43: add    $0x1,%rbx                      ; ImmutableOopMap{r10=Oop rbp=Oop [88]=Oop [96]=Oop [104]=Oop [8]=Oop }
                                                                         ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
               0x00007fa4b473fd47: test   %eax,(%r11)                    ;   {poll}
               0x00007fa4b473fd4a: test   %r8d,%r8d
               0x00007fa4b473fd4d: je     0x00007fa4b473fb66             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
               0x00007fa4b473fd53: jmpq   0x00007fa4b473fe48
               0x00007fa4b473fd58: mov    %ebx,%r11d                     ;*synchronization entry
                                                                         ; - java.lang.Float::isNaN@-1 (line 467)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
....................................................................................................
 97.12%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.12%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (257 bytes) 
  1.45%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.32%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (45 bytes) 
  0.22%   [kernel.kallsyms]  [unknown] (42 bytes) 
  0.20%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (55 bytes) 
  0.10%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.08%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (62 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.16%  <...other 8 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.39%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 
  2.13%   [kernel.kallsyms]  [unknown] 
  0.32%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.02%         interpreter  areturn  176 areturn  
  0.02%           libjvm.so  _ZN18InterpreterRuntime21build_method_countersEP10JavaThreadP6Method 
  0.02%         interpreter  invoke return entry points  
  0.02%           libjvm.so  _ZN15PerfLongVariant6sampleEv 
  0.02%           libjvm.so  JVM_FindLoadedClass 
  0.02%           libjvm.so  _ZNK6vframe6senderEv 
  0.02%           libjvm.so  _ZN9JavaCalls11call_helperEP9JavaValueRK12methodHandleP17JavaCallArgumentsP6Thread 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.71%                  c2
  2.13%   [kernel.kallsyms]
  0.10%           libjvm.so
  0.04%         interpreter
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckPessimistic
# Parameters: (probabilityOfNaN = 0.001, size = 1024)

# Run progress: 59.26% complete, ETA 00:06:36
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 867.027 ops/ms
# Warmup Iteration   2: 907.647 ops/ms
# Warmup Iteration   3: 909.105 ops/ms
# Warmup Iteration   4: 885.075 ops/ms
# Warmup Iteration   5: 914.568 ops/ms
Iteration   1: 926.281 ops/ms
Iteration   2: 911.041 ops/ms
Iteration   3: 921.832 ops/ms
Iteration   4: 930.321 ops/ms
Iteration   5: 901.174 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 60.49% complete, ETA 00:06:24
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 879.801 ops/ms
# Warmup Iteration   2: 917.033 ops/ms
# Warmup Iteration   3: 934.817 ops/ms
# Warmup Iteration   4: 934.379 ops/ms
# Warmup Iteration   5: 939.814 ops/ms
Iteration   1: 926.429 ops/ms
Iteration   2: 925.258 ops/ms
Iteration   3: 934.091 ops/ms
Iteration   4: 930.261 ops/ms
Iteration   5: 933.522 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 61.73% complete, ETA 00:06:12
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 933.843 ops/ms
# Warmup Iteration   2: 924.542 ops/ms
# Warmup Iteration   3: 932.566 ops/ms
# Warmup Iteration   4: 928.949 ops/ms
# Warmup Iteration   5: 937.106 ops/ms
Iteration   1: 937.541 ops/ms
Iteration   2: 939.008 ops/ms
Iteration   3: 940.011 ops/ms
Iteration   4: 935.259 ops/ms
Iteration   5: 929.722 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckPessimistic":
  928.117 ±(99.9%) 11.242 ops/ms [Average]
  (min, avg, max) = (901.174, 928.117, 940.011), stdev = 10.516
  CI (99.9%): [916.875, 939.359] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckPessimistic:·asm":
PrintAssembly processed: 51181 total address lines.
Perf output processed (skipped 6.487 seconds):
 Column 1: cycles (5040 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 129 (321 bytes) 

                       0x00007fe78c73ee96: jbe    0x00007fe78c73f0de
                       0x00007fe78c73ee9c: movslq %r8d,%r8
                       0x00007fe78c73ee9f: cmp    %r8,%rcx
                       0x00007fe78c73eea2: jae    0x00007fe78c73f0de
                       0x00007fe78c73eea8: mov    0xc(%r12,%r10,8),%r9d          ;*fastore {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@52 (line 117)
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                                                                                 ; implicit exception: dispatches to 0x00007fe78c73f0de
                       0x00007fe78c73eead: test   %r9d,%r9d
                       0x00007fe78c73eeb0: jbe    0x00007fe78c73f0de
  0.06%                0x00007fe78c73eeb6: movslq %r9d,%r8
                       0x00007fe78c73eeb9: cmp    %r8,%rcx
                       0x00007fe78c73eebc: jae    0x00007fe78c73f0de
                       0x00007fe78c73eec2: vmovss 0x10(%r12,%rdi,8),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                       0x00007fe78c73eec9: vucomiss %xmm1,%xmm1
  0.04%  ╭             0x00007fe78c73eecd: jp     0x00007fe78c73eef3
  0.02%  │╭            0x00007fe78c73eecf: jne    0x00007fe78c73eef3             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                                      ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                                      ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
         ││                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%  ││            0x00007fe78c73eed1: vmovss 0x10(%r12,%rdx,8),%xmm2        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                                      ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
         ││                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ││            0x00007fe78c73eed8: vucomiss %xmm2,%xmm2
  0.02%  ││            0x00007fe78c73eedc: jp     0x00007fe78c73f100
  0.02%  ││            0x00007fe78c73eee2: jne    0x00007fe78c73f100             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                                      ; - java.lang.Float::isNaN@3 (line 467)
         ││                                                                      ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
         ││                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ││            0x00007fe78c73eee8: vaddss %xmm2,%xmm1,%xmm1
         ││            0x00007fe78c73eeec: vmovss %xmm1,0x10(%r12,%r10,8)        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││                                                                      ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
         ││                                                                      ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%  ↘↘            0x00007fe78c73eef3: mov    %ebp,%r8d
  0.02%                0x00007fe78c73eef6: dec    %r8d
  0.02%                0x00007fe78c73eef9: cmp    %r8d,%ebp
                       0x00007fe78c73eefc: mov    $0x80000000,%r9d
  0.02%                0x00007fe78c73ef02: cmovl  %r9d,%r8d
                       0x00007fe78c73ef06: shl    $0x3,%rdx
                       0x00007fe78c73ef0a: lea    (%r12,%rdi,8),%rsi
                       0x00007fe78c73ef0e: lea    (%r12,%r10,8),%rax
                       0x00007fe78c73ef12: cmp    $0x1,%r8d
                       0x00007fe78c73ef16: jle    0x00007fe78c73f0f6
  0.04%                0x00007fe78c73ef1c: mov    $0x1,%edi                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  4.72%        ↗↗      0x00007fe78c73ef21: vmovss 0x10(%rsi,%rdi,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.92%        ││      0x00007fe78c73ef27: vucomiss %xmm0,%xmm0
  2.98%    ╭   ││      0x00007fe78c73ef2b: jp     0x00007fe78c73ef4f
  8.23%    │╭  ││      0x00007fe78c73ef2d: jne    0x00007fe78c73ef4f             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
           ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
           ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
           ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.55%    ││  ││      0x00007fe78c73ef2f: vmovss 0x10(%rdx,%rdi,4),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
           ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
           ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.66%    ││  ││      0x00007fe78c73ef35: vucomiss %xmm1,%xmm1
  3.15%    ││  ││      0x00007fe78c73ef39: jp     0x00007fe78c73f01c
  6.94%    ││  ││      0x00007fe78c73ef3f: jne    0x00007fe78c73f01c             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
           ││  ││                                                                ; - java.lang.Float::isNaN@3 (line 467)
           ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
           ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  5.22%    ││  ││      0x00007fe78c73ef45: vaddss %xmm1,%xmm0,%xmm0
  2.66%    ││  ││      0x00007fe78c73ef49: vmovss %xmm0,0x10(%rax,%rdi,4)        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
           ││  ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.45%    ↘↘  ││      0x00007fe78c73ef4f: vmovss 0x14(%rsi,%rdi,4),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  4.05%        ││      0x00007fe78c73ef55: vucomiss %xmm1,%xmm1
  4.25%      ╭ ││      0x00007fe78c73ef59: jp     0x00007fe78c73ef7d
  5.75%      │╭││      0x00007fe78c73ef5b: jne    0x00007fe78c73ef7d             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
             ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
             ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
             ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  4.74%      ││││      0x00007fe78c73ef5d: vmovss 0x14(%rdx,%rdi,4),%xmm2        ;*faload {reexecute=0 rethrow=0 return_oop=0}
             ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
             ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.88%      ││││      0x00007fe78c73ef63: vucomiss %xmm2,%xmm2
  3.41%      ││││      0x00007fe78c73ef67: jp     0x00007fe78c73f01a
  6.19%      ││││      0x00007fe78c73ef6d: jne    0x00007fe78c73f01a             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
             ││││                                                                ; - java.lang.Float::isNaN@3 (line 467)
             ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
             ││││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.03%      ││││      0x00007fe78c73ef73: vaddss %xmm2,%xmm1,%xmm1
  3.27%      ││││      0x00007fe78c73ef77: vmovss %xmm1,0x14(%rax,%rdi,4)
  3.10%      ↘↘││      0x00007fe78c73ef7d: add    $0x2,%edi                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
               ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.51%        ││      0x00007fe78c73ef80: cmp    %r8d,%edi
               ╰│      0x00007fe78c73ef83: jl     0x00007fe78c73ef21             ;*goto {reexecute=0 rethrow=0 return_oop=0}
                │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@56 (line 115)
                │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%         │      0x00007fe78c73ef85: mov    0x108(%r15),%r13               ; ImmutableOopMap{r10=NarrowOop r11=Oop rdx=Oop rsi=Oop rax=Oop [64]=Oop [80]=Oop [88]=Oop [0]=Oop }
                │                                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@56 (line 115)
                │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%         │      0x00007fe78c73ef8c: test   %eax,0x0(%r13)                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
                │                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@56 (line 115)
                │                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                │                                                                ;   {poll}
  0.08%         │      0x00007fe78c73ef90: cmp    %r8d,%edi
                ╰      0x00007fe78c73ef93: jl     0x00007fe78c73ef21
                       0x00007fe78c73ef95: cmp    %ebp,%edi
                 ╭     0x00007fe78c73ef97: jge    0x00007fe78c73efc8
                 │     0x00007fe78c73ef99: data16 xchg %ax,%ax                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                 │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
                 │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 │  ↗  0x00007fe78c73ef9c: vmovss 0x10(%rsi,%rdi,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
                 │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
                 │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%          │  │  0x00007fe78c73efa2: vucomiss %xmm0,%xmm0
                 │╭ │  0x00007fe78c73efa6: jp     0x00007fe78c73efc2
                 ││╭│  0x00007fe78c73efa8: jne    0x00007fe78c73efc2             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                 ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                 ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
                 ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 ││││  0x00007fe78c73efaa: vmovss 0x10(%rdx,%rdi,4),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
                 ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
                 ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 ││││  0x00007fe78c73efb0: vucomiss %xmm1,%xmm1
                 ││││  0x00007fe78c73efb4: jp     0x00007fe78c73f01c
  0.02%          ││││  0x00007fe78c73efb6: jne    0x00007fe78c73f01c             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                 ││││                                                            ; - java.lang.Float::isNaN@3 (line 467)
                 ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
                 ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%          ││││  0x00007fe78c73efb8: vaddss %xmm1,%xmm0,%xmm0
                 ││││  0x00007fe78c73efbc: vmovss %xmm0,0x10(%rax,%rdi,4)
                 │↘↘│  0x00007fe78c73efc2: inc    %edi                           ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                 │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
                 │  │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 │  │  0x00007fe78c73efc4: cmp    %ebp,%edi
                 │  ╰  0x00007fe78c73efc6: jl     0x00007fe78c73ef9c             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                 │                                                               ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@7 (line 115)
                 │                                                               ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 ↘     0x00007fe78c73efc8: mov    %r11,%rbp
                       0x00007fe78c73efcb: mov    %rbx,0x48(%rsp)                ;*invokevirtual verticalSumNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%                0x00007fe78c73efd0: mov    %r10,%rdx
                       0x00007fe78c73efd3: shl    $0x3,%rdx                      ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@35 (line 117)
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                       0x00007fe78c73efd7: mov    (%rsp),%rsi
                       0x00007fe78c73efdb: callq  0x00007fe78c6bf900             ; ImmutableOopMap{rbp=Oop [64]=Oop [80]=Oop [88]=Oop [0]=Oop }
                                                                                 ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
                                                                                 ;   {optimized virtual_call}
  0.16%                0x00007fe78c73efe0: mov    %rbp,%r11
                       0x00007fe78c73efe3: movzbl 0x94(%rbp),%r10d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@56 (line 115)
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                       0x00007fe78c73efeb: mov    0x108(%r15),%r8
                       0x00007fe78c73eff2: mov    0x48(%rsp),%rbx
  0.02%                0x00007fe78c73eff7: add    $0x1,%rbx                      ; ImmutableOopMap{r11=Oop rbp=Oop [64]=Oop [80]=Oop [88]=Oop [0]=Oop }
                                                                                 ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
                       0x00007fe78c73effb: test   %eax,(%r8)                     ;   {poll}
                       0x00007fe78c73effe: test   %r10d,%r10d
                       0x00007fe78c73f001: je     0x00007fe78c73ee47             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
                       0x00007fe78c73f007: jmp    0x00007fe78c73f045
                       0x00007fe78c73f009: inc    %edi                           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@31 (line 116)
                                                                                 ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
....................................................................................................
 97.46%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.46%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 129 (321 bytes) 
  1.35%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.16%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.16%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (14 bytes) 
  0.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 129 (18 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (12 bytes) 
  0.04%         interpreter  iadd  96 iadd  (14 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.30%  <...other 15 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.56%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 129 
  1.96%   [kernel.kallsyms]  [unknown] 
  0.18%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
  0.04%         interpreter  method entry point (kind = native)  
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%         interpreter  iadd  96 iadd  
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%           libjvm.so  _ZN14AccessInternal19PostRuntimeDispatchIN12G1BarrierSet13AccessBarrierILm802934ES1_EELNS_11BarrierTypeE1ELm802934EE18oop_access_barrierEP7oopDesclS7_ 
  0.02%           libjvm.so  _ZN13MallocTracker11record_freeEPv 
  0.02%         interpreter  ireturn  172 ireturn  
  0.02%                  c2  java.lang.Math::min, version 94 
  0.02%           libjvm.so  _ZL14method_matchesPK6MethodPK6Symbolbbb 
  0.02%         classes.jsa  [unknown] 
  0.02%           libjvm.so  _ZN15PerfLongCounterD0Ev 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.76%                  c2
  1.96%   [kernel.kallsyms]
  0.16%         interpreter
  0.08%           libjvm.so
  0.02%         classes.jsa
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51277 total address lines.
Perf output processed (skipped 6.423 seconds):
 Column 1: cycles (4995 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (86 bytes) 

                   0x00007f1b0473f833: mov    $0x80000000,%r8d
                   0x00007f1b0473f839: cmovl  %r8d,%ebx
                   0x00007f1b0473f83d: lea    (%r12,%rbp,8),%rsi
                   0x00007f1b0473f841: shl    $0x3,%rdx
                   0x00007f1b0473f845: lea    (%r12,%rcx,8),%rax
                   0x00007f1b0473f849: cmp    $0x1,%ebx
                   0x00007f1b0473f84c: jle    0x00007f1b0473fbb2
                   0x00007f1b0473f852: mov    $0x1,%edi
                   0x00007f1b0473f857: jmpq   0x00007f1b0473f8f1
                   0x00007f1b0473f85c: nopl   0x0(%rax)
  5.97%         ↗  0x00007f1b0473f860: vaddss %xmm2,%xmm1,%xmm1
  0.72%         │  0x00007f1b0473f864: vmovss %xmm1,0x14(%rax,%rdi,4)
  5.73%      ↗↗ │  0x00007f1b0473f86a: add    $0x2,%edi                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
             ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
             ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.92%      ││ │  0x00007f1b0473f86d: cmp    %r8d,%edi
             ││ │  0x00007f1b0473f870: jge    0x00007f1b0473f9c8             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
             ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
             ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  8.39%      ││ │  0x00007f1b0473f876: vmovss 0x10(%rsi,%rdi,4),%xmm0        ;*faload {reexecute=0 rethrow=0 return_oop=0}
             ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
             ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.16%      ││ │  0x00007f1b0473f87c: vucomiss %xmm0,%xmm0
  5.49%  ╭   ││ │  0x00007f1b0473f880: jp     0x00007f1b0473f89c
  3.16%  │╭  ││ │  0x00007f1b0473f882: jne    0x00007f1b0473f89c             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││  ││ │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││  ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
         ││  ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  8.77%  ││  ││ │  0x00007f1b0473f884: vmovss 0x10(%rdx,%rdi,4),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││  ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
         ││  ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.04%  ││  ││ │  0x00007f1b0473f88a: vucomiss %xmm1,%xmm1
  4.54%  ││╭ ││ │  0x00007f1b0473f88e: jp     0x00007f1b0473f8ba
  3.68%  │││╭││ │  0x00007f1b0473f890: jne    0x00007f1b0473f8ba             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││││││ │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
         ││││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 12.19%  ││││││ │  0x00007f1b0473f892: vaddss %xmm1,%xmm0,%xmm0
  0.80%  ││││││ │  0x00007f1b0473f896: vmovss %xmm0,0x10(%rax,%rdi,4)        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
         ││││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  4.90%  ↘↘││││ │  0x00007f1b0473f89c: vmovss 0x14(%rsi,%rdi,4),%xmm1        ;*faload {reexecute=0 rethrow=0 return_oop=0}
           ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
           ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.80%    ││││ │  0x00007f1b0473f8a2: vucomiss %xmm1,%xmm1
  7.07%    ││╰│ │  0x00007f1b0473f8a6: jp     0x00007f1b0473f86a
  2.18%    ││ ╰ │  0x00007f1b0473f8a8: jne    0x00007f1b0473f86a             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
           ││   │                                                            ; - java.lang.Float::isNaN@3 (line 467)
           ││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
           ││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  8.39%    ││   │  0x00007f1b0473f8aa: vmovss 0x14(%rdx,%rdi,4),%xmm2        ;*faload {reexecute=0 rethrow=0 return_oop=0}
           ││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
           ││   │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.96%    ││   │  0x00007f1b0473f8b0: vucomiss %xmm2,%xmm2
  5.25%    ││  ╭│  0x00007f1b0473f8b4: jp     0x00007f1b0473f8b8
  3.00%    ││  │╰  0x00007f1b0473f8b6: je     0x00007f1b0473f860             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           ││  │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
           ││  │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
           ││  ↘   0x00007f1b0473f8b8: inc    %edi                           ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           ││                                                                ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
           ││                                                                ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
           ↘↘      0x00007f1b0473f8ba: mov    $0xffffff4d,%esi
                   0x00007f1b0473f8bf: mov    %edi,%ebp
                   0x00007f1b0473f8c1: mov    %r11,0x48(%rsp)
                   0x00007f1b0473f8c6: mov    %rbx,0x8(%rsp)
                   0x00007f1b0473f8cb: callq  0x00007f1b046c1300             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
....................................................................................................
 97.12%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.12%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (86 bytes) 
  0.86%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (100 bytes) 
  0.82%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.34%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (106 bytes) 
  0.26%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (58 bytes) 
  0.10%   [kernel.kallsyms]  [unknown] (13 bytes) 
  0.10%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (44 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  aload_1  43 aload_1  (0 bytes) 
  0.02%         interpreter  iinc  132 iinc  (0 bytes) 
  0.10%  <...other 5 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 98.42%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 
  1.16%   [kernel.kallsyms]  [unknown] 
  0.26%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.02%         interpreter  return  177 return  
  0.02%                  c2  java.lang.String::charAt, version 33 
  0.02%         interpreter  aload_1  43 aload_1  
  0.02%         interpreter  iinc  132 iinc  
  0.02%         interpreter  ifeq  153 ifeq  
  0.02%           libjvm.so  _ZN10HandleMarkD2Ev 
  0.02%         interpreter  fast_igetfield  208 fast_igetfield  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 98.70%                  c2
  1.16%   [kernel.kallsyms]
  0.10%         interpreter
  0.02%           libjvm.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51478 total address lines.
Perf output processed (skipped 6.419 seconds):
 Column 1: cycles (5095 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (93 bytes) 

                 0x00007f0e9b8af0df: pushfq 
                 0x00007f0e9b8af0e0: andq   $0xffffffffffffff2b,(%rsp)
                 0x00007f0e9b8af0e8: popfq  
                 0x00007f0e9b8af0e9: cmove  %r10d,%edi                     ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - java.lang.Float::isNaN@11 (line 467)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 0x00007f0e9b8af0ed: jmpq   0x00007f0e9b8af17d
                 0x00007f0e9b8af0f2: data16 nopw 0x0(%rax,%rax,1)
                 0x00007f0e9b8af0fc: data16 data16 xchg %ax,%ax
  5.46%       ↗  0x00007f0e9b8af100: vaddss %xmm2,%xmm1,%xmm1
  0.84%       │  0x00007f0e9b8af104: vmovss %xmm1,0x14(%rsi,%r8,4)
  5.81%    ↗↗ │  0x00007f0e9b8af10b: add    $0x2,%r8d                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.94%    ││ │  0x00007f0e9b8af10f: cmp    %edx,%r8d
           ││ │  0x00007f0e9b8af112: jge    0x00007f0e9b8af308             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  8.83%    ││ │  0x00007f0e9b8af118: vmovss 0x10(%rdi,%r8,4),%xmm0         ;*faload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.12%    ││ │  0x00007f0e9b8af11f: vucomiss %xmm0,%xmm0
  5.59%  ╭ ││ │  0x00007f0e9b8af123: jp     0x00007f0e9b8af141
  3.32%  │╭││ │  0x00007f0e9b8af125: jne    0x00007f0e9b8af141             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  8.95%  ││││ │  0x00007f0e9b8af127: vmovss 0x10(%r11,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.80%  ││││ │  0x00007f0e9b8af12e: vucomiss %xmm1,%xmm1
  4.16%  ││││ │  0x00007f0e9b8af132: jp     0x00007f0e9b8af0d2
  3.55%  ││││ │  0x00007f0e9b8af134: jne    0x00007f0e9b8af0d2             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 10.97%  ││││ │  0x00007f0e9b8af136: vaddss %xmm1,%xmm0,%xmm0
  0.82%  ││││ │  0x00007f0e9b8af13a: vmovss %xmm0,0x10(%rsi,%r8,4)         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  4.91%  ↘↘││ │  0x00007f0e9b8af141: vmovss 0x14(%rdi,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.12%    ││ │  0x00007f0e9b8af148: vucomiss %xmm1,%xmm1
  6.89%    ╰│ │  0x00007f0e9b8af14c: jp     0x00007f0e9b8af10b
  1.75%     ╰ │  0x00007f0e9b8af14e: jne    0x00007f0e9b8af10b             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
              │                                                            ; - java.lang.Float::isNaN@3 (line 467)
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  7.83%       │  0x00007f0e9b8af150: vmovss 0x14(%r11,%r8,4),%xmm2         ;*faload {reexecute=0 rethrow=0 return_oop=0}
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.98%       │  0x00007f0e9b8af157: vucomiss %xmm2,%xmm2
  5.36%      ╭│  0x00007f0e9b8af15b: jp     0x00007f0e9b8af15f
  3.26%      │╰  0x00007f0e9b8af15d: je     0x00007f0e9b8af100             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
             │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
             │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
             ↘   0x00007f0e9b8af15f: mov    0x8(%rsp),%edi
                 0x00007f0e9b8af163: xor    %r10d,%r10d
                 0x00007f0e9b8af166: vucomiss %xmm2,%xmm2
                 0x00007f0e9b8af16a: jnp    0x00007f0e9b8af176
                 0x00007f0e9b8af16c: pushfq 
                 0x00007f0e9b8af16d: andq   $0xffffffffffffff2b,(%rsp)
                 0x00007f0e9b8af175: popfq  
                 0x00007f0e9b8af176: cmove  %r10d,%edi
....................................................................................................
 95.27%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.27%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (93 bytes) 
  2.83%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.80%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (191 bytes) 
  0.49%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (65 bytes) 
  0.18%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (25 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (23 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  invoke return entry points  (0 bytes) 
  0.02%         interpreter  method entry point (kind = native)  (0 bytes) 
  0.02%         interpreter  if_acmpne  166 if_acmpne  (0 bytes) 
  0.02%         interpreter  goto  167 goto  (0 bytes) 
  0.02%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (0 bytes) 
  0.06%  <...other 3 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.27%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 
  3.08%   [kernel.kallsyms]  [unknown] 
  0.49%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.02%         interpreter  invoke return entry points  
  0.02%         interpreter  goto  167 goto  
  0.02%         interpreter  method entry point (kind = native)  
  0.02%         interpreter  if_acmpne  166 if_acmpne  
  0.02%       libz.so.1.2.8  inflate 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%           libjvm.so  _ZN13MallocTracker11record_freeEPv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.76%                  c2
  3.08%   [kernel.kallsyms]
  0.08%         interpreter
  0.04%           libjvm.so
  0.02%       libz.so.1.2.8
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckPessimistic
# Parameters: (probabilityOfNaN = 0.01, size = 1024)

# Run progress: 62.96% complete, ETA 00:05:59
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 896.300 ops/ms
# Warmup Iteration   2: 874.056 ops/ms
# Warmup Iteration   3: 880.666 ops/ms
# Warmup Iteration   4: 905.185 ops/ms
# Warmup Iteration   5: 912.877 ops/ms
Iteration   1: 913.568 ops/ms
Iteration   2: 911.089 ops/ms
Iteration   3: 913.118 ops/ms
Iteration   4: 909.626 ops/ms
Iteration   5: 910.450 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 64.20% complete, ETA 00:05:47
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 884.275 ops/ms
# Warmup Iteration   2: 897.628 ops/ms
# Warmup Iteration   3: 905.773 ops/ms
# Warmup Iteration   4: 913.595 ops/ms
# Warmup Iteration   5: 907.890 ops/ms
Iteration   1: 916.792 ops/ms
Iteration   2: 899.739 ops/ms
Iteration   3: 909.184 ops/ms
Iteration   4: 903.938 ops/ms
Iteration   5: 911.414 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 65.43% complete, ETA 00:05:35
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 876.324 ops/ms
# Warmup Iteration   2: 908.239 ops/ms
# Warmup Iteration   3: 893.795 ops/ms
# Warmup Iteration   4: 915.866 ops/ms
# Warmup Iteration   5: 912.601 ops/ms
Iteration   1: 895.616 ops/ms
Iteration   2: 905.357 ops/ms
Iteration   3: 905.826 ops/ms
Iteration   4: 902.988 ops/ms
Iteration   5: 905.275 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckPessimistic":
  907.599 ±(99.9%) 6.032 ops/ms [Average]
  (min, avg, max) = (895.616, 907.599, 916.792), stdev = 5.642
  CI (99.9%): [901.567, 913.631] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumNaNCheckPessimistic:·asm":
PrintAssembly processed: 51458 total address lines.
Perf output processed (skipped 6.409 seconds):
 Column 1: cycles (4976 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (93 bytes) 

                 0x00007fc89873f35f: pushfq 
                 0x00007fc89873f360: andq   $0xffffffffffffff2b,(%rsp)
                 0x00007fc89873f368: popfq  
                 0x00007fc89873f369: cmove  %r10d,%edx                     ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - java.lang.Float::isNaN@11 (line 467)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 0x00007fc89873f36d: jmpq   0x00007fc89873f3fd
                 0x00007fc89873f372: data16 nopw 0x0(%rax,%rax,1)
                 0x00007fc89873f37c: data16 data16 xchg %ax,%ax
  4.38%       ↗  0x00007fc89873f380: vaddss %xmm2,%xmm1,%xmm1
  2.25%       │  0x00007fc89873f384: vmovss %xmm1,0x14(%rsi,%r8,4)
  4.02%    ↗↗ │  0x00007fc89873f38b: add    $0x2,%r8d                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.32%    ││ │  0x00007fc89873f38f: cmp    %edi,%r8d
           ││ │  0x00007fc89873f392: jge    0x00007fc89873f588             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.53%    ││ │  0x00007fc89873f398: vmovss 0x10(%rdx,%r8,4),%xmm0         ;*faload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.57%    ││ │  0x00007fc89873f39f: vucomiss %xmm0,%xmm0
  3.98%  ╭ ││ │  0x00007fc89873f3a3: jp     0x00007fc89873f3c1
  6.31%  │╭││ │  0x00007fc89873f3a5: jne    0x00007fc89873f3c1             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  7.48%  ││││ │  0x00007fc89873f3a7: vmovss 0x10(%r11,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.71%  ││││ │  0x00007fc89873f3ae: vucomiss %xmm1,%xmm1
  3.38%  ││││ │  0x00007fc89873f3b2: jp     0x00007fc89873f352
  5.23%  ││││ │  0x00007fc89873f3b4: jne    0x00007fc89873f352             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  8.64%  ││││ │  0x00007fc89873f3b6: vaddss %xmm1,%xmm0,%xmm0
  1.73%  ││││ │  0x00007fc89873f3ba: vmovss %xmm0,0x10(%rsi,%r8,4)         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.98%  ↘↘││ │  0x00007fc89873f3c1: vmovss 0x14(%rdx,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.42%    ││ │  0x00007fc89873f3c8: vucomiss %xmm1,%xmm1
  6.61%    ╰│ │  0x00007fc89873f3cc: jp     0x00007fc89873f38b
  4.40%     ╰ │  0x00007fc89873f3ce: jne    0x00007fc89873f38b             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
              │                                                            ; - java.lang.Float::isNaN@3 (line 467)
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.23%       │  0x00007fc89873f3d0: vmovss 0x14(%r11,%r8,4),%xmm2         ;*faload {reexecute=0 rethrow=0 return_oop=0}
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.25%       │  0x00007fc89873f3d7: vucomiss %xmm2,%xmm2
  4.48%      ╭│  0x00007fc89873f3db: jp     0x00007fc89873f3df
  4.32%      │╰  0x00007fc89873f3dd: je     0x00007fc89873f380             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
             │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
             │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
             ↘   0x00007fc89873f3df: mov    0x8(%rsp),%edx
                 0x00007fc89873f3e3: xor    %r10d,%r10d
                 0x00007fc89873f3e6: vucomiss %xmm2,%xmm2
                 0x00007fc89873f3ea: jnp    0x00007fc89873f3f6
                 0x00007fc89873f3ec: pushfq 
                 0x00007fc89873f3ed: andq   $0xffffffffffffff2b,(%rsp)
                 0x00007fc89873f3f5: popfq  
                 0x00007fc89873f3f6: cmove  %r10d,%edx
....................................................................................................
 97.21%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.21%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (93 bytes) 
  1.39%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (331 bytes) 
  0.56%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (65 bytes) 
  0.52%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = native)  (0 bytes) 
  0.02%         interpreter  aload_3  45 aload_3  (0 bytes) 
  0.02%         interpreter  getstatic  178 getstatic  (0 bytes) 
  0.02%         interpreter  fast_aaccess_0  222 fast_aaccess_0  (0 bytes) 
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 98.59%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 
  0.74%   [kernel.kallsyms]  [unknown] 
  0.56%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  0.02%         interpreter  method entry point (kind = native)  
  0.02%         interpreter  aload_3  45 aload_3  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 99.16%                  c2
  0.74%   [kernel.kallsyms]
  0.08%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51462 total address lines.
Perf output processed (skipped 6.474 seconds):
 Column 1: cycles (5096 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (93 bytes) 

                 0x00007f3efc7423df: pushfq 
                 0x00007f3efc7423e0: andq   $0xffffffffffffff2b,(%rsp)
                 0x00007f3efc7423e8: popfq  
                 0x00007f3efc7423e9: cmove  %r10d,%edi                     ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - java.lang.Float::isNaN@11 (line 467)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 0x00007f3efc7423ed: jmpq   0x00007f3efc74247d
                 0x00007f3efc7423f2: data16 nopw 0x0(%rax,%rax,1)
                 0x00007f3efc7423fc: data16 data16 xchg %ax,%ax
  3.81%       ↗  0x00007f3efc742400: vaddss %xmm2,%xmm1,%xmm1
  2.45%       │  0x00007f3efc742404: vmovss %xmm1,0x14(%rsi,%r8,4)
  3.34%    ↗↗ │  0x00007f3efc74240b: add    $0x2,%r8d                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.49%    ││ │  0x00007f3efc74240f: cmp    %edx,%r8d
           ││ │  0x00007f3efc742412: jge    0x00007f3efc742608             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  5.99%    ││ │  0x00007f3efc742418: vmovss 0x10(%rdi,%r8,4),%xmm0         ;*faload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.37%    ││ │  0x00007f3efc74241f: vucomiss %xmm0,%xmm0
  4.00%  ╭ ││ │  0x00007f3efc742423: jp     0x00007f3efc742441
  8.30%  │╭││ │  0x00007f3efc742425: jne    0x00007f3efc742441             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.32%  ││││ │  0x00007f3efc742427: vmovss 0x10(%r11,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.00%  ││││ │  0x00007f3efc74242e: vucomiss %xmm1,%xmm1
  3.10%  ││││ │  0x00007f3efc742432: jp     0x00007f3efc7423d2
  5.47%  ││││ │  0x00007f3efc742434: jne    0x00007f3efc7423d2             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  8.05%  ││││ │  0x00007f3efc742436: vaddss %xmm1,%xmm0,%xmm0
  2.30%  ││││ │  0x00007f3efc74243a: vmovss %xmm0,0x10(%rsi,%r8,4)         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.73%  ↘↘││ │  0x00007f3efc742441: vmovss 0x14(%rdi,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.79%    ││ │  0x00007f3efc742448: vucomiss %xmm1,%xmm1
  4.75%    ╰│ │  0x00007f3efc74244c: jp     0x00007f3efc74240b
  5.46%     ╰ │  0x00007f3efc74244e: jne    0x00007f3efc74240b             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
              │                                                            ; - java.lang.Float::isNaN@3 (line 467)
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  5.85%       │  0x00007f3efc742450: vmovss 0x14(%r11,%r8,4),%xmm2         ;*faload {reexecute=0 rethrow=0 return_oop=0}
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.34%       │  0x00007f3efc742457: vucomiss %xmm2,%xmm2
  3.39%      ╭│  0x00007f3efc74245b: jp     0x00007f3efc74245f
  5.65%      │╰  0x00007f3efc74245d: je     0x00007f3efc742400             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
             │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
             │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
             ↘   0x00007f3efc74245f: mov    0x8(%rsp),%edi
                 0x00007f3efc742463: xor    %r10d,%r10d
                 0x00007f3efc742466: vucomiss %xmm2,%xmm2
                 0x00007f3efc74246a: jnp    0x00007f3efc742476
                 0x00007f3efc74246c: pushfq 
                 0x00007f3efc74246d: andq   $0xffffffffffffff2b,(%rsp)
                 0x00007f3efc742475: popfq  
                 0x00007f3efc742476: cmove  %r10d,%edi
....................................................................................................
 94.94%  <total for region 1>

....[Hottest Regions]...............................................................................
 94.94%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (93 bytes) 
  2.75%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.67%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (31 bytes) 
  0.49%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (173 bytes) 
  0.27%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (46 bytes) 
  0.24%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (45 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (3 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (15 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (25 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.24%  <...other 12 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.37%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 
  3.14%   [kernel.kallsyms]  [unknown] 
  0.24%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN12ConstantPool18release_tag_at_putEia 
  0.02%           libjvm.so  _ZN10Dictionary4findEjP6Symbol6Handle 
  0.02%           libjvm.so  _ZN13InstanceKlass17find_method_indexEPK5ArrayIP6MethodEPK6SymbolS8_N5Klass18OverpassLookupModeENS9_16StaticLookupModeENS9_17PrivateLookupModeE.constprop.305 
  0.02%         interpreter  arraylength  190 arraylength  
  0.02%                  c2  java.lang.String::equals, version 36 
  0.02%           libjvm.so  _ZN17ThreadsSMRSupport9free_listEP11ThreadsList 
  0.02%           libjvm.so  _ZN7Monitor6unlockEv 
  0.02%  libpthread-2.23.so  pthread_mutex_lock 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%           libjvm.so  _ZN15SignatureStreamC2EP6Symbolb 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.62%                  c2
  3.14%   [kernel.kallsyms]
  0.14%           libjvm.so
  0.06%         interpreter
  0.02%  libpthread-2.23.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 51436 total address lines.
Perf output processed (skipped 6.412 seconds):
 Column 1: cycles (4990 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (93 bytes) 

                 0x00007f673369e55f: pushfq 
                 0x00007f673369e560: andq   $0xffffffffffffff2b,(%rsp)
                 0x00007f673369e568: popfq  
                 0x00007f673369e569: cmove  %r10d,%edx                     ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - java.lang.Float::isNaN@11 (line 467)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 0x00007f673369e56d: jmpq   0x00007f673369e5fd
                 0x00007f673369e572: data16 nopw 0x0(%rax,%rax,1)
                 0x00007f673369e57c: data16 data16 xchg %ax,%ax
  4.21%       ↗  0x00007f673369e580: vaddss %xmm2,%xmm1,%xmm1
  2.67%       │  0x00007f673369e584: vmovss %xmm1,0x14(%rsi,%r8,4)
  3.85%    ↗↗ │  0x00007f673369e58b: add    $0x2,%r8d                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.51%    ││ │  0x00007f673369e58f: cmp    %edi,%r8d
           ││ │  0x00007f673369e592: jge    0x00007f673369e788             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.59%    ││ │  0x00007f673369e598: vmovss 0x10(%rdx,%r8,4),%xmm0         ;*faload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.01%    ││ │  0x00007f673369e59f: vucomiss %xmm0,%xmm0
  3.31%  ╭ ││ │  0x00007f673369e5a3: jp     0x00007f673369e5c1
  7.90%  │╭││ │  0x00007f673369e5a5: jne    0x00007f673369e5c1             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.73%  ││││ │  0x00007f673369e5a7: vmovss 0x10(%r11,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.59%  ││││ │  0x00007f673369e5ae: vucomiss %xmm1,%xmm1
  2.34%  ││││ │  0x00007f673369e5b2: jp     0x00007f673369e552
  5.91%  ││││ │  0x00007f673369e5b4: jne    0x00007f673369e552             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - java.lang.Float::isNaN@3 (line 467)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@28 (line 116)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  7.58%  ││││ │  0x00007f673369e5b6: vaddss %xmm1,%xmm0,%xmm0
  2.28%  ││││ │  0x00007f673369e5ba: vmovss %xmm0,0x10(%rsi,%r8,4)         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@53 (line 115)
         ││││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.35%  ↘↘││ │  0x00007f673369e5c1: vmovss 0x14(%rdx,%r8,4),%xmm1         ;*faload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@15 (line 116)
           ││ │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.47%    ││ │  0x00007f673369e5c8: vucomiss %xmm1,%xmm1
  5.41%    ╰│ │  0x00007f673369e5cc: jp     0x00007f673369e58b
  5.29%     ╰ │  0x00007f673369e5ce: jne    0x00007f673369e58b             ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
              │                                                            ; - java.lang.Float::isNaN@3 (line 467)
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@16 (line 116)
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  5.79%       │  0x00007f673369e5d0: vmovss 0x14(%r11,%r8,4),%xmm2         ;*faload {reexecute=0 rethrow=0 return_oop=0}
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@27 (line 116)
              │                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.85%       │  0x00007f673369e5d7: vucomiss %xmm2,%xmm2
  3.43%      ╭│  0x00007f673369e5db: jp     0x00007f673369e5df
  5.31%      │╰  0x00007f673369e5dd: je     0x00007f673369e580             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
             │                                                             ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumNaNCheckPessimistic@10 (line 116)
             │                                                             ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
             ↘   0x00007f673369e5df: mov    0x8(%rsp),%edx
                 0x00007f673369e5e3: xor    %r10d,%r10d
                 0x00007f673369e5e6: vucomiss %xmm2,%xmm2
                 0x00007f673369e5ea: jnp    0x00007f673369e5f6
                 0x00007f673369e5ec: pushfq 
                 0x00007f673369e5ed: andq   $0xffffffffffffff2b,(%rsp)
                 0x00007f673369e5f5: popfq  
                 0x00007f673369e5f6: cmove  %r10d,%edx
....................................................................................................
 97.35%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.35%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (93 bytes) 
  0.84%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.46%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (9 bytes) 
  0.42%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (57 bytes) 
  0.22%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (50 bytes) 
  0.12%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (3 bytes) 
  0.08%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (27 bytes) 
  0.06%         interpreter  method entry point (kind = zerolocals)  (8 bytes) 
  0.06%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 (38 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (1 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.10%  <...other 5 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 98.32%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumNaNCheckPessimistic_jmhTest::verticalSumNaNCheckPessimistic_thrpt_jmhStub, version 130 
  1.10%   [kernel.kallsyms]  [unknown] 
  0.42%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.08%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  nofast_getfield  234 nofast_getfield  
  0.02%         interpreter  ifne  154 ifne  
  0.02%         interpreter  invokeinterface  185 invokeinterface  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 98.74%                  c2
  1.10%   [kernel.kallsyms]
  0.14%         interpreter
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArray
# Parameters: (probabilityOfNaN = 0, size = 1024)

# Run progress: 66.67% complete, ETA 00:05:23
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5115.993 ops/ms
# Warmup Iteration   2: 5714.034 ops/ms
# Warmup Iteration   3: 5731.706 ops/ms
# Warmup Iteration   4: 5710.138 ops/ms
# Warmup Iteration   5: 5714.813 ops/ms
Iteration   1: 5703.006 ops/ms
Iteration   2: 5737.192 ops/ms
Iteration   3: 5667.544 ops/ms
Iteration   4: 5766.355 ops/ms
Iteration   5: 5660.966 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 67.90% complete, ETA 00:05:11
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5045.807 ops/ms
# Warmup Iteration   2: 5686.113 ops/ms
# Warmup Iteration   3: 5634.896 ops/ms
# Warmup Iteration   4: 5792.117 ops/ms
# Warmup Iteration   5: 5800.792 ops/ms
Iteration   1: 5784.411 ops/ms
Iteration   2: 5778.857 ops/ms
Iteration   3: 5783.195 ops/ms
Iteration   4: 5747.271 ops/ms
Iteration   5: 5689.562 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 69.14% complete, ETA 00:04:59
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4996.670 ops/ms
# Warmup Iteration   2: 5713.108 ops/ms
# Warmup Iteration   3: 5694.157 ops/ms
# Warmup Iteration   4: 5738.120 ops/ms
# Warmup Iteration   5: 5776.832 ops/ms
Iteration   1: 5777.338 ops/ms
Iteration   2: 5786.526 ops/ms
Iteration   3: 5763.253 ops/ms
Iteration   4: 5760.240 ops/ms
Iteration   5: 5775.116 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArray":
  5745.389 ±(99.9%) 46.791 ops/ms [Average]
  (min, avg, max) = (5660.966, 5745.389, 5786.526), stdev = 43.768
  CI (99.9%): [5698.598, 5792.179] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArray:·asm":
PrintAssembly processed: 54574 total address lines.
Perf output processed (skipped 6.430 seconds):
 Column 1: cycles (5083 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 

                0x00007fcdebcec2e0: movq   $0x0,0x20(%r10)
                0x00007fcdebcec2e8: vzeroupper 
                0x00007fcdebcec2eb: add    $0x30,%rsp
                0x00007fcdebcec2ef: pop    %rbp
                0x00007fcdebcec2f0: mov    0x108(%r15),%r10
                0x00007fcdebcec2f7: test   %eax,(%r10)                    ;   {poll_return}
                0x00007fcdebcec2fa: retq   
                0x00007fcdebcec2fb: nop                                   ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.04%  ↗  ↗   0x00007fcdebcec2fc: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  0.71%  │  │   0x00007fcdebcec303: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  3.46%  │  │   0x00007fcdebcec30a: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  0.83%  │  │   0x00007fcdebcec311: add    $0x8,%r9d
  0.06%  │  │   0x00007fcdebcec315: cmp    %r10d,%r9d
         ╰  │   0x00007fcdebcec318: jl     0x00007fcdebcec2fc
            │↗  0x00007fcdebcec31a: mov    %rcx,0x40(%rsp)
            ││  0x00007fcdebcec31f: mov    %rbx,%rdx
  0.18%     ││  0x00007fcdebcec322: shl    $0x3,%rdx
            ││  0x00007fcdebcec326: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fcdebcec32a: xchg   %ax,%ax
            ││  0x00007fcdebcec32c: vzeroupper 
  0.18%     ││  0x00007fcdebcec32f: callq  0x00007fcdebc62900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@22 (line 145)
            ││                                                            ;   {optimized virtual_call}
            ││  0x00007fcdebcec334: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.16%     ││  0x00007fcdebcec339: movzbl 0x94(%rcx),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@52 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.02%     ││  0x00007fcdebcec341: mov    0x108(%r15),%r10               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fcdebcec348: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@35 (line 147)
  0.22%     ││  0x00007fcdebcec34c: test   %eax,(%r10)                    ;   {poll}
            ││  0x00007fcdebcec34f: test   %r11d,%r11d
            ││  0x00007fcdebcec352: jne    0x00007fcdebcec2c3
            ││  0x00007fcdebcec358: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fcdebcec35d: mov    0xc(%r10),%r10d                ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@4 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.16%     ││  0x00007fcdebcec361: mov    0x50(%rsp),%r11                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fcdebcec366: mov    0x20(%r11),%ebx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@36 (line 78)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fcdebcec36a: test   %r10d,%r10d
          ╭ ││  0x00007fcdebcec36d: jle    0x00007fcdebcec4c7             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007fcdebcec373: mov    0x18(%r11),%r8d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@14 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.14%   │ ││  0x00007fcdebcec377: test   %r8d,%r8d
          │ ││  0x00007fcdebcec37a: je     0x00007fcdebcec4d1             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007fcdebcec380: mov    0x1c(%r11),%r11d               ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@25 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007fcdebcec384: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007fcdebcec4d1
  0.61%   │ ││  0x00007fcdebcec38b: test   %ebx,%ebx
          │ ││  0x00007fcdebcec38d: je     0x00007fcdebcec4d1
  0.04%   │ ││  0x00007fcdebcec393: cmp    $0x7ffffff8,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007fcdebcec39a: jg     0x00007fcdebcec4ea
          │ ││  0x00007fcdebcec3a0: vaddps 0x10(%r12,%r8,8),%ymm0,%ymm0
  0.65%   │ ││  0x00007fcdebcec3a7: vmovdqu %ymm0,0x10(%r12,%rbx,8)
  0.12%   │ ││  0x00007fcdebcec3ae: lea    (%r12,%rbx,8),%rdi
          │ ││  0x00007fcdebcec3b2: lea    (%r12,%r8,8),%rdx
          │ ││  0x00007fcdebcec3b6: lea    (%r12,%r11,8),%rsi
          │ ││  0x00007fcdebcec3ba: mov    %r10d,%r11d
  0.14%   │ ││  0x00007fcdebcec3bd: add    $0xffffffc8,%r11d
          │ ││  0x00007fcdebcec3c1: cmp    %r11d,%r10d
          │ ││  0x00007fcdebcec3c4: mov    $0x80000000,%r8d
          │ ││  0x00007fcdebcec3ca: cmovl  %r8d,%r11d
  0.24%   │ ││  0x00007fcdebcec3ce: cmp    $0x8,%r11d
          │ ││  0x00007fcdebcec3d2: jle    0x00007fcdebcec506
          │ ││  0x00007fcdebcec3d8: mov    $0x8,%r9d
          │ ││  0x00007fcdebcec3de: xchg   %ax,%ax                        ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.08%   │↗││  0x00007fcdebcec3e0: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  1.55%   ││││  0x00007fcdebcec3e7: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  6.98%   ││││  0x00007fcdebcec3ee: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  4.41%   ││││  0x00007fcdebcec3f5: vmovdqu 0x30(%rsi,%r9,4),%ymm0
  4.35%   ││││  0x00007fcdebcec3fc: vaddps 0x30(%rdx,%r9,4),%ymm0,%ymm0
  7.40%   ││││  0x00007fcdebcec403: vmovdqu %ymm0,0x30(%rdi,%r9,4)
  2.22%   ││││  0x00007fcdebcec40a: vmovdqu 0x50(%rsi,%r9,4),%ymm0
  1.71%   ││││  0x00007fcdebcec411: vaddps 0x50(%rdx,%r9,4),%ymm0,%ymm0
  7.06%   ││││  0x00007fcdebcec418: vmovdqu %ymm0,0x50(%rdi,%r9,4)
  2.20%   ││││  0x00007fcdebcec41f: vmovdqu 0x70(%rsi,%r9,4),%ymm0
  0.24%   ││││  0x00007fcdebcec426: vaddps 0x70(%rdx,%r9,4),%ymm0,%ymm0
  5.15%   ││││  0x00007fcdebcec42d: vmovdqu %ymm0,0x70(%rdi,%r9,4)
  2.81%   ││││  0x00007fcdebcec434: vmovdqu 0x90(%rsi,%r9,4),%ymm0
  2.34%   ││││  0x00007fcdebcec43e: vaddps 0x90(%rdx,%r9,4),%ymm0,%ymm0
  7.34%   ││││  0x00007fcdebcec448: vmovdqu %ymm0,0x90(%rdi,%r9,4)
  2.68%   ││││  0x00007fcdebcec452: vmovdqu 0xb0(%rsi,%r9,4),%ymm0
  0.30%   ││││  0x00007fcdebcec45c: vaddps 0xb0(%rdx,%r9,4),%ymm0,%ymm0
  6.10%   ││││  0x00007fcdebcec466: vmovdqu %ymm0,0xb0(%rdi,%r9,4)
  2.28%   ││││  0x00007fcdebcec470: vmovdqu 0xd0(%rsi,%r9,4),%ymm0
  1.65%   ││││  0x00007fcdebcec47a: vaddps 0xd0(%rdx,%r9,4),%ymm0,%ymm0
  6.75%   ││││  0x00007fcdebcec484: vmovdqu %ymm0,0xd0(%rdi,%r9,4)
  2.66%   ││││  0x00007fcdebcec48e: vmovdqu 0xf0(%rsi,%r9,4),%ymm0
  0.14%   ││││  0x00007fcdebcec498: vaddps 0xf0(%rdx,%r9,4),%ymm0,%ymm0
  7.44%   ││││  0x00007fcdebcec4a2: vmovdqu %ymm0,0xf0(%rdi,%r9,4)        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  2.42%   ││││  0x00007fcdebcec4ac: add    $0x40,%r9d
          ││││  0x00007fcdebcec4b0: cmp    %r11d,%r9d
          │╰││  0x00007fcdebcec4b3: jl     0x00007fcdebcec3e0
          │ ││  0x00007fcdebcec4b9: cmp    %r10d,%r9d
          │ ╰│  0x00007fcdebcec4bc: jl     0x00007fcdebcec2fc
          │  ╰  0x00007fcdebcec4c2: jmpq   0x00007fcdebcec31a
          ↘     0x00007fcdebcec4c7: mov    %rcx,0x40(%rsp)
                0x00007fcdebcec4cc: jmpq   0x00007fcdebcec31f
....................................................................................................
 96.18%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.18%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 
  2.50%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.89%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 (65 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         classes.jsa  [unknown] (0 bytes) 
  0.02%           libjvm.so  _ZNK11G1Analytics16predict_card_numEmb (0 bytes) 
  0.02%           libjvm.so  _ZNK8G1Policy26adaptive_young_list_lengthEv (0 bytes) 
  0.04%  <...other 2 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.18%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 
  2.77%   [kernel.kallsyms]  [unknown] 
  0.89%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZNK8G1Policy26adaptive_young_list_lengthEv 
  0.02%           libjvm.so  _ZNK11G1Analytics16predict_card_numEmb 
  0.02%         classes.jsa  [unknown] 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%           libjvm.so  _ZN7Monitor7TrySpinEP6Thread.part.23 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.07%                  c2
  2.77%   [kernel.kallsyms]
  0.08%           libjvm.so
  0.04%         interpreter
  0.02%         classes.jsa
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 54598 total address lines.
Perf output processed (skipped 6.413 seconds):
 Column 1: cycles (5082 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 

                0x00007fc70f8bba60: movq   $0x0,0x20(%r10)
                0x00007fc70f8bba68: vzeroupper 
                0x00007fc70f8bba6b: add    $0x30,%rsp
                0x00007fc70f8bba6f: pop    %rbp
                0x00007fc70f8bba70: mov    0x108(%r15),%r10
                0x00007fc70f8bba77: test   %eax,(%r10)                    ;   {poll_return}
                0x00007fc70f8bba7a: retq   
                0x00007fc70f8bba7b: nop                                   ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.16%  ↗  ↗   0x00007fc70f8bba7c: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  0.91%  │  │   0x00007fc70f8bba83: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  3.13%  │  │   0x00007fc70f8bba8a: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  0.89%  │  │   0x00007fc70f8bba91: add    $0x8,%r9d
  0.02%  │  │   0x00007fc70f8bba95: cmp    %r10d,%r9d
         ╰  │   0x00007fc70f8bba98: jl     0x00007fc70f8bba7c
            │↗  0x00007fc70f8bba9a: mov    %rcx,0x40(%rsp)
            ││  0x00007fc70f8bba9f: mov    %rbx,%rdx
  0.18%     ││  0x00007fc70f8bbaa2: shl    $0x3,%rdx
            ││  0x00007fc70f8bbaa6: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fc70f8bbaaa: xchg   %ax,%ax
            ││  0x00007fc70f8bbaac: vzeroupper 
  0.20%     ││  0x00007fc70f8bbaaf: callq  0x00007fc70f82d900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@22 (line 145)
            ││                                                            ;   {optimized virtual_call}
            ││  0x00007fc70f8bbab4: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.14%     ││  0x00007fc70f8bbab9: movzbl 0x94(%rcx),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@52 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fc70f8bbac1: mov    0x108(%r15),%r10               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fc70f8bbac8: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@35 (line 147)
  0.20%     ││  0x00007fc70f8bbacc: test   %eax,(%r10)                    ;   {poll}
            ││  0x00007fc70f8bbacf: test   %r11d,%r11d
            ││  0x00007fc70f8bbad2: jne    0x00007fc70f8bba43
            ││  0x00007fc70f8bbad8: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fc70f8bbadd: mov    0xc(%r10),%r10d                ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@4 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.20%     ││  0x00007fc70f8bbae1: mov    0x50(%rsp),%r11                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fc70f8bbae6: mov    0x20(%r11),%ebx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@36 (line 78)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fc70f8bbaea: test   %r10d,%r10d
          ╭ ││  0x00007fc70f8bbaed: jle    0x00007fc70f8bbc47             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007fc70f8bbaf3: mov    0x18(%r11),%r8d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@14 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.20%   │ ││  0x00007fc70f8bbaf7: test   %r8d,%r8d
          │ ││  0x00007fc70f8bbafa: je     0x00007fc70f8bbc51             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007fc70f8bbb00: mov    0x1c(%r11),%r11d               ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@25 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.02%   │ ││  0x00007fc70f8bbb04: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007fc70f8bbc51
  0.43%   │ ││  0x00007fc70f8bbb0b: test   %ebx,%ebx
          │ ││  0x00007fc70f8bbb0d: je     0x00007fc70f8bbc51
          │ ││  0x00007fc70f8bbb13: cmp    $0x7ffffff8,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007fc70f8bbb1a: jg     0x00007fc70f8bbc6a
          │ ││  0x00007fc70f8bbb20: vaddps 0x10(%r12,%r8,8),%ymm0,%ymm0
  0.73%   │ ││  0x00007fc70f8bbb27: vmovdqu %ymm0,0x10(%r12,%rbx,8)
  0.14%   │ ││  0x00007fc70f8bbb2e: lea    (%r12,%rbx,8),%rdi
          │ ││  0x00007fc70f8bbb32: lea    (%r12,%r8,8),%rdx
          │ ││  0x00007fc70f8bbb36: lea    (%r12,%r11,8),%rsi
          │ ││  0x00007fc70f8bbb3a: mov    %r10d,%r11d
  0.30%   │ ││  0x00007fc70f8bbb3d: add    $0xffffffc8,%r11d
          │ ││  0x00007fc70f8bbb41: cmp    %r11d,%r10d
          │ ││  0x00007fc70f8bbb44: mov    $0x80000000,%r8d
          │ ││  0x00007fc70f8bbb4a: cmovl  %r8d,%r11d
  0.26%   │ ││  0x00007fc70f8bbb4e: cmp    $0x8,%r11d
          │ ││  0x00007fc70f8bbb52: jle    0x00007fc70f8bbc86
          │ ││  0x00007fc70f8bbb58: mov    $0x8,%r9d
          │ ││  0x00007fc70f8bbb5e: xchg   %ax,%ax                        ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.04%   │↗││  0x00007fc70f8bbb60: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  2.18%   ││││  0x00007fc70f8bbb67: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  7.04%   ││││  0x00007fc70f8bbb6e: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  4.64%   ││││  0x00007fc70f8bbb75: vmovdqu 0x30(%rsi,%r9,4),%ymm0
  4.37%   ││││  0x00007fc70f8bbb7c: vaddps 0x30(%rdx,%r9,4),%ymm0,%ymm0
  7.20%   ││││  0x00007fc70f8bbb83: vmovdqu %ymm0,0x30(%rdi,%r9,4)
  1.89%   ││││  0x00007fc70f8bbb8a: vmovdqu 0x50(%rsi,%r9,4),%ymm0
  2.22%   ││││  0x00007fc70f8bbb91: vaddps 0x50(%rdx,%r9,4),%ymm0,%ymm0
  7.32%   ││││  0x00007fc70f8bbb98: vmovdqu %ymm0,0x50(%rdi,%r9,4)
  2.05%   ││││  0x00007fc70f8bbb9f: vmovdqu 0x70(%rsi,%r9,4),%ymm0
  0.30%   ││││  0x00007fc70f8bbba6: vaddps 0x70(%rdx,%r9,4),%ymm0,%ymm0
  5.90%   ││││  0x00007fc70f8bbbad: vmovdqu %ymm0,0x70(%rdi,%r9,4)
  1.95%   ││││  0x00007fc70f8bbbb4: vmovdqu 0x90(%rsi,%r9,4),%ymm0
  2.64%   ││││  0x00007fc70f8bbbbe: vaddps 0x90(%rdx,%r9,4),%ymm0,%ymm0
  7.10%   ││││  0x00007fc70f8bbbc8: vmovdqu %ymm0,0x90(%rdi,%r9,4)
  2.66%   ││││  0x00007fc70f8bbbd2: vmovdqu 0xb0(%rsi,%r9,4),%ymm0
  0.22%   ││││  0x00007fc70f8bbbdc: vaddps 0xb0(%rdx,%r9,4),%ymm0,%ymm0
  5.71%   ││││  0x00007fc70f8bbbe6: vmovdqu %ymm0,0xb0(%rdi,%r9,4)
  2.22%   ││││  0x00007fc70f8bbbf0: vmovdqu 0xd0(%rsi,%r9,4),%ymm0
  1.85%   ││││  0x00007fc70f8bbbfa: vaddps 0xd0(%rdx,%r9,4),%ymm0,%ymm0
  6.89%   ││││  0x00007fc70f8bbc04: vmovdqu %ymm0,0xd0(%rdi,%r9,4)
  2.05%   ││││  0x00007fc70f8bbc0e: vmovdqu 0xf0(%rsi,%r9,4),%ymm0
  0.18%   ││││  0x00007fc70f8bbc18: vaddps 0xf0(%rdx,%r9,4),%ymm0,%ymm0
  6.79%   ││││  0x00007fc70f8bbc22: vmovdqu %ymm0,0xf0(%rdi,%r9,4)        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  2.28%   ││││  0x00007fc70f8bbc2c: add    $0x40,%r9d
          ││││  0x00007fc70f8bbc30: cmp    %r11d,%r9d
          │╰││  0x00007fc70f8bbc33: jl     0x00007fc70f8bbb60
          │ ││  0x00007fc70f8bbc39: cmp    %r10d,%r9d
          │ ╰│  0x00007fc70f8bbc3c: jl     0x00007fc70f8bba7c
          │  ╰  0x00007fc70f8bbc42: jmpq   0x00007fc70f8bba9a
          ↘     0x00007fc70f8bbc47: mov    %rcx,0x40(%rsp)
                0x00007fc70f8bbc4c: jmpq   0x00007fc70f8bba9f
....................................................................................................
 95.75%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.75%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 
  2.60%   [kernel.kallsyms]  [unknown] (5 bytes) 
  1.08%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 (65 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm (38 bytes) 
  0.04%         interpreter  return  177 return  (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  astore_1  76 astore_1  (0 bytes) 
  0.10%  <...other 5 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.75%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 
  2.91%   [kernel.kallsyms]  [unknown] 
  1.08%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.04%         interpreter  return  177 return  
  0.02%           libjvm.so  _ZN11SymbolTable11lookup_onlyEPKciRj 
  0.02%         interpreter  nofast_getfield  234 nofast_getfield  
  0.02%         interpreter  astore_1  76 astore_1  
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%        libc-2.23.so  _IO_old_init 
  0.02%           libjvm.so  _ZN12ConstantPool12klass_ref_atEiP6Thread 
  0.02%           libjvm.so  _ZNK17OtherRegionsTable8occupiedEv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.83%                  c2
  2.91%   [kernel.kallsyms]
  0.12%           libjvm.so
  0.10%         interpreter
  0.02%        libc-2.23.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 54583 total address lines.
Perf output processed (skipped 6.416 seconds):
 Column 1: cycles (5076 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 

                0x00007f897874ed60: movq   $0x0,0x20(%r10)
                0x00007f897874ed68: vzeroupper 
                0x00007f897874ed6b: add    $0x30,%rsp
                0x00007f897874ed6f: pop    %rbp
                0x00007f897874ed70: mov    0x108(%r15),%r10
                0x00007f897874ed77: test   %eax,(%r10)                    ;   {poll_return}
                0x00007f897874ed7a: retq   
                0x00007f897874ed7b: nop                                   ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.22%  ↗  ↗   0x00007f897874ed7c: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  0.75%  │  │   0x00007f897874ed83: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  3.59%  │  │   0x00007f897874ed8a: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  0.91%  │  │   0x00007f897874ed91: add    $0x8,%r9d
  0.04%  │  │   0x00007f897874ed95: cmp    %r10d,%r9d
         ╰  │   0x00007f897874ed98: jl     0x00007f897874ed7c
            │↗  0x00007f897874ed9a: mov    %rcx,0x40(%rsp)
            ││  0x00007f897874ed9f: mov    %rbx,%rdx
  0.12%     ││  0x00007f897874eda2: shl    $0x3,%rdx
            ││  0x00007f897874eda6: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f897874edaa: xchg   %ax,%ax
            ││  0x00007f897874edac: vzeroupper 
  0.24%     ││  0x00007f897874edaf: callq  0x00007f89786bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@22 (line 145)
            ││                                                            ;   {optimized virtual_call}
            ││  0x00007f897874edb4: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.20%     ││  0x00007f897874edb9: movzbl 0x94(%rcx),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@52 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f897874edc1: mov    0x108(%r15),%r10               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f897874edc8: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@35 (line 147)
  0.16%     ││  0x00007f897874edcc: test   %eax,(%r10)                    ;   {poll}
            ││  0x00007f897874edcf: test   %r11d,%r11d
            ││  0x00007f897874edd2: jne    0x00007f897874ed43
            ││  0x00007f897874edd8: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f897874eddd: mov    0xc(%r10),%r10d                ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@4 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.28%     ││  0x00007f897874ede1: mov    0x50(%rsp),%r11                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f897874ede6: mov    0x20(%r11),%ebx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@36 (line 78)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f897874edea: test   %r10d,%r10d
          ╭ ││  0x00007f897874eded: jle    0x00007f897874ef47             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f897874edf3: mov    0x18(%r11),%r8d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@14 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.20%   │ ││  0x00007f897874edf7: test   %r8d,%r8d
          │ ││  0x00007f897874edfa: je     0x00007f897874ef51             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f897874ee00: mov    0x1c(%r11),%r11d               ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@25 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f897874ee04: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007f897874ef51
  0.47%   │ ││  0x00007f897874ee0b: test   %ebx,%ebx
          │ ││  0x00007f897874ee0d: je     0x00007f897874ef51
  0.04%   │ ││  0x00007f897874ee13: cmp    $0x7ffffff8,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f897874ee1a: jg     0x00007f897874ef6a
          │ ││  0x00007f897874ee20: vaddps 0x10(%r12,%r8,8),%ymm0,%ymm0
  0.71%   │ ││  0x00007f897874ee27: vmovdqu %ymm0,0x10(%r12,%rbx,8)
  0.08%   │ ││  0x00007f897874ee2e: lea    (%r12,%rbx,8),%rdi
          │ ││  0x00007f897874ee32: lea    (%r12,%r8,8),%rdx
          │ ││  0x00007f897874ee36: lea    (%r12,%r11,8),%rsi
          │ ││  0x00007f897874ee3a: mov    %r10d,%r11d
  0.20%   │ ││  0x00007f897874ee3d: add    $0xffffffc8,%r11d
          │ ││  0x00007f897874ee41: cmp    %r11d,%r10d
          │ ││  0x00007f897874ee44: mov    $0x80000000,%r8d
          │ ││  0x00007f897874ee4a: cmovl  %r8d,%r11d
  0.24%   │ ││  0x00007f897874ee4e: cmp    $0x8,%r11d
          │ ││  0x00007f897874ee52: jle    0x00007f897874ef86
          │ ││  0x00007f897874ee58: mov    $0x8,%r9d
          │ ││  0x00007f897874ee5e: xchg   %ax,%ax                        ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.06%   │↗││  0x00007f897874ee60: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  1.85%   ││││  0x00007f897874ee67: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  7.01%   ││││  0x00007f897874ee6e: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  4.81%   ││││  0x00007f897874ee75: vmovdqu 0x30(%rsi,%r9,4),%ymm0
  4.41%   ││││  0x00007f897874ee7c: vaddps 0x30(%rdx,%r9,4),%ymm0,%ymm0
  7.31%   ││││  0x00007f897874ee83: vmovdqu %ymm0,0x30(%rdi,%r9,4)
  2.03%   ││││  0x00007f897874ee8a: vmovdqu 0x50(%rsi,%r9,4),%ymm0
  2.23%   ││││  0x00007f897874ee91: vaddps 0x50(%rdx,%r9,4),%ymm0,%ymm0
  7.15%   ││││  0x00007f897874ee98: vmovdqu %ymm0,0x50(%rdi,%r9,4)
  2.19%   ││││  0x00007f897874ee9f: vmovdqu 0x70(%rsi,%r9,4),%ymm0
  0.18%   ││││  0x00007f897874eea6: vaddps 0x70(%rdx,%r9,4),%ymm0,%ymm0
  5.85%   ││││  0x00007f897874eead: vmovdqu %ymm0,0x70(%rdi,%r9,4)
  2.01%   ││││  0x00007f897874eeb4: vmovdqu 0x90(%rsi,%r9,4),%ymm0
  2.52%   ││││  0x00007f897874eebe: vaddps 0x90(%rdx,%r9,4),%ymm0,%ymm0
  6.84%   ││││  0x00007f897874eec8: vmovdqu %ymm0,0x90(%rdi,%r9,4)
  2.46%   ││││  0x00007f897874eed2: vmovdqu 0xb0(%rsi,%r9,4),%ymm0
  0.33%   ││││  0x00007f897874eedc: vaddps 0xb0(%rdx,%r9,4),%ymm0,%ymm0
  6.34%   ││││  0x00007f897874eee6: vmovdqu %ymm0,0xb0(%rdi,%r9,4)
  2.58%   ││││  0x00007f897874eef0: vmovdqu 0xd0(%rsi,%r9,4),%ymm0
  1.89%   ││││  0x00007f897874eefa: vaddps 0xd0(%rdx,%r9,4),%ymm0,%ymm0
  6.44%   ││││  0x00007f897874ef04: vmovdqu %ymm0,0xd0(%rdi,%r9,4)
  2.38%   ││││  0x00007f897874ef0e: vmovdqu 0xf0(%rsi,%r9,4),%ymm0
  0.18%   ││││  0x00007f897874ef18: vaddps 0xf0(%rdx,%r9,4),%ymm0,%ymm0
  6.42%   ││││  0x00007f897874ef22: vmovdqu %ymm0,0xf0(%rdi,%r9,4)        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  2.34%   ││││  0x00007f897874ef2c: add    $0x40,%r9d
          ││││  0x00007f897874ef30: cmp    %r11d,%r9d
          │╰││  0x00007f897874ef33: jl     0x00007f897874ee60
          │ ││  0x00007f897874ef39: cmp    %r10d,%r9d
          │ ╰│  0x00007f897874ef3c: jl     0x00007f897874ed7c
          │  ╰  0x00007f897874ef42: jmpq   0x00007f897874ed9a
          ↘     0x00007f897874ef47: mov    %rcx,0x40(%rsp)
                0x00007f897874ef4c: jmpq   0x00007f897874ed9f
....................................................................................................
 96.24%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.24%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 
  2.29%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.85%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 (65 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZNK15G1CollectionSet7iterateEP17HeapRegionClosure (4 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  method entry point (kind = native)  (0 bytes) 
  0.02%         interpreter  method entry point (kind = native)  (0 bytes) 
  0.02%         interpreter  iand  126 iand  (0 bytes) 
  0.20%  <...other 10 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.24%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 
  2.58%   [kernel.kallsyms]  [unknown] 
  0.85%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 
  0.04%           libjvm.so  _ZNK15G1CollectionSet7iterateEP17HeapRegionClosure 
  0.04%         interpreter  method entry point (kind = native)  
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%           libjvm.so  _ZNK8CodeHeap16find_blob_unsafeEPv 
  0.02%           libjvm.so  _ZN21ThreadStateTransition22transition_from_nativeEP10JavaThread15JavaThreadState.constprop.186 
  0.02%           libjvm.so  _ZN7Monitor28lock_without_safepoint_checkEv 
  0.02%           libjvm.so  _ZN13InstanceKlass17find_method_indexEPK5ArrayIP6MethodEPK6SymbolS8_N5Klass18OverpassLookupModeENS9_16StaticLookupModeENS9_17PrivateLookupModeE.constprop.305 
  0.02%       libz.so.1.2.8  inflate 
  0.02%        libc-2.23.so  _int_free 
  0.02%           libjvm.so  _ZN12ConstantPool13klass_at_implERK18constantPoolHandleibP6Thread 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  iand  126 iand  
  0.02%           libjvm.so  _ZN7Monitor6unlockEv 
  0.02%           libjvm.so  _ZN10Reflection19verify_class_accessEPK5KlassPK13InstanceKlassb 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.08%                  c2
  2.58%   [kernel.kallsyms]
  0.18%           libjvm.so
  0.10%         interpreter
  0.02%        libc-2.23.so
  0.02%       libz.so.1.2.8
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArray
# Parameters: (probabilityOfNaN = 0.001, size = 1024)

# Run progress: 70.37% complete, ETA 00:04:47
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5172.114 ops/ms
# Warmup Iteration   2: 5701.950 ops/ms
# Warmup Iteration   3: 5841.999 ops/ms
# Warmup Iteration   4: 5826.342 ops/ms
# Warmup Iteration   5: 5837.728 ops/ms
Iteration   1: 5817.630 ops/ms
Iteration   2: 5819.658 ops/ms
Iteration   3: 5783.035 ops/ms
Iteration   4: 5800.120 ops/ms
Iteration   5: 5728.434 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 71.60% complete, ETA 00:04:35
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5213.183 ops/ms
# Warmup Iteration   2: 5736.894 ops/ms
# Warmup Iteration   3: 5794.774 ops/ms
# Warmup Iteration   4: 5835.230 ops/ms
# Warmup Iteration   5: 5834.064 ops/ms
Iteration   1: 5832.752 ops/ms
Iteration   2: 5839.767 ops/ms
Iteration   3: 5822.551 ops/ms
Iteration   4: 5696.745 ops/ms
Iteration   5: 5739.324 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 72.84% complete, ETA 00:04:23
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5006.647 ops/ms
# Warmup Iteration   2: 5695.883 ops/ms
# Warmup Iteration   3: 5824.644 ops/ms
# Warmup Iteration   4: 5804.826 ops/ms
# Warmup Iteration   5: 5814.310 ops/ms
Iteration   1: 5799.551 ops/ms
Iteration   2: 5807.005 ops/ms
Iteration   3: 5724.131 ops/ms
Iteration   4: 5249.701 ops/ms
Iteration   5: 5804.810 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArray":
  5751.014 ±(99.9%) 155.520 ops/ms [Average]
  (min, avg, max) = (5249.701, 5751.014, 5839.767), stdev = 145.474
  CI (99.9%): [5595.494, 5906.534] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArray:·asm":
PrintAssembly processed: 54587 total address lines.
Perf output processed (skipped 6.421 seconds):
 Column 1: cycles (5090 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 

                0x00007f4dac74e860: movq   $0x0,0x20(%r10)
                0x00007f4dac74e868: vzeroupper 
                0x00007f4dac74e86b: add    $0x30,%rsp
                0x00007f4dac74e86f: pop    %rbp
                0x00007f4dac74e870: mov    0x108(%r15),%r10
                0x00007f4dac74e877: test   %eax,(%r10)                    ;   {poll_return}
                0x00007f4dac74e87a: retq   
                0x00007f4dac74e87b: nop                                   ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.22%  ↗  ↗   0x00007f4dac74e87c: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  0.65%  │  │   0x00007f4dac74e883: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  3.46%  │  │   0x00007f4dac74e88a: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  0.90%  │  │   0x00007f4dac74e891: add    $0x8,%r9d
         │  │   0x00007f4dac74e895: cmp    %r10d,%r9d
         ╰  │   0x00007f4dac74e898: jl     0x00007f4dac74e87c
            │↗  0x00007f4dac74e89a: mov    %rcx,0x40(%rsp)
            ││  0x00007f4dac74e89f: mov    %rbx,%rdx
  0.18%     ││  0x00007f4dac74e8a2: shl    $0x3,%rdx
            ││  0x00007f4dac74e8a6: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f4dac74e8aa: xchg   %ax,%ax
            ││  0x00007f4dac74e8ac: vzeroupper 
  0.18%     ││  0x00007f4dac74e8af: callq  0x00007f4dac6bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@22 (line 145)
            ││                                                            ;   {optimized virtual_call}
            ││  0x00007f4dac74e8b4: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.10%     ││  0x00007f4dac74e8b9: movzbl 0x94(%rcx),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@52 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f4dac74e8c1: mov    0x108(%r15),%r10               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f4dac74e8c8: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@35 (line 147)
  0.18%     ││  0x00007f4dac74e8cc: test   %eax,(%r10)                    ;   {poll}
            ││  0x00007f4dac74e8cf: test   %r11d,%r11d
            ││  0x00007f4dac74e8d2: jne    0x00007f4dac74e843
            ││  0x00007f4dac74e8d8: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f4dac74e8dd: mov    0xc(%r10),%r10d                ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@4 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.12%     ││  0x00007f4dac74e8e1: mov    0x50(%rsp),%r11                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f4dac74e8e6: mov    0x20(%r11),%ebx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@36 (line 78)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f4dac74e8ea: test   %r10d,%r10d
          ╭ ││  0x00007f4dac74e8ed: jle    0x00007f4dac74ea47             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f4dac74e8f3: mov    0x18(%r11),%r8d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@14 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.10%   │ ││  0x00007f4dac74e8f7: test   %r8d,%r8d
          │ ││  0x00007f4dac74e8fa: je     0x00007f4dac74ea51             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f4dac74e900: mov    0x1c(%r11),%r11d               ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@25 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f4dac74e904: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007f4dac74ea51
  0.67%   │ ││  0x00007f4dac74e90b: test   %ebx,%ebx
          │ ││  0x00007f4dac74e90d: je     0x00007f4dac74ea51
          │ ││  0x00007f4dac74e913: cmp    $0x7ffffff8,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f4dac74e91a: jg     0x00007f4dac74ea6a
          │ ││  0x00007f4dac74e920: vaddps 0x10(%r12,%r8,8),%ymm0,%ymm0
  0.81%   │ ││  0x00007f4dac74e927: vmovdqu %ymm0,0x10(%r12,%rbx,8)
  0.12%   │ ││  0x00007f4dac74e92e: lea    (%r12,%rbx,8),%rdi
          │ ││  0x00007f4dac74e932: lea    (%r12,%r8,8),%rdx
          │ ││  0x00007f4dac74e936: lea    (%r12,%r11,8),%rsi
          │ ││  0x00007f4dac74e93a: mov    %r10d,%r11d
  0.20%   │ ││  0x00007f4dac74e93d: add    $0xffffffc8,%r11d
          │ ││  0x00007f4dac74e941: cmp    %r11d,%r10d
          │ ││  0x00007f4dac74e944: mov    $0x80000000,%r8d
          │ ││  0x00007f4dac74e94a: cmovl  %r8d,%r11d
  0.16%   │ ││  0x00007f4dac74e94e: cmp    $0x8,%r11d
          │ ││  0x00007f4dac74e952: jle    0x00007f4dac74ea86
          │ ││  0x00007f4dac74e958: mov    $0x8,%r9d
          │ ││  0x00007f4dac74e95e: xchg   %ax,%ax                        ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │↗││  0x00007f4dac74e960: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  3.58%   ││││  0x00007f4dac74e967: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  6.97%   ││││  0x00007f4dac74e96e: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  1.73%   ││││  0x00007f4dac74e975: vmovdqu 0x30(%rsi,%r9,4),%ymm0
  1.96%   ││││  0x00007f4dac74e97c: vaddps 0x30(%rdx,%r9,4),%ymm0,%ymm0
  7.52%   ││││  0x00007f4dac74e983: vmovdqu %ymm0,0x30(%rdi,%r9,4)
  2.65%   ││││  0x00007f4dac74e98a: vmovdqu 0x50(%rsi,%r9,4),%ymm0
  0.29%   ││││  0x00007f4dac74e991: vaddps 0x50(%rdx,%r9,4),%ymm0,%ymm0
  6.17%   ││││  0x00007f4dac74e998: vmovdqu %ymm0,0x50(%rdi,%r9,4)
  2.44%   ││││  0x00007f4dac74e99f: vmovdqu 0x70(%rsi,%r9,4),%ymm0
  1.26%   ││││  0x00007f4dac74e9a6: vaddps 0x70(%rdx,%r9,4),%ymm0,%ymm0
  8.68%   ││││  0x00007f4dac74e9ad: vmovdqu %ymm0,0x70(%rdi,%r9,4)
  1.93%   ││││  0x00007f4dac74e9b4: vmovdqu 0x90(%rsi,%r9,4),%ymm0
  0.06%   ││││  0x00007f4dac74e9be: vaddps 0x90(%rdx,%r9,4),%ymm0,%ymm0
  6.01%   ││││  0x00007f4dac74e9c8: vmovdqu %ymm0,0x90(%rdi,%r9,4)
  2.73%   ││││  0x00007f4dac74e9d2: vmovdqu 0xb0(%rsi,%r9,4),%ymm0
  1.65%   ││││  0x00007f4dac74e9dc: vaddps 0xb0(%rdx,%r9,4),%ymm0,%ymm0
  8.15%   ││││  0x00007f4dac74e9e6: vmovdqu %ymm0,0xb0(%rdi,%r9,4)
  2.50%   ││││  0x00007f4dac74e9f0: vmovdqu 0xd0(%rsi,%r9,4),%ymm0
          ││││  0x00007f4dac74e9fa: vaddps 0xd0(%rdx,%r9,4),%ymm0,%ymm0
  6.74%   ││││  0x00007f4dac74ea04: vmovdqu %ymm0,0xd0(%rdi,%r9,4)
  2.59%   ││││  0x00007f4dac74ea0e: vmovdqu 0xf0(%rsi,%r9,4),%ymm0
  1.57%   ││││  0x00007f4dac74ea18: vaddps 0xf0(%rdx,%r9,4),%ymm0,%ymm0
  8.53%   ││││  0x00007f4dac74ea22: vmovdqu %ymm0,0xf0(%rdi,%r9,4)        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  2.44%   ││││  0x00007f4dac74ea2c: add    $0x40,%r9d
          ││││  0x00007f4dac74ea30: cmp    %r11d,%r9d
          │╰││  0x00007f4dac74ea33: jl     0x00007f4dac74e960
          │ ││  0x00007f4dac74ea39: cmp    %r10d,%r9d
          │ ╰│  0x00007f4dac74ea3c: jl     0x00007f4dac74e87c
          │  ╰  0x00007f4dac74ea42: jmpq   0x00007f4dac74e89a
          ↘     0x00007f4dac74ea47: mov    %rcx,0x40(%rsp)
                0x00007f4dac74ea4c: jmpq   0x00007f4dac74e89f
....................................................................................................
 96.17%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.17%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 
  1.59%   [kernel.kallsyms]  [unknown] (5 bytes) 
  1.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.71%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 (65 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         classes.jsa  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  lreturn  173 lreturn  (0 bytes) 
  0.02%         interpreter  new  187 new  (0 bytes) 
  0.10%  <...other 5 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.17%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 
  2.93%   [kernel.kallsyms]  [unknown] 
  0.71%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 
  0.02%           libjvm.so  _ZN11SymbolTable11lookup_onlyEPKciRj 
  0.02%         interpreter  ifnull  198 ifnull  
  0.02%           libjvm.so  _ZN28G1YoungRemSetSamplingClosure14do_heap_regionEP10HeapRegion 
  0.02%         classes.jsa  [unknown] 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN10Dictionary4findEjP6Symbol6Handle 
  0.02%         interpreter  new  187 new  
  0.02%         interpreter  lreturn  173 lreturn  
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.88%                  c2
  2.93%   [kernel.kallsyms]
  0.08%           libjvm.so
  0.08%         interpreter
  0.02%         classes.jsa
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 54581 total address lines.
Perf output processed (skipped 6.433 seconds):
 Column 1: cycles (4969 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 

                0x00007f24fc741d60: movq   $0x0,0x20(%r10)
                0x00007f24fc741d68: vzeroupper 
                0x00007f24fc741d6b: add    $0x30,%rsp
                0x00007f24fc741d6f: pop    %rbp
                0x00007f24fc741d70: mov    0x108(%r15),%r10
                0x00007f24fc741d77: test   %eax,(%r10)                    ;   {poll_return}
                0x00007f24fc741d7a: retq   
                0x00007f24fc741d7b: nop                                   ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.08%  ↗  ↗   0x00007f24fc741d7c: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  0.48%  │  │   0x00007f24fc741d83: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  3.12%  │  │   0x00007f24fc741d8a: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  0.93%  │  │   0x00007f24fc741d91: add    $0x8,%r9d
         │  │   0x00007f24fc741d95: cmp    %r10d,%r9d
         ╰  │   0x00007f24fc741d98: jl     0x00007f24fc741d7c
            │↗  0x00007f24fc741d9a: mov    %rcx,0x40(%rsp)
            ││  0x00007f24fc741d9f: mov    %rbx,%rdx
  0.18%     ││  0x00007f24fc741da2: shl    $0x3,%rdx
            ││  0x00007f24fc741da6: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f24fc741daa: xchg   %ax,%ax
            ││  0x00007f24fc741dac: vzeroupper 
  0.22%     ││  0x00007f24fc741daf: callq  0x00007f24fc6bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@22 (line 145)
            ││                                                            ;   {optimized virtual_call}
            ││  0x00007f24fc741db4: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.06%     ││  0x00007f24fc741db9: movzbl 0x94(%rcx),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@52 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f24fc741dc1: mov    0x108(%r15),%r10               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f24fc741dc8: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@35 (line 147)
  0.22%     ││  0x00007f24fc741dcc: test   %eax,(%r10)                    ;   {poll}
            ││  0x00007f24fc741dcf: test   %r11d,%r11d
            ││  0x00007f24fc741dd2: jne    0x00007f24fc741d43
            ││  0x00007f24fc741dd8: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f24fc741ddd: mov    0xc(%r10),%r10d                ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@4 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.14%     ││  0x00007f24fc741de1: mov    0x50(%rsp),%r11                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f24fc741de6: mov    0x20(%r11),%ebx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@36 (line 78)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f24fc741dea: test   %r10d,%r10d
          ╭ ││  0x00007f24fc741ded: jle    0x00007f24fc741f47             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f24fc741df3: mov    0x18(%r11),%r8d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@14 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.24%   │ ││  0x00007f24fc741df7: test   %r8d,%r8d
          │ ││  0x00007f24fc741dfa: je     0x00007f24fc741f51             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f24fc741e00: mov    0x1c(%r11),%r11d               ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@25 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f24fc741e04: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007f24fc741f51
  0.40%   │ ││  0x00007f24fc741e0b: test   %ebx,%ebx
          │ ││  0x00007f24fc741e0d: je     0x00007f24fc741f51
  0.04%   │ ││  0x00007f24fc741e13: cmp    $0x7ffffff8,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f24fc741e1a: jg     0x00007f24fc741f6a
          │ ││  0x00007f24fc741e20: vaddps 0x10(%r12,%r8,8),%ymm0,%ymm0
  1.01%   │ ││  0x00007f24fc741e27: vmovdqu %ymm0,0x10(%r12,%rbx,8)
  0.10%   │ ││  0x00007f24fc741e2e: lea    (%r12,%rbx,8),%rdi
          │ ││  0x00007f24fc741e32: lea    (%r12,%r8,8),%rdx
          │ ││  0x00007f24fc741e36: lea    (%r12,%r11,8),%rsi
          │ ││  0x00007f24fc741e3a: mov    %r10d,%r11d
  0.20%   │ ││  0x00007f24fc741e3d: add    $0xffffffc8,%r11d
          │ ││  0x00007f24fc741e41: cmp    %r11d,%r10d
          │ ││  0x00007f24fc741e44: mov    $0x80000000,%r8d
          │ ││  0x00007f24fc741e4a: cmovl  %r8d,%r11d
  0.16%   │ ││  0x00007f24fc741e4e: cmp    $0x8,%r11d
          │ ││  0x00007f24fc741e52: jle    0x00007f24fc741f86
          │ ││  0x00007f24fc741e58: mov    $0x8,%r9d
          │ ││  0x00007f24fc741e5e: xchg   %ax,%ax                        ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │↗││  0x00007f24fc741e60: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  3.62%   ││││  0x00007f24fc741e67: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  7.77%   ││││  0x00007f24fc741e6e: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  2.21%   ││││  0x00007f24fc741e75: vmovdqu 0x30(%rsi,%r9,4),%ymm0
  1.75%   ││││  0x00007f24fc741e7c: vaddps 0x30(%rdx,%r9,4),%ymm0,%ymm0
  7.75%   ││││  0x00007f24fc741e83: vmovdqu %ymm0,0x30(%rdi,%r9,4)
  2.56%   ││││  0x00007f24fc741e8a: vmovdqu 0x50(%rsi,%r9,4),%ymm0
  0.26%   ││││  0x00007f24fc741e91: vaddps 0x50(%rdx,%r9,4),%ymm0,%ymm0
  6.16%   ││││  0x00007f24fc741e98: vmovdqu %ymm0,0x50(%rdi,%r9,4)
  3.06%   ││││  0x00007f24fc741e9f: vmovdqu 0x70(%rsi,%r9,4),%ymm0
  1.55%   ││││  0x00007f24fc741ea6: vaddps 0x70(%rdx,%r9,4),%ymm0,%ymm0
  8.01%   ││││  0x00007f24fc741ead: vmovdqu %ymm0,0x70(%rdi,%r9,4)
  2.54%   ││││  0x00007f24fc741eb4: vmovdqu 0x90(%rsi,%r9,4),%ymm0
          ││││  0x00007f24fc741ebe: vaddps 0x90(%rdx,%r9,4),%ymm0,%ymm0
  5.82%   ││││  0x00007f24fc741ec8: vmovdqu %ymm0,0x90(%rdi,%r9,4)
  2.84%   ││││  0x00007f24fc741ed2: vmovdqu 0xb0(%rsi,%r9,4),%ymm0
  2.23%   ││││  0x00007f24fc741edc: vaddps 0xb0(%rdx,%r9,4),%ymm0,%ymm0
  8.15%   ││││  0x00007f24fc741ee6: vmovdqu %ymm0,0xb0(%rdi,%r9,4)
  2.66%   ││││  0x00007f24fc741ef0: vmovdqu 0xd0(%rsi,%r9,4),%ymm0
  0.06%   ││││  0x00007f24fc741efa: vaddps 0xd0(%rdx,%r9,4),%ymm0,%ymm0
  6.52%   ││││  0x00007f24fc741f04: vmovdqu %ymm0,0xd0(%rdi,%r9,4)
  2.68%   ││││  0x00007f24fc741f0e: vmovdqu 0xf0(%rsi,%r9,4),%ymm0
  1.69%   ││││  0x00007f24fc741f18: vaddps 0xf0(%rdx,%r9,4),%ymm0,%ymm0
  8.59%   ││││  0x00007f24fc741f22: vmovdqu %ymm0,0xf0(%rdi,%r9,4)        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  2.54%   ││││  0x00007f24fc741f2c: add    $0x40,%r9d
          ││││  0x00007f24fc741f30: cmp    %r11d,%r9d
          │╰││  0x00007f24fc741f33: jl     0x00007f24fc741e60
          │ ││  0x00007f24fc741f39: cmp    %r10d,%r9d
          │ ╰│  0x00007f24fc741f3c: jl     0x00007f24fc741d7c
          │  ╰  0x00007f24fc741f42: jmpq   0x00007f24fc741d9a
          ↘     0x00007f24fc741f47: mov    %rcx,0x40(%rsp)
                0x00007f24fc741f4c: jmpq   0x00007f24fc741d9f
....................................................................................................
 98.59%  <total for region 1>

....[Hottest Regions]...............................................................................
 98.59%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 
  0.68%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 (65 bytes) 
  0.42%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  invokevirtual  182 invokevirtual  (0 bytes) 
  0.02%                  c2  java.lang.String::equals, version 36 (0 bytes) 
  0.02%           libjvm.so  _ZNK15G1CollectionSet7iterateEP17HeapRegionClosure (0 bytes) 
  0.02%           libjvm.so  _ZN21ThreadStateTransition22transition_from_nativeEP10JavaThread15JavaThreadState.constprop.178 (0 bytes) 
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 98.59%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 
  0.68%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 
  0.60%   [kernel.kallsyms]  [unknown] 
  0.02%           libjvm.so  _ZN21ThreadStateTransition22transition_from_nativeEP10JavaThread15JavaThreadState.constprop.178 
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%                  c2  java.lang.String::equals, version 36 
  0.02%           libjvm.so  _ZNK15G1CollectionSet7iterateEP17HeapRegionClosure 
  0.02%         interpreter  method entry point (kind = zerolocals)  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 99.30%                  c2
  0.60%   [kernel.kallsyms]
  0.04%           libjvm.so
  0.04%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 54601 total address lines.
Perf output processed (skipped 6.422 seconds):
 Column 1: cycles (5088 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 

                0x00007f70fbae81e0: movq   $0x0,0x20(%r10)
                0x00007f70fbae81e8: vzeroupper 
                0x00007f70fbae81eb: add    $0x30,%rsp
                0x00007f70fbae81ef: pop    %rbp
                0x00007f70fbae81f0: mov    0x108(%r15),%r10
                0x00007f70fbae81f7: test   %eax,(%r10)                    ;   {poll_return}
                0x00007f70fbae81fa: retq   
                0x00007f70fbae81fb: nop                                   ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.18%  ↗  ↗   0x00007f70fbae81fc: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  0.53%  │  │   0x00007f70fbae8203: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  3.22%  │  │   0x00007f70fbae820a: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  0.83%  │  │   0x00007f70fbae8211: add    $0x8,%r9d
         │  │   0x00007f70fbae8215: cmp    %r10d,%r9d
         ╰  │   0x00007f70fbae8218: jl     0x00007f70fbae81fc
            │↗  0x00007f70fbae821a: mov    %rcx,0x40(%rsp)
            ││  0x00007f70fbae821f: mov    %rbx,%rdx
  0.22%     ││  0x00007f70fbae8222: shl    $0x3,%rdx
            ││  0x00007f70fbae8226: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f70fbae822a: xchg   %ax,%ax
            ││  0x00007f70fbae822c: vzeroupper 
  0.14%     ││  0x00007f70fbae822f: callq  0x00007f70fba59900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@22 (line 145)
            ││                                                            ;   {optimized virtual_call}
            ││  0x00007f70fbae8234: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.08%     ││  0x00007f70fbae8239: movzbl 0x94(%rcx),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@52 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f70fbae8241: mov    0x108(%r15),%r10               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f70fbae8248: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@35 (line 147)
  0.18%     ││  0x00007f70fbae824c: test   %eax,(%r10)                    ;   {poll}
            ││  0x00007f70fbae824f: test   %r11d,%r11d
            ││  0x00007f70fbae8252: jne    0x00007f70fbae81c3
            ││  0x00007f70fbae8258: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f70fbae825d: mov    0xc(%r10),%r10d                ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@4 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.08%     ││  0x00007f70fbae8261: mov    0x50(%rsp),%r11                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f70fbae8266: mov    0x20(%r11),%ebx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@36 (line 78)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f70fbae826a: test   %r10d,%r10d
          ╭ ││  0x00007f70fbae826d: jle    0x00007f70fbae83c7             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f70fbae8273: mov    0x18(%r11),%r8d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@14 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.12%   │ ││  0x00007f70fbae8277: test   %r8d,%r8d
          │ ││  0x00007f70fbae827a: je     0x00007f70fbae83d1             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f70fbae8280: mov    0x1c(%r11),%r11d               ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@25 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f70fbae8284: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007f70fbae83d1
  0.65%   │ ││  0x00007f70fbae828b: test   %ebx,%ebx
          │ ││  0x00007f70fbae828d: je     0x00007f70fbae83d1
          │ ││  0x00007f70fbae8293: cmp    $0x7ffffff8,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f70fbae829a: jg     0x00007f70fbae83ea
          │ ││  0x00007f70fbae82a0: vaddps 0x10(%r12,%r8,8),%ymm0,%ymm0
  0.98%   │ ││  0x00007f70fbae82a7: vmovdqu %ymm0,0x10(%r12,%rbx,8)
  0.24%   │ ││  0x00007f70fbae82ae: lea    (%r12,%rbx,8),%rdi
          │ ││  0x00007f70fbae82b2: lea    (%r12,%r8,8),%rdx
          │ ││  0x00007f70fbae82b6: lea    (%r12,%r11,8),%rsi
          │ ││  0x00007f70fbae82ba: mov    %r10d,%r11d
  0.12%   │ ││  0x00007f70fbae82bd: add    $0xffffffc8,%r11d
          │ ││  0x00007f70fbae82c1: cmp    %r11d,%r10d
          │ ││  0x00007f70fbae82c4: mov    $0x80000000,%r8d
          │ ││  0x00007f70fbae82ca: cmovl  %r8d,%r11d
  0.12%   │ ││  0x00007f70fbae82ce: cmp    $0x8,%r11d
          │ ││  0x00007f70fbae82d2: jle    0x00007f70fbae8406
          │ ││  0x00007f70fbae82d8: mov    $0x8,%r9d
          │ ││  0x00007f70fbae82de: xchg   %ax,%ax                        ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │↗││  0x00007f70fbae82e0: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  3.71%   ││││  0x00007f70fbae82e7: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  6.78%   ││││  0x00007f70fbae82ee: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  2.10%   ││││  0x00007f70fbae82f5: vmovdqu 0x30(%rsi,%r9,4),%ymm0
  2.00%   ││││  0x00007f70fbae82fc: vaddps 0x30(%rdx,%r9,4),%ymm0,%ymm0
  7.82%   ││││  0x00007f70fbae8303: vmovdqu %ymm0,0x30(%rdi,%r9,4)
  2.24%   ││││  0x00007f70fbae830a: vmovdqu 0x50(%rsi,%r9,4),%ymm0
  0.47%   ││││  0x00007f70fbae8311: vaddps 0x50(%rdx,%r9,4),%ymm0,%ymm0
  5.99%   ││││  0x00007f70fbae8318: vmovdqu %ymm0,0x50(%rdi,%r9,4)
  2.59%   ││││  0x00007f70fbae831f: vmovdqu 0x70(%rsi,%r9,4),%ymm0
  1.18%   ││││  0x00007f70fbae8326: vaddps 0x70(%rdx,%r9,4),%ymm0,%ymm0
  8.06%   ││││  0x00007f70fbae832d: vmovdqu %ymm0,0x70(%rdi,%r9,4)
  2.69%   ││││  0x00007f70fbae8334: vmovdqu 0x90(%rsi,%r9,4),%ymm0
  0.02%   ││││  0x00007f70fbae833e: vaddps 0x90(%rdx,%r9,4),%ymm0,%ymm0
  5.80%   ││││  0x00007f70fbae8348: vmovdqu %ymm0,0x90(%rdi,%r9,4)
  2.57%   ││││  0x00007f70fbae8352: vmovdqu 0xb0(%rsi,%r9,4),%ymm0
  2.04%   ││││  0x00007f70fbae835c: vaddps 0xb0(%rdx,%r9,4),%ymm0,%ymm0
  8.67%   ││││  0x00007f70fbae8366: vmovdqu %ymm0,0xb0(%rdi,%r9,4)
  2.97%   ││││  0x00007f70fbae8370: vmovdqu 0xd0(%rsi,%r9,4),%ymm0
          ││││  0x00007f70fbae837a: vaddps 0xd0(%rdx,%r9,4),%ymm0,%ymm0
  6.31%   ││││  0x00007f70fbae8384: vmovdqu %ymm0,0xd0(%rdi,%r9,4)
  2.46%   ││││  0x00007f70fbae838e: vmovdqu 0xf0(%rsi,%r9,4),%ymm0
  1.43%   ││││  0x00007f70fbae8398: vaddps 0xf0(%rdx,%r9,4),%ymm0,%ymm0
  8.20%   ││││  0x00007f70fbae83a2: vmovdqu %ymm0,0xf0(%rdi,%r9,4)        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  2.20%   ││││  0x00007f70fbae83ac: add    $0x40,%r9d
          ││││  0x00007f70fbae83b0: cmp    %r11d,%r9d
          │╰││  0x00007f70fbae83b3: jl     0x00007f70fbae82e0
          │ ││  0x00007f70fbae83b9: cmp    %r10d,%r9d
          │ ╰│  0x00007f70fbae83bc: jl     0x00007f70fbae81fc
          │  ╰  0x00007f70fbae83c2: jmpq   0x00007f70fbae821a
          ↘     0x00007f70fbae83c7: mov    %rcx,0x40(%rsp)
                0x00007f70fbae83cc: jmpq   0x00007f70fbae821f
....................................................................................................
 95.99%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.99%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 
  2.77%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.77%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 (65 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  nofast_getfield  234 nofast_getfield  (22 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         classes.jsa  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  iload_0  26 iload_0  (0 bytes) 
  0.02%         interpreter  if_icmple  164 if_icmple  (0 bytes) 
  0.02%  <...other 1 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.99%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 
  3.07%   [kernel.kallsyms]  [unknown] 
  0.77%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 
  0.04%         interpreter  nofast_getfield  234 nofast_getfield  
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  if_icmple  164 if_icmple  
  0.02%         interpreter  iload_0  26 iload_0  
  0.02%         classes.jsa  [unknown] 
  0.02%           libjvm.so  _ZN9CodeCache9find_blobEPv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.76%                  c2
  3.07%   [kernel.kallsyms]
  0.12%         interpreter
  0.02%           libjvm.so
  0.02%         classes.jsa
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArray
# Parameters: (probabilityOfNaN = 0.01, size = 1024)

# Run progress: 74.07% complete, ETA 00:04:11
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1958.547 ops/ms
# Warmup Iteration   2: 2126.127 ops/ms
# Warmup Iteration   3: 2144.848 ops/ms
# Warmup Iteration   4: 2122.565 ops/ms
# Warmup Iteration   5: 2151.021 ops/ms
Iteration   1: 2144.825 ops/ms
Iteration   2: 2160.747 ops/ms
Iteration   3: 2159.204 ops/ms
Iteration   4: 2152.258 ops/ms
Iteration   5: 2155.072 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 75.31% complete, ETA 00:03:59
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5194.181 ops/ms
# Warmup Iteration   2: 5610.828 ops/ms
# Warmup Iteration   3: 5658.573 ops/ms
# Warmup Iteration   4: 5725.643 ops/ms
# Warmup Iteration   5: 5717.982 ops/ms
Iteration   1: 5778.380 ops/ms
Iteration   2: 5764.587 ops/ms
Iteration   3: 5735.918 ops/ms
Iteration   4: 5769.689 ops/ms
Iteration   5: 5743.278 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 76.54% complete, ETA 00:03:46
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4963.294 ops/ms
# Warmup Iteration   2: 5711.120 ops/ms
# Warmup Iteration   3: 5575.370 ops/ms
# Warmup Iteration   4: 5759.088 ops/ms
# Warmup Iteration   5: 5763.758 ops/ms
Iteration   1: 5665.134 ops/ms
Iteration   2: 5697.074 ops/ms
Iteration   3: 5726.662 ops/ms
Iteration   4: 5733.307 ops/ms
Iteration   5: 5688.800 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArray":
  4538.329 ±(99.9%) 1865.615 ops/ms [Average]
  (min, avg, max) = (2144.825, 4538.329, 5778.380), stdev = 1745.098
  CI (99.9%): [2672.714, 6403.944] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArray:·asm":
PrintAssembly processed: 54599 total address lines.
Perf output processed (skipped 6.414 seconds):
 Column 1: cycles (5054 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 

                0x00007f088074e2e0: movq   $0x0,0x20(%r10)
                0x00007f088074e2e8: vzeroupper 
                0x00007f088074e2eb: add    $0x30,%rsp
                0x00007f088074e2ef: pop    %rbp
                0x00007f088074e2f0: mov    0x108(%r15),%r10
                0x00007f088074e2f7: test   %eax,(%r10)                    ;   {poll_return}
                0x00007f088074e2fa: retq   
                0x00007f088074e2fb: nop                                   ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.02%  ↗  ↗   0x00007f088074e2fc: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  0.26%  │  │   0x00007f088074e303: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  0.99%  │  │   0x00007f088074e30a: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  0.42%  │  │   0x00007f088074e311: add    $0x8,%r9d
         │  │   0x00007f088074e315: cmp    %r10d,%r9d
         ╰  │   0x00007f088074e318: jl     0x00007f088074e2fc
            │↗  0x00007f088074e31a: mov    %rcx,0x40(%rsp)
            ││  0x00007f088074e31f: mov    %rbx,%rdx
  0.08%     ││  0x00007f088074e322: shl    $0x3,%rdx
            ││  0x00007f088074e326: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f088074e32a: xchg   %ax,%ax
            ││  0x00007f088074e32c: vzeroupper 
  0.12%     ││  0x00007f088074e32f: callq  0x00007f08806bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@22 (line 145)
            ││                                                            ;   {optimized virtual_call}
            ││  0x00007f088074e334: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.08%     ││  0x00007f088074e339: movzbl 0x94(%rcx),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@52 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f088074e341: mov    0x108(%r15),%r10               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f088074e348: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@35 (line 147)
  0.10%     ││  0x00007f088074e34c: test   %eax,(%r10)                    ;   {poll}
            ││  0x00007f088074e34f: test   %r11d,%r11d
            ││  0x00007f088074e352: jne    0x00007f088074e2c3
            ││  0x00007f088074e358: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f088074e35d: mov    0xc(%r10),%r10d                ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@4 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.08%     ││  0x00007f088074e361: mov    0x50(%rsp),%r11                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f088074e366: mov    0x20(%r11),%ebx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@36 (line 78)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f088074e36a: test   %r10d,%r10d
          ╭ ││  0x00007f088074e36d: jle    0x00007f088074e4c7             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f088074e373: mov    0x18(%r11),%r8d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@14 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.10%   │ ││  0x00007f088074e377: test   %r8d,%r8d
          │ ││  0x00007f088074e37a: je     0x00007f088074e4d1             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f088074e380: mov    0x1c(%r11),%r11d               ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@25 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f088074e384: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007f088074e4d1
  0.22%   │ ││  0x00007f088074e38b: test   %ebx,%ebx
          │ ││  0x00007f088074e38d: je     0x00007f088074e4d1
          │ ││  0x00007f088074e393: cmp    $0x7ffffff8,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f088074e39a: jg     0x00007f088074e4ea
          │ ││  0x00007f088074e3a0: vaddps 0x10(%r12,%r8,8),%ymm0,%ymm0
  0.30%   │ ││  0x00007f088074e3a7: vmovdqu %ymm0,0x10(%r12,%rbx,8)
  0.10%   │ ││  0x00007f088074e3ae: lea    (%r12,%rbx,8),%rdi
          │ ││  0x00007f088074e3b2: lea    (%r12,%r8,8),%rdx
          │ ││  0x00007f088074e3b6: lea    (%r12,%r11,8),%rsi
          │ ││  0x00007f088074e3ba: mov    %r10d,%r11d
  0.02%   │ ││  0x00007f088074e3bd: add    $0xffffffc8,%r11d
          │ ││  0x00007f088074e3c1: cmp    %r11d,%r10d
          │ ││  0x00007f088074e3c4: mov    $0x80000000,%r8d
          │ ││  0x00007f088074e3ca: cmovl  %r8d,%r11d
  0.08%   │ ││  0x00007f088074e3ce: cmp    $0x8,%r11d
          │ ││  0x00007f088074e3d2: jle    0x00007f088074e506
          │ ││  0x00007f088074e3d8: mov    $0x8,%r9d
          │ ││  0x00007f088074e3de: xchg   %ax,%ax                        ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.16%   │↗││  0x00007f088074e3e0: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  8.59%   ││││  0x00007f088074e3e7: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  4.12%   ││││  0x00007f088074e3ee: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  1.01%   ││││  0x00007f088074e3f5: vmovdqu 0x30(%rsi,%r9,4),%ymm0
  6.45%   ││││  0x00007f088074e3fc: vaddps 0x30(%rdx,%r9,4),%ymm0,%ymm0
  3.40%   ││││  0x00007f088074e403: vmovdqu %ymm0,0x30(%rdi,%r9,4)
  0.67%   ││││  0x00007f088074e40a: vmovdqu 0x50(%rsi,%r9,4),%ymm0
  7.10%   ││││  0x00007f088074e411: vaddps 0x50(%rdx,%r9,4),%ymm0,%ymm0
  4.16%   ││││  0x00007f088074e418: vmovdqu %ymm0,0x50(%rdi,%r9,4)
  0.65%   ││││  0x00007f088074e41f: vmovdqu 0x70(%rsi,%r9,4),%ymm0
  6.19%   ││││  0x00007f088074e426: vaddps 0x70(%rdx,%r9,4),%ymm0,%ymm0
  3.58%   ││││  0x00007f088074e42d: vmovdqu %ymm0,0x70(%rdi,%r9,4)
  0.99%   ││││  0x00007f088074e434: vmovdqu 0x90(%rsi,%r9,4),%ymm0
  7.91%   ││││  0x00007f088074e43e: vaddps 0x90(%rdx,%r9,4),%ymm0,%ymm0
  3.78%   ││││  0x00007f088074e448: vmovdqu %ymm0,0x90(%rdi,%r9,4)
  0.93%   ││││  0x00007f088074e452: vmovdqu 0xb0(%rsi,%r9,4),%ymm0
  6.05%   ││││  0x00007f088074e45c: vaddps 0xb0(%rdx,%r9,4),%ymm0,%ymm0
  3.82%   ││││  0x00007f088074e466: vmovdqu %ymm0,0xb0(%rdi,%r9,4)
  0.73%   ││││  0x00007f088074e470: vmovdqu 0xd0(%rsi,%r9,4),%ymm0
  7.46%   ││││  0x00007f088074e47a: vaddps 0xd0(%rdx,%r9,4),%ymm0,%ymm0
  3.13%   ││││  0x00007f088074e484: vmovdqu %ymm0,0xd0(%rdi,%r9,4)
  0.73%   ││││  0x00007f088074e48e: vmovdqu 0xf0(%rsi,%r9,4),%ymm0
  7.12%   ││││  0x00007f088074e498: vaddps 0xf0(%rdx,%r9,4),%ymm0,%ymm0
  3.58%   ││││  0x00007f088074e4a2: vmovdqu %ymm0,0xf0(%rdi,%r9,4)        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  2.10%   ││││  0x00007f088074e4ac: add    $0x40,%r9d
          ││││  0x00007f088074e4b0: cmp    %r11d,%r9d
          │╰││  0x00007f088074e4b3: jl     0x00007f088074e3e0
          │ ││  0x00007f088074e4b9: cmp    %r10d,%r9d
          │ ╰│  0x00007f088074e4bc: jl     0x00007f088074e2fc
          │  ╰  0x00007f088074e4c2: jmpq   0x00007f088074e31a
          ↘     0x00007f088074e4c7: mov    %rcx,0x40(%rsp)
                0x00007f088074e4cc: jmpq   0x00007f088074e31f
....................................................................................................
 97.37%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.37%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 
  1.86%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.24%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 (65 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  if_icmpge  162 if_icmpge  (0 bytes) 
  0.02%         interpreter  invokestatic  184 invokestatic  (0 bytes) 
  0.02%         interpreter  newarray  188 newarray  (0 bytes) 
  0.16%  <...other 8 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.37%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 
  2.14%   [kernel.kallsyms]  [unknown] 
  0.24%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 
  0.02%         interpreter  newarray  188 newarray  
  0.02%           libjvm.so  _ZN7VMError17is_error_reportedEv 
  0.02%         interpreter  nofast_getfield  234 nofast_getfield  
  0.02%         interpreter  invokestatic  184 invokestatic  
  0.02%           libjvm.so  _ZN12PeriodicTask14real_time_tickEi 
  0.02%       perf-7509.map  [unknown] 
  0.02%  libpthread-2.23.so  __pthread_mutex_cond_lock 
  0.02%           libjvm.so  _ZN15PerfLongVariant6sampleEv 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  if_icmpge  162 if_icmpge  
  0.02%           libjvm.so  _ZN7Monitor5IWaitEP6Threadl 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.61%                  c2
  2.14%   [kernel.kallsyms]
  0.10%           libjvm.so
  0.10%         interpreter
  0.02%       perf-7509.map
  0.02%  libpthread-2.23.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 54587 total address lines.
Perf output processed (skipped 6.426 seconds):
 Column 1: cycles (5059 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 

                0x00007f802074e660: movq   $0x0,0x20(%r10)
                0x00007f802074e668: vzeroupper 
                0x00007f802074e66b: add    $0x30,%rsp
                0x00007f802074e66f: pop    %rbp
                0x00007f802074e670: mov    0x108(%r15),%r10
                0x00007f802074e677: test   %eax,(%r10)                    ;   {poll_return}
                0x00007f802074e67a: retq   
                0x00007f802074e67b: nop                                   ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.20%  ↗  ↗   0x00007f802074e67c: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  0.65%  │  │   0x00007f802074e683: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  2.75%  │  │   0x00007f802074e68a: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  0.81%  │  │   0x00007f802074e691: add    $0x8,%r9d
  0.02%  │  │   0x00007f802074e695: cmp    %r10d,%r9d
         ╰  │   0x00007f802074e698: jl     0x00007f802074e67c
            │↗  0x00007f802074e69a: mov    %rcx,0x40(%rsp)
            ││  0x00007f802074e69f: mov    %rbx,%rdx
  0.18%     ││  0x00007f802074e6a2: shl    $0x3,%rdx
            ││  0x00007f802074e6a6: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f802074e6aa: xchg   %ax,%ax
            ││  0x00007f802074e6ac: vzeroupper 
  0.14%     ││  0x00007f802074e6af: callq  0x00007f80206bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@22 (line 145)
            ││                                                            ;   {optimized virtual_call}
            ││  0x00007f802074e6b4: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.24%     ││  0x00007f802074e6b9: movzbl 0x94(%rcx),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@52 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f802074e6c1: mov    0x108(%r15),%r10               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f802074e6c8: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@35 (line 147)
  0.12%     ││  0x00007f802074e6cc: test   %eax,(%r10)                    ;   {poll}
            ││  0x00007f802074e6cf: test   %r11d,%r11d
            ││  0x00007f802074e6d2: jne    0x00007f802074e643
            ││  0x00007f802074e6d8: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f802074e6dd: mov    0xc(%r10),%r10d                ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@4 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.14%     ││  0x00007f802074e6e1: mov    0x50(%rsp),%r11                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f802074e6e6: mov    0x20(%r11),%ebx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@36 (line 78)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007f802074e6ea: test   %r10d,%r10d
          ╭ ││  0x00007f802074e6ed: jle    0x00007f802074e847             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f802074e6f3: mov    0x18(%r11),%r8d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@14 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.16%   │ ││  0x00007f802074e6f7: test   %r8d,%r8d
          │ ││  0x00007f802074e6fa: je     0x00007f802074e851             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f802074e700: mov    0x1c(%r11),%r11d               ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@25 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f802074e704: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007f802074e851
  0.73%   │ ││  0x00007f802074e70b: test   %ebx,%ebx
          │ ││  0x00007f802074e70d: je     0x00007f802074e851
          │ ││  0x00007f802074e713: cmp    $0x7ffffff8,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007f802074e71a: jg     0x00007f802074e86a
          │ ││  0x00007f802074e720: vaddps 0x10(%r12,%r8,8),%ymm0,%ymm0
  1.25%   │ ││  0x00007f802074e727: vmovdqu %ymm0,0x10(%r12,%rbx,8)
  0.20%   │ ││  0x00007f802074e72e: lea    (%r12,%rbx,8),%rdi
          │ ││  0x00007f802074e732: lea    (%r12,%r8,8),%rdx
          │ ││  0x00007f802074e736: lea    (%r12,%r11,8),%rsi
          │ ││  0x00007f802074e73a: mov    %r10d,%r11d
  0.12%   │ ││  0x00007f802074e73d: add    $0xffffffc8,%r11d
          │ ││  0x00007f802074e741: cmp    %r11d,%r10d
          │ ││  0x00007f802074e744: mov    $0x80000000,%r8d
          │ ││  0x00007f802074e74a: cmovl  %r8d,%r11d
  0.26%   │ ││  0x00007f802074e74e: cmp    $0x8,%r11d
          │ ││  0x00007f802074e752: jle    0x00007f802074e886
          │ ││  0x00007f802074e758: mov    $0x8,%r9d
          │ ││  0x00007f802074e75e: xchg   %ax,%ax                        ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.04%   │↗││  0x00007f802074e760: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  5.10%   ││││  0x00007f802074e767: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  6.98%   ││││  0x00007f802074e76e: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  1.92%   ││││  0x00007f802074e775: vmovdqu 0x30(%rsi,%r9,4),%ymm0
  2.04%   ││││  0x00007f802074e77c: vaddps 0x30(%rdx,%r9,4),%ymm0,%ymm0
  7.04%   ││││  0x00007f802074e783: vmovdqu %ymm0,0x30(%rdi,%r9,4)
  2.31%   ││││  0x00007f802074e78a: vmovdqu 0x50(%rsi,%r9,4),%ymm0
  0.57%   ││││  0x00007f802074e791: vaddps 0x50(%rdx,%r9,4),%ymm0,%ymm0
  5.69%   ││││  0x00007f802074e798: vmovdqu %ymm0,0x50(%rdi,%r9,4)
  2.10%   ││││  0x00007f802074e79f: vmovdqu 0x70(%rsi,%r9,4),%ymm0
  2.55%   ││││  0x00007f802074e7a6: vaddps 0x70(%rdx,%r9,4),%ymm0,%ymm0
  7.21%   ││││  0x00007f802074e7ad: vmovdqu %ymm0,0x70(%rdi,%r9,4)
  2.21%   ││││  0x00007f802074e7b4: vmovdqu 0x90(%rsi,%r9,4),%ymm0
  0.24%   ││││  0x00007f802074e7be: vaddps 0x90(%rdx,%r9,4),%ymm0,%ymm0
  5.63%   ││││  0x00007f802074e7c8: vmovdqu %ymm0,0x90(%rdi,%r9,4)
  2.10%   ││││  0x00007f802074e7d2: vmovdqu 0xb0(%rsi,%r9,4),%ymm0
  1.88%   ││││  0x00007f802074e7dc: vaddps 0xb0(%rdx,%r9,4),%ymm0,%ymm0
  7.53%   ││││  0x00007f802074e7e6: vmovdqu %ymm0,0xb0(%rdi,%r9,4)
  2.15%   ││││  0x00007f802074e7f0: vmovdqu 0xd0(%rsi,%r9,4),%ymm0
  0.08%   ││││  0x00007f802074e7fa: vaddps 0xd0(%rdx,%r9,4),%ymm0,%ymm0
  5.87%   ││││  0x00007f802074e804: vmovdqu %ymm0,0xd0(%rdi,%r9,4)
  2.41%   ││││  0x00007f802074e80e: vmovdqu 0xf0(%rsi,%r9,4),%ymm0
  1.80%   ││││  0x00007f802074e818: vaddps 0xf0(%rdx,%r9,4),%ymm0,%ymm0
  7.25%   ││││  0x00007f802074e822: vmovdqu %ymm0,0xf0(%rdi,%r9,4)        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  6.05%   ││││  0x00007f802074e82c: add    $0x40,%r9d
          ││││  0x00007f802074e830: cmp    %r11d,%r9d
          │╰││  0x00007f802074e833: jl     0x00007f802074e760
          │ ││  0x00007f802074e839: cmp    %r10d,%r9d
          │ ╰│  0x00007f802074e83c: jl     0x00007f802074e67c
          │  ╰  0x00007f802074e842: jmpq   0x00007f802074e69a
          ↘     0x00007f802074e847: mov    %rcx,0x40(%rsp)
                0x00007f802074e84c: jmpq   0x00007f802074e69f
....................................................................................................
 96.70%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.70%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 
  2.02%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.73%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 (65 bytes) 
  0.10%   [kernel.kallsyms]  [unknown] (13 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  method entry point (kind = native)  (0 bytes) 
  0.02%         interpreter  bastore  84 bastore  (0 bytes) 
  0.08%  <...other 4 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.70%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 
  2.39%   [kernel.kallsyms]  [unknown] 
  0.73%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  ireturn  172 ireturn  
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%         interpreter  bastore  84 bastore  
  0.02%         interpreter  ifeq  153 ifeq  
  0.02%         interpreter  fast_aload_0  220 fast_aload_0  
  0.02%         interpreter  method entry point (kind = native)  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.43%                  c2
  2.39%   [kernel.kallsyms]
  0.16%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 54583 total address lines.
Perf output processed (skipped 6.405 seconds):
 Column 1: cycles (5107 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 

                0x00007fe4b8749060: movq   $0x0,0x20(%r10)
                0x00007fe4b8749068: vzeroupper 
                0x00007fe4b874906b: add    $0x30,%rsp
                0x00007fe4b874906f: pop    %rbp
                0x00007fe4b8749070: mov    0x108(%r15),%r10
                0x00007fe4b8749077: test   %eax,(%r10)                    ;   {poll_return}
                0x00007fe4b874907a: retq   
                0x00007fe4b874907b: nop                                   ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
                                                                          ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.20%  ↗  ↗   0x00007fe4b874907c: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  0.80%  │  │   0x00007fe4b8749083: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  2.68%  │  │   0x00007fe4b874908a: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  1.04%  │  │   0x00007fe4b8749091: add    $0x8,%r9d
  0.02%  │  │   0x00007fe4b8749095: cmp    %r10d,%r9d
         ╰  │   0x00007fe4b8749098: jl     0x00007fe4b874907c
            │↗  0x00007fe4b874909a: mov    %rcx,0x40(%rsp)
            ││  0x00007fe4b874909f: mov    %rbx,%rdx
  0.18%     ││  0x00007fe4b87490a2: shl    $0x3,%rdx
            ││  0x00007fe4b87490a6: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fe4b87490aa: xchg   %ax,%ax
            ││  0x00007fe4b87490ac: vzeroupper 
  0.18%     ││  0x00007fe4b87490af: callq  0x00007fe4b86bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@22 (line 145)
            ││                                                            ;   {optimized virtual_call}
            ││  0x00007fe4b87490b4: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.12%     ││  0x00007fe4b87490b9: movzbl 0x94(%rcx),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@52 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fe4b87490c1: mov    0x108(%r15),%r10               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fe4b87490c8: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            ││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@35 (line 147)
  0.10%     ││  0x00007fe4b87490cc: test   %eax,(%r10)                    ;   {poll}
            ││  0x00007fe4b87490cf: test   %r11d,%r11d
            ││  0x00007fe4b87490d2: jne    0x00007fe4b8749043
            ││  0x00007fe4b87490d8: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fe4b87490dd: mov    0xc(%r10),%r10d                ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@4 (line 76)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.18%     ││  0x00007fe4b87490e1: mov    0x50(%rsp),%r11                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fe4b87490e6: mov    0x20(%r11),%ebx                ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@36 (line 78)
            ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
            ││  0x00007fe4b87490ea: test   %r10d,%r10d
          ╭ ││  0x00007fe4b87490ed: jle    0x00007fe4b8749247             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007fe4b87490f3: mov    0x18(%r11),%r8d                ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@14 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.20%   │ ││  0x00007fe4b87490f7: test   %r8d,%r8d
          │ ││  0x00007fe4b87490fa: je     0x00007fe4b8749251             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007fe4b8749100: mov    0x1c(%r11),%r11d               ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@25 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007fe4b8749104: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007fe4b8749251
  0.74%   │ ││  0x00007fe4b874910b: test   %ebx,%ebx
          │ ││  0x00007fe4b874910d: je     0x00007fe4b8749251
          │ ││  0x00007fe4b8749113: cmp    $0x7ffffff8,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
          │ ││  0x00007fe4b874911a: jg     0x00007fe4b874926a
          │ ││  0x00007fe4b8749120: vaddps 0x10(%r12,%r8,8),%ymm0,%ymm0
  0.98%   │ ││  0x00007fe4b8749127: vmovdqu %ymm0,0x10(%r12,%rbx,8)
  0.04%   │ ││  0x00007fe4b874912e: lea    (%r12,%rbx,8),%rdi
          │ ││  0x00007fe4b8749132: lea    (%r12,%r8,8),%rdx
          │ ││  0x00007fe4b8749136: lea    (%r12,%r11,8),%rsi
          │ ││  0x00007fe4b874913a: mov    %r10d,%r11d
  0.14%   │ ││  0x00007fe4b874913d: add    $0xffffffc8,%r11d
          │ ││  0x00007fe4b8749141: cmp    %r11d,%r10d
          │ ││  0x00007fe4b8749144: mov    $0x80000000,%r8d
          │ ││  0x00007fe4b874914a: cmovl  %r8d,%r11d
  0.14%   │ ││  0x00007fe4b874914e: cmp    $0x8,%r11d
          │ ││  0x00007fe4b8749152: jle    0x00007fe4b8749286
          │ ││  0x00007fe4b8749158: mov    $0x8,%r9d
          │ ││  0x00007fe4b874915e: xchg   %ax,%ax                        ;*getstatic YMM_FLOAT {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@10 (line 77)
          │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  0.06%   │↗││  0x00007fe4b8749160: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  4.52%   ││││  0x00007fe4b8749167: vaddps 0x10(%rdx,%r9,4),%ymm0,%ymm0
  6.15%   ││││  0x00007fe4b874916e: vmovdqu %ymm0,0x10(%rdi,%r9,4)
  2.00%   ││││  0x00007fe4b8749175: vmovdqu 0x30(%rsi,%r9,4),%ymm0
  2.13%   ││││  0x00007fe4b874917c: vaddps 0x30(%rdx,%r9,4),%ymm0,%ymm0
  6.97%   ││││  0x00007fe4b8749183: vmovdqu %ymm0,0x30(%rdi,%r9,4)
  2.00%   ││││  0x00007fe4b874918a: vmovdqu 0x50(%rsi,%r9,4),%ymm0
  0.69%   ││││  0x00007fe4b8749191: vaddps 0x50(%rdx,%r9,4),%ymm0,%ymm0
  6.27%   ││││  0x00007fe4b8749198: vmovdqu %ymm0,0x50(%rdi,%r9,4)
  2.41%   ││││  0x00007fe4b874919f: vmovdqu 0x70(%rsi,%r9,4),%ymm0
  2.53%   ││││  0x00007fe4b87491a6: vaddps 0x70(%rdx,%r9,4),%ymm0,%ymm0
  7.23%   ││││  0x00007fe4b87491ad: vmovdqu %ymm0,0x70(%rdi,%r9,4)
  2.17%   ││││  0x00007fe4b87491b4: vmovdqu 0x90(%rsi,%r9,4),%ymm0
  0.35%   ││││  0x00007fe4b87491be: vaddps 0x90(%rdx,%r9,4),%ymm0,%ymm0
  5.19%   ││││  0x00007fe4b87491c8: vmovdqu %ymm0,0x90(%rdi,%r9,4)
  2.37%   ││││  0x00007fe4b87491d2: vmovdqu 0xb0(%rsi,%r9,4),%ymm0
  1.92%   ││││  0x00007fe4b87491dc: vaddps 0xb0(%rdx,%r9,4),%ymm0,%ymm0
  7.28%   ││││  0x00007fe4b87491e6: vmovdqu %ymm0,0xb0(%rdi,%r9,4)
  2.78%   ││││  0x00007fe4b87491f0: vmovdqu 0xd0(%rsi,%r9,4),%ymm0
  0.06%   ││││  0x00007fe4b87491fa: vaddps 0xd0(%rdx,%r9,4),%ymm0,%ymm0
  6.19%   ││││  0x00007fe4b8749204: vmovdqu %ymm0,0xd0(%rdi,%r9,4)
  2.55%   ││││  0x00007fe4b874920e: vmovdqu 0xf0(%rsi,%r9,4),%ymm0
  1.72%   ││││  0x00007fe4b8749218: vaddps 0xf0(%rdx,%r9,4),%ymm0,%ymm0
  6.85%   ││││  0x00007fe4b8749222: vmovdqu %ymm0,0xf0(%rdi,%r9,4)        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArray@40 (line 79)
          ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub@19 (line 145)
  5.38%   ││││  0x00007fe4b874922c: add    $0x40,%r9d
          ││││  0x00007fe4b8749230: cmp    %r11d,%r9d
          │╰││  0x00007fe4b8749233: jl     0x00007fe4b8749160
          │ ││  0x00007fe4b8749239: cmp    %r10d,%r9d
          │ ╰│  0x00007fe4b874923c: jl     0x00007fe4b874907c
          │  ╰  0x00007fe4b8749242: jmpq   0x00007fe4b874909a
          ↘     0x00007fe4b8749247: mov    %rcx,0x40(%rsp)
                0x00007fe4b874924c: jmpq   0x00007fe4b874909f
....................................................................................................
 95.48%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.48%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 (432 bytes) 
  3.09%   [kernel.kallsyms]  [unknown] (5 bytes) 
  1.10%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 (65 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (7 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  invokestatic  184 invokestatic  (0 bytes) 
  0.02%                  c2  java.io.ObjectStreamField::getName, version 93 (0 bytes) 
  0.02%           libjvm.so  _ZNK8CodeHeap16find_blob_unsafeEPv (0 bytes) 
  0.02%           libjvm.so  _ZN13ObjArrayKlass16array_klass_implEbiP6Thread (0 bytes) 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm (0 bytes) 
  0.02%           libjvm.so  _ZN14StackMapReaderC2EP13ClassVerifierP14StackMapStreamPciP6Thread (0 bytes) 
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.48%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArray_jmhTest::verticalSumPanamaArray_thrpt_jmhStub, version 174 
  3.25%   [kernel.kallsyms]  [unknown] 
  1.10%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 171 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN14StackMapReaderC2EP13ClassVerifierP14StackMapStreamPciP6Thread 
  0.02%                  c2  java.io.ObjectStreamField::getName, version 93 
  0.02%           libjvm.so  _ZNK8CodeHeap16find_blob_unsafeEPv 
  0.02%         interpreter  invokestatic  184 invokestatic  
  0.02%           libjvm.so  _ZN13ObjArrayKlass16array_klass_implEbiP6Thread 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.59%                  c2
  3.25%   [kernel.kallsyms]
  0.08%           libjvm.so
  0.06%         interpreter
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckOptimistic
# Parameters: (probabilityOfNaN = 0, size = 1024)

# Run progress: 77.78% complete, ETA 00:03:34
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4450.472 ops/ms
# Warmup Iteration   2: 5726.796 ops/ms
# Warmup Iteration   3: 5896.199 ops/ms
# Warmup Iteration   4: 5783.847 ops/ms
# Warmup Iteration   5: 5856.092 ops/ms
Iteration   1: 5753.468 ops/ms
Iteration   2: 5933.781 ops/ms
Iteration   3: 5916.601 ops/ms
Iteration   4: 5929.534 ops/ms
Iteration   5: 5920.739 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 79.01% complete, ETA 00:03:22
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5915.924 ops/ms
# Warmup Iteration   2: 7272.240 ops/ms
# Warmup Iteration   3: 7527.714 ops/ms
# Warmup Iteration   4: 7502.386 ops/ms
# Warmup Iteration   5: 7498.626 ops/ms
Iteration   1: 7503.484 ops/ms
Iteration   2: 7416.915 ops/ms
Iteration   3: 7429.781 ops/ms
Iteration   4: 7538.017 ops/ms
Iteration   5: 7382.903 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 80.25% complete, ETA 00:03:10
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5808.411 ops/ms
# Warmup Iteration   2: 7407.107 ops/ms
# Warmup Iteration   3: 7537.231 ops/ms
# Warmup Iteration   4: 7472.062 ops/ms
# Warmup Iteration   5: 7434.663 ops/ms
Iteration   1: 7457.497 ops/ms
Iteration   2: 7532.757 ops/ms
Iteration   3: 7344.857 ops/ms
Iteration   4: 7527.679 ops/ms
Iteration   5: 7484.237 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckOptimistic":
  6938.150 ±(99.9%) 822.692 ops/ms [Average]
  (min, avg, max) = (5753.468, 6938.150, 7538.017), stdev = 769.547
  CI (99.9%): [6115.458, 7760.842] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckOptimistic:·asm":
PrintAssembly processed: 58150 total address lines.
Perf output processed (skipped 6.420 seconds):
 Column 1: cycles (5049 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 207 (461 bytes) 

                                                                           ;   {poll_return}
                 0x00007fee08759c0a: retq                                  ;*synchronization entry
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@-1 (line 141)
                 0x00007fee08759c0b: nop                                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                                           ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
                                                                           ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ↗  ↗    0x00007fee08759c0c: vmovdqu 0x10(%rcx,%r11,4),%ymm0
  0.08%  │  │    0x00007fee08759c13: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.14%  │  │    0x00007fee08759c1a: vcmpneqps %ymm0,%ymm0,%ymm2
  0.34%  │  │    0x00007fee08759c1f: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.46%  │  │    0x00007fee08759c25: vcmpneqps %ymm1,%ymm1,%ymm2
         │  │    0x00007fee08759c2a: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.73%  │  │    0x00007fee08759c30: vaddps %ymm0,%ymm1,%ymm0
  0.06%  │  │    0x00007fee08759c34: vmovdqu %ymm0,0x10(%r8,%r11,4)
  0.10%  │  │    0x00007fee08759c3b: add    $0x8,%r11d
  0.48%  │  │    0x00007fee08759c3f: cmp    %r9d,%r11d                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ╰  │    0x00007fee08759c42: jl     0x00007fee08759c0c             ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
            │                                                              ; - java.lang.invoke.DirectMethodHandle::internalMemberName@0 (line 310)
            │                                                              ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
            │                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │↗   0x00007fee08759c44: mov    %rbx,0x60(%rsp)
            ││   0x00007fee08759c49: vmovdqu %ymm3,0x20(%rsp)
            ││↗  0x00007fee08759c4f: mov    %rdi,%rdx
  0.12%     │││  0x00007fee08759c52: shl    $0x3,%rdx
            │││  0x00007fee08759c56: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fee08759c5a: xchg   %ax,%ax
            │││  0x00007fee08759c5c: vzeroupper 
  0.14%     │││  0x00007fee08759c5f: callq  0x00007fee086bf900             ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
            │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
            │││                                                            ;   {optimized virtual_call}
  0.02%     │││  0x00007fee08759c64: mov    0x60(%rsp),%rbx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.10%     │││  0x00007fee08759c69: movzbl 0x94(%rbx),%r10d               ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.util.Objects::requireNonNull@1 (line 220)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@30 (line 99)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fee08759c71: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │││  0x00007fee08759c78: add    $0x1,%rbp                      ; ImmutableOopMap{rbx=Oop [96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
            │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
  0.10%     │││  0x00007fee08759c7c: test   %eax,(%r11)                    ;   {poll}
            │││  0x00007fee08759c7f: test   %r10d,%r10d
            │││  0x00007fee08759c82: jne    0x00007fee08759bd3
            │││  0x00007fee08759c88: mov    0x70(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │││  0x00007fee08759c8d: mov    0xc(%r10),%r9d                 ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.26%     │││  0x00007fee08759c91: mov    0x20(%r10),%edi                ;*invokestatic internalMemberName {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fee08759c95: test   %r9d,%r9d
          ╭ │││  0x00007fee08759c98: jle    0x00007fee08759df7
          │ │││  0x00007fee08759c9e: mov    0x18(%r10),%r11d
          │ │││  0x00007fee08759ca2: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007fee08759e01
  0.18%   │ │││  0x00007fee08759ca9: mov    0x1c(%r10),%r10d
          │ │││  0x00007fee08759cad: vmovdqu 0x10(%r12,%r10,8),%ymm1       ; implicit exception: dispatches to 0x00007fee08759e01
          │ │││  0x00007fee08759cb4: test   %edi,%edi
          │ │││  0x00007fee08759cb6: je     0x00007fee08759e01
  0.02%   │ │││  0x00007fee08759cbc: cmp    $0x7ffffff8,%r9d
          │ │││  0x00007fee08759cc3: jg     0x00007fee08759e1a
  0.24%   │ │││  0x00007fee08759cc9: vcmpneqps %ymm1,%ymm1,%ymm2
  0.12%   │ │││  0x00007fee08759cce: vmovdqu 0x20(%rsp),%ymm3
          │ │││  0x00007fee08759cd4: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.67%   │ │││  0x00007fee08759cda: vcmpneqps %ymm0,%ymm0,%ymm2
  0.12%   │ │││  0x00007fee08759cdf: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.30%   │ │││  0x00007fee08759ce5: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.34%   │ │││  0x00007fee08759ce9: vmovdqu %ymm0,0x10(%r12,%rdi,8)       ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.18%   │ │││  0x00007fee08759cf0: lea    (%r12,%rdi,8),%r8
          │ │││  0x00007fee08759cf4: lea    (%r12,%r10,8),%rcx
          │ │││  0x00007fee08759cf8: mov    %r9d,%r10d
          │ │││  0x00007fee08759cfb: add    $0xffffffe8,%r10d
  0.12%   │ │││  0x00007fee08759cff: cmp    %r10d,%r9d
          │ │││  0x00007fee08759d02: mov    $0x80000000,%esi
          │ │││  0x00007fee08759d07: cmovl  %esi,%r10d
          │ │││  0x00007fee08759d0b: lea    (%r12,%r11,8),%rdx
  0.16%   │ │││  0x00007fee08759d0f: cmp    $0x8,%r10d
          │ │││  0x00007fee08759d13: jle    0x00007fee08759e36             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007fee08759d19: mov    $0x8,%r11d
          │ │││  0x00007fee08759d1f: nop                                   ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::blend@6 (line 1025)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │↗│││  0x00007fee08759d20: vmovdqu 0x10(%rcx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@1 (line 1024)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.14%   │││││  0x00007fee08759d27: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.84%   │││││  0x00007fee08759d2e: vcmpneqps %ymm0,%ymm0,%ymm2
  3.45%   │││││  0x00007fee08759d33: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  5.64%   │││││  0x00007fee08759d39: vcmpneqps %ymm1,%ymm1,%ymm2
          │││││  0x00007fee08759d3e: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.30%   │││││  0x00007fee08759d44: vaddps %ymm0,%ymm1,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.30%   │││││  0x00007fee08759d48: vmovdqu %ymm0,0x10(%r8,%r11,4)        ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.62%   │││││  0x00007fee08759d4f: vmovdqu 0x30(%rdx,%r11,4),%ymm0       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::broadcast@21 (line 1351)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  7.57%   │││││  0x00007fee08759d56: vmovdqu 0x30(%rcx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fee08759d5d: vcmpneqps %ymm0,%ymm0,%ymm2
  1.27%   │││││  0x00007fee08759d62: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  7.74%   │││││  0x00007fee08759d68: vcmpneqps %ymm1,%ymm1,%ymm2
          │││││  0x00007fee08759d6d: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  7.13%   │││││  0x00007fee08759d73: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.01%   │││││  0x00007fee08759d77: vmovdqu %ymm0,0x30(%r8,%r11,4)        ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.00%   │││││  0x00007fee08759d7e: vmovdqu 0x50(%rdx,%r11,4),%ymm0       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.15%   │││││  0x00007fee08759d85: vmovdqu 0x50(%rcx,%r11,4),%ymm1       ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fee08759d8c: vcmpneqps %ymm0,%ymm0,%ymm2
  0.02%   │││││  0x00007fee08759d91: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  5.62%   │││││  0x00007fee08759d97: vcmpneqps %ymm1,%ymm1,%ymm2
          │││││  0x00007fee08759d9c: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.32%   │││││  0x00007fee08759da2: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.53%   │││││  0x00007fee08759da6: vmovdqu %ymm0,0x50(%r8,%r11,4)        ;*synchronization entry
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.15%   │││││  0x00007fee08759dad: vmovdqu 0x70(%rdx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.08%   │││││  0x00007fee08759db4: vmovdqu 0x70(%rcx,%r11,4),%ymm1       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@8
          │││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fee08759dbb: vcmpneqps %ymm0,%ymm0,%ymm2
          │││││  0x00007fee08759dc0: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  7.51%   │││││  0x00007fee08759dc6: vcmpneqps %ymm1,%ymm1,%ymm2
          │││││  0x00007fee08759dcb: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  7.88%   │││││  0x00007fee08759dd1: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.11%   │││││  0x00007fee08759dd5: vmovdqu %ymm0,0x70(%r8,%r11,4)        ;*synchronization entry
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.76%   │││││  0x00007fee08759ddc: add    $0x20,%r11d
  4.12%   │││││  0x00007fee08759de0: cmp    %r10d,%r11d
          │╰│││  0x00007fee08759de3: jl     0x00007fee08759d20
          │ │││  0x00007fee08759de9: cmp    %r9d,%r11d
          │ ╰││  0x00007fee08759dec: jl     0x00007fee08759c0c
          │  ╰│  0x00007fee08759df2: jmpq   0x00007fee08759c44
          ↘   │  0x00007fee08759df7: mov    %rbx,0x60(%rsp)
              ╰  0x00007fee08759dfc: jmpq   0x00007fee08759c4f             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                 0x00007fee08759e01: mov    $0xffffff7e,%esi               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 96.85%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.85%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 207 (461 bytes) 
  1.76%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.85%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 204 (65 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  invoke return entry points  (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  sipush  17 sipush  (0 bytes) 
  0.02%         interpreter  getstatic  178 getstatic  (0 bytes) 
  0.12%  <...other 6 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.85%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 207 
  2.08%   [kernel.kallsyms]  [unknown] 
  0.85%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 204 
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%         interpreter  invoke return entry points  
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%           libjvm.so  _ZN6HandleC2EP6ThreadP7oopDesc 
  0.02%           libjvm.so  _ZN18ObjectSynchronizer29prepare_deflate_idle_monitorsEP22DeflateMonitorCounters 
  0.02%         interpreter  sipush  17 sipush  
  0.02%           libjvm.so  jni_IsInstanceOf 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  0.02%         interpreter  invokeinterface  185 invokeinterface  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.70%                  c2
  2.08%   [kernel.kallsyms]
  0.14%         interpreter
  0.06%           libjvm.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 57728 total address lines.
Perf output processed (skipped 6.409 seconds):
 Column 1: cycles (5023 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 205 (468 bytes) 

                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                                                                           ;   {poll_return}
                 0x00007fb0a875b30a: retq                                  ;*synchronization entry
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@-1 (line 141)
                 0x00007fb0a875b30b: nop                                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                                           ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
                                                                           ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%  ↗  ↗    0x00007fb0a875b30c: vmovdqu 0x10(%rcx,%r11,4),%ymm0
         │  │    0x00007fb0a875b313: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.24%  │  │    0x00007fb0a875b31a: vcmpneqps %ymm0,%ymm0,%ymm2
  0.56%  │  │    0x00007fb0a875b31f: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.58%  │  │    0x00007fb0a875b325: vcmpneqps %ymm1,%ymm1,%ymm2
         │  │    0x00007fb0a875b32a: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.56%  │  │    0x00007fb0a875b330: vaddps %ymm0,%ymm1,%ymm0
         │  │    0x00007fb0a875b334: vmovdqu %ymm0,0x10(%r8,%r11,4)
         │  │    0x00007fb0a875b33b: add    $0x8,%r11d
  0.58%  │  │    0x00007fb0a875b33f: cmp    %r9d,%r11d                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ╰  │    0x00007fb0a875b342: jl     0x00007fb0a875b30c             ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
            │                                                              ; - java.lang.invoke.DirectMethodHandle::internalMemberName@0 (line 310)
            │                                                              ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
            │                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │↗   0x00007fb0a875b344: mov    %rbx,0x60(%rsp)
            ││   0x00007fb0a875b349: vmovdqu %ymm3,0x20(%rsp)
            ││↗  0x00007fb0a875b34f: mov    %rdi,%rdx
  0.26%     │││  0x00007fb0a875b352: shl    $0x3,%rdx
            │││  0x00007fb0a875b356: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fb0a875b35a: xchg   %ax,%ax
            │││  0x00007fb0a875b35c: vzeroupper 
  0.20%     │││  0x00007fb0a875b35f: callq  0x00007fb0a86bf900             ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
            │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
            │││                                                            ;   {optimized virtual_call}
            │││  0x00007fb0a875b364: mov    0x60(%rsp),%rbx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.22%     │││  0x00007fb0a875b369: movzbl 0x94(%rbx),%r10d               ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.util.Objects::requireNonNull@1 (line 220)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@30 (line 99)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fb0a875b371: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fb0a875b378: add    $0x1,%rbp                      ; ImmutableOopMap{rbx=Oop [96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
            │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
  0.24%     │││  0x00007fb0a875b37c: test   %eax,(%r11)                    ;   {poll}
            │││  0x00007fb0a875b37f: test   %r10d,%r10d
            │││  0x00007fb0a875b382: jne    0x00007fb0a875b2d3
            │││  0x00007fb0a875b388: mov    0x70(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fb0a875b38d: mov    0xc(%r10),%r9d                 ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.12%     │││  0x00007fb0a875b391: mov    0x20(%r10),%edi                ;*invokestatic internalMemberName {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fb0a875b395: test   %r9d,%r9d
          ╭ │││  0x00007fb0a875b398: jle    0x00007fb0a875b4f7
          │ │││  0x00007fb0a875b39e: mov    0x18(%r10),%r11d
          │ │││  0x00007fb0a875b3a2: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007fb0a875b501
  0.16%   │ │││  0x00007fb0a875b3a9: mov    0x1c(%r10),%r10d
          │ │││  0x00007fb0a875b3ad: vmovdqu 0x10(%r12,%r10,8),%ymm1       ; implicit exception: dispatches to 0x00007fb0a875b501
          │ │││  0x00007fb0a875b3b4: test   %edi,%edi
          │ │││  0x00007fb0a875b3b6: je     0x00007fb0a875b501
          │ │││  0x00007fb0a875b3bc: cmp    $0x7ffffff8,%r9d
          │ │││  0x00007fb0a875b3c3: jg     0x00007fb0a875b51a
  0.14%   │ │││  0x00007fb0a875b3c9: vcmpneqps %ymm1,%ymm1,%ymm2
          │ │││  0x00007fb0a875b3ce: vmovdqu 0x20(%rsp),%ymm3
          │ │││  0x00007fb0a875b3d4: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.30%   │ │││  0x00007fb0a875b3da: vcmpneqps %ymm0,%ymm0,%ymm2
          │ │││  0x00007fb0a875b3df: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.30%   │ │││  0x00007fb0a875b3e5: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%   │ │││  0x00007fb0a875b3e9: vmovdqu %ymm0,0x10(%r12,%rdi,8)       ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007fb0a875b3f0: lea    (%r12,%rdi,8),%r8
  0.14%   │ │││  0x00007fb0a875b3f4: lea    (%r12,%r10,8),%rcx
          │ │││  0x00007fb0a875b3f8: mov    %r9d,%r10d
          │ │││  0x00007fb0a875b3fb: add    $0xffffffe8,%r10d
          │ │││  0x00007fb0a875b3ff: cmp    %r10d,%r9d
  0.12%   │ │││  0x00007fb0a875b402: mov    $0x80000000,%esi
          │ │││  0x00007fb0a875b407: cmovl  %esi,%r10d
          │ │││  0x00007fb0a875b40b: lea    (%r12,%r11,8),%rdx
  0.02%   │ │││  0x00007fb0a875b40f: cmp    $0x8,%r10d
          │ │││  0x00007fb0a875b413: jle    0x00007fb0a875b536             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.08%   │ │││  0x00007fb0a875b419: mov    $0x8,%r11d
          │ │││  0x00007fb0a875b41f: nop                                   ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::blend@6 (line 1025)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │↗│││  0x00007fb0a875b420: vmovdqu 0x10(%rcx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@1 (line 1024)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │││││  0x00007fb0a875b427: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.40%   │││││  0x00007fb0a875b42e: vcmpneqps %ymm0,%ymm0,%ymm2
  6.33%   │││││  0x00007fb0a875b433: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  7.29%   │││││  0x00007fb0a875b439: vcmpneqps %ymm1,%ymm1,%ymm2
          │││││  0x00007fb0a875b43e: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.29%   │││││  0x00007fb0a875b444: vaddps %ymm0,%ymm1,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fb0a875b448: vmovdqu %ymm0,0x10(%r8,%r11,4)        ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fb0a875b44f: vmovdqu 0x30(%rdx,%r11,4),%ymm0       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::broadcast@21 (line 1351)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.63%   │││││  0x00007fb0a875b456: vmovdqu 0x30(%rcx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fb0a875b45d: vcmpneqps %ymm0,%ymm0,%ymm2
          │││││  0x00007fb0a875b462: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.39%   │││││  0x00007fb0a875b468: vcmpneqps %ymm1,%ymm1,%ymm2
          │││││  0x00007fb0a875b46d: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  8.12%   │││││  0x00007fb0a875b473: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fb0a875b477: vmovdqu %ymm0,0x30(%r8,%r11,4)        ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fb0a875b47e: vmovdqu 0x50(%rdx,%r11,4),%ymm0       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.71%   │││││  0x00007fb0a875b485: vmovdqu 0x50(%rcx,%r11,4),%ymm1       ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fb0a875b48c: vcmpneqps %ymm0,%ymm0,%ymm2
          │││││  0x00007fb0a875b491: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  7.39%   │││││  0x00007fb0a875b497: vcmpneqps %ymm1,%ymm1,%ymm2
          │││││  0x00007fb0a875b49c: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.95%   │││││  0x00007fb0a875b4a2: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fb0a875b4a6: vmovdqu %ymm0,0x50(%r8,%r11,4)        ;*synchronization entry
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fb0a875b4ad: vmovdqu 0x70(%rdx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.51%   │││││  0x00007fb0a875b4b4: vmovdqu 0x70(%rcx,%r11,4),%ymm1       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@8
          │││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fb0a875b4bb: vcmpneqps %ymm0,%ymm0,%ymm2
          │││││  0x00007fb0a875b4c0: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.23%   │││││  0x00007fb0a875b4c6: vcmpneqps %ymm1,%ymm1,%ymm2
  0.02%   │││││  0x00007fb0a875b4cb: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.81%   │││││  0x00007fb0a875b4d1: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fb0a875b4d5: vmovdqu %ymm0,0x70(%r8,%r11,4)        ;*synchronization entry
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.60%   │││││  0x00007fb0a875b4dc: add    $0x20,%r11d
  6.57%   │││││  0x00007fb0a875b4e0: cmp    %r10d,%r11d
          │╰│││  0x00007fb0a875b4e3: jl     0x00007fb0a875b420
          │ │││  0x00007fb0a875b4e9: cmp    %r9d,%r11d
          │ ╰││  0x00007fb0a875b4ec: jl     0x00007fb0a875b30c
          │  ╰│  0x00007fb0a875b4f2: jmpq   0x00007fb0a875b344
          ↘   │  0x00007fb0a875b4f7: mov    %rbx,0x60(%rsp)
              ╰  0x00007fb0a875b4fc: jmpq   0x00007fb0a875b34f             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                 0x00007fb0a875b501: mov    $0xffffff7e,%esi               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 97.11%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.11%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 205 (468 bytes) 
  1.45%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.92%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 202 (65 bytes) 
  0.10%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  ifeq  153 ifeq  (0 bytes) 
  0.06%  <...other 3 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.11%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 205 
  1.81%   [kernel.kallsyms]  [unknown] 
  0.92%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 202 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%           libjvm.so  _ZN12LinkResolver31linktime_resolve_virtual_methodERK8LinkInfoP6Thread 
  0.02%         interpreter  ifeq  153 ifeq  
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 98.03%                  c2
  1.81%   [kernel.kallsyms]
  0.10%         interpreter
  0.04%           libjvm.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 57725 total address lines.
Perf output processed (skipped 6.434 seconds):
 Column 1: cycles (5015 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 205 (454 bytes) 

                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               0x00007fcda7af4a0c: vmovdqu 0x10(%rcx,%r11,4),%ymm0
               0x00007fcda7af4a13: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.20%        0x00007fcda7af4a1a: vcmpneqps %ymm0,%ymm0,%ymm2
  0.40%        0x00007fcda7af4a1f: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.72%        0x00007fcda7af4a25: vcmpneqps %ymm1,%ymm1,%ymm2
               0x00007fcda7af4a2a: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.64%        0x00007fcda7af4a30: vaddps %ymm0,%ymm1,%ymm0
               0x00007fcda7af4a34: vmovdqu %ymm0,0x10(%r8,%r11,4)
               0x00007fcda7af4a3b: add    $0x8,%r11d
  0.56%        0x00007fcda7af4a3f: cmp    %r9d,%r11d                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               0x00007fcda7af4a42: jl     0x00007fcda7af4a0c             ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.lang.invoke.DirectMethodHandle::internalMemberName@0 (line 310)
                                                                         ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
                                                                         ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                                         ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
                                                                         ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ↗   0x00007fcda7af4a44: mov    %rbx,0x60(%rsp)
           │   0x00007fcda7af4a49: vmovdqu %ymm3,0x20(%rsp)
           │↗  0x00007fcda7af4a4f: mov    %rdi,%rdx
  0.14%    ││  0x00007fcda7af4a52: shl    $0x3,%rdx
           ││  0x00007fcda7af4a56: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007fcda7af4a5a: xchg   %ax,%ax
           ││  0x00007fcda7af4a5c: vzeroupper 
  0.18%    ││  0x00007fcda7af4a5f: callq  0x00007fcda7a59900             ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
           ││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
           ││                                                            ;   {optimized virtual_call}
  0.02%    ││  0x00007fcda7af4a64: mov    0x60(%rsp),%rbx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.20%    ││  0x00007fcda7af4a69: movzbl 0x94(%rbx),%r10d               ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - java.util.Objects::requireNonNull@1 (line 220)
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@30 (line 99)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%    ││  0x00007fcda7af4a71: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007fcda7af4a78: add    $0x1,%rbp                      ; ImmutableOopMap{rbx=Oop [96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
           ││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
  0.10%    ││  0x00007fcda7af4a7c: test   %eax,(%r11)                    ;   {poll}
           ││  0x00007fcda7af4a7f: test   %r10d,%r10d
           ││  0x00007fcda7af4a82: jne    0x00007fcda7af49d3
           ││  0x00007fcda7af4a88: mov    0x70(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007fcda7af4a8d: mov    0xc(%r10),%r9d                 ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.24%    ││  0x00007fcda7af4a91: mov    0x20(%r10),%edi                ;*invokestatic internalMemberName {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
           ││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007fcda7af4a95: test   %r9d,%r9d
         ╭ ││  0x00007fcda7af4a98: jle    0x00007fcda7af4bf7
         │ ││  0x00007fcda7af4a9e: mov    0x18(%r10),%r11d
         │ ││  0x00007fcda7af4aa2: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007fcda7af4c01
  0.24%  │ ││  0x00007fcda7af4aa9: mov    0x1c(%r10),%r10d
         │ ││  0x00007fcda7af4aad: vmovdqu 0x10(%r12,%r10,8),%ymm1       ; implicit exception: dispatches to 0x00007fcda7af4c01
         │ ││  0x00007fcda7af4ab4: test   %edi,%edi
         │ ││  0x00007fcda7af4ab6: je     0x00007fcda7af4c01
         │ ││  0x00007fcda7af4abc: cmp    $0x7ffffff8,%r9d
         │ ││  0x00007fcda7af4ac3: jg     0x00007fcda7af4c1a
  0.38%  │ ││  0x00007fcda7af4ac9: vcmpneqps %ymm1,%ymm1,%ymm2
         │ ││  0x00007fcda7af4ace: vmovdqu 0x20(%rsp),%ymm3
         │ ││  0x00007fcda7af4ad4: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.24%  │ ││  0x00007fcda7af4ada: vcmpneqps %ymm0,%ymm0,%ymm2
         │ ││  0x00007fcda7af4adf: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.14%  │ ││  0x00007fcda7af4ae5: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%  │ ││  0x00007fcda7af4ae9: vmovdqu %ymm0,0x10(%r12,%rdi,8)       ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         │ ││  0x00007fcda7af4af0: lea    (%r12,%rdi,8),%r8
  0.22%  │ ││  0x00007fcda7af4af4: lea    (%r12,%r10,8),%rcx
         │ ││  0x00007fcda7af4af8: mov    %r9d,%r10d
         │ ││  0x00007fcda7af4afb: add    $0xffffffe8,%r10d
         │ ││  0x00007fcda7af4aff: cmp    %r10d,%r9d
  0.28%  │ ││  0x00007fcda7af4b02: mov    $0x80000000,%esi
         │ ││  0x00007fcda7af4b07: cmovl  %esi,%r10d
         │ ││  0x00007fcda7af4b0b: lea    (%r12,%r11,8),%rdx
         │ ││  0x00007fcda7af4b0f: cmp    $0x8,%r10d
         │ ││  0x00007fcda7af4b13: jle    0x00007fcda7af4c36             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.20%  │ ││  0x00007fcda7af4b19: mov    $0x8,%r11d
         │ ││  0x00007fcda7af4b1f: nop                                   ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::blend@6 (line 1025)
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         │↗││  0x00007fcda7af4b20: vmovdqu 0x10(%rcx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@1 (line 1024)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%  ││││  0x00007fcda7af4b27: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.66%  ││││  0x00007fcda7af4b2e: vcmpneqps %ymm0,%ymm0,%ymm2
  6.10%  ││││  0x00007fcda7af4b33: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.28%  ││││  0x00007fcda7af4b39: vcmpneqps %ymm1,%ymm1,%ymm2
         ││││  0x00007fcda7af4b3e: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  7.06%  ││││  0x00007fcda7af4b44: vaddps %ymm0,%ymm1,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007fcda7af4b48: vmovdqu %ymm0,0x10(%r8,%r11,4)        ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007fcda7af4b4f: vmovdqu 0x30(%rdx,%r11,4),%ymm0       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::broadcast@21 (line 1351)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.94%  ││││  0x00007fcda7af4b56: vmovdqu 0x30(%rcx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007fcda7af4b5d: vcmpneqps %ymm0,%ymm0,%ymm2
         ││││  0x00007fcda7af4b62: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.76%  ││││  0x00007fcda7af4b68: vcmpneqps %ymm1,%ymm1,%ymm2
         ││││  0x00007fcda7af4b6d: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.16%  ││││  0x00007fcda7af4b73: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%  ││││  0x00007fcda7af4b77: vmovdqu %ymm0,0x30(%r8,%r11,4)        ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.08%  ││││  0x00007fcda7af4b7e: vmovdqu 0x50(%rdx,%r11,4),%ymm0       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.74%  ││││  0x00007fcda7af4b85: vmovdqu 0x50(%rcx,%r11,4),%ymm1       ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007fcda7af4b8c: vcmpneqps %ymm0,%ymm0,%ymm2
         ││││  0x00007fcda7af4b91: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  7.48%  ││││  0x00007fcda7af4b97: vcmpneqps %ymm1,%ymm1,%ymm2
         ││││  0x00007fcda7af4b9c: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.80%  ││││  0x00007fcda7af4ba2: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007fcda7af4ba6: vmovdqu %ymm0,0x50(%r8,%r11,4)        ;*synchronization entry
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007fcda7af4bad: vmovdqu 0x70(%rdx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.08%  ││││  0x00007fcda7af4bb4: vmovdqu 0x70(%rcx,%r11,4),%ymm1       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@8
         ││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
         ││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007fcda7af4bbb: vcmpneqps %ymm0,%ymm0,%ymm2
         ││││  0x00007fcda7af4bc0: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  7.06%  ││││  0x00007fcda7af4bc6: vcmpneqps %ymm1,%ymm1,%ymm2
         ││││  0x00007fcda7af4bcb: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  7.26%  ││││  0x00007fcda7af4bd1: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%  ││││  0x00007fcda7af4bd5: vmovdqu %ymm0,0x70(%r8,%r11,4)        ;*synchronization entry
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.11%  ││││  0x00007fcda7af4bdc: add    $0x20,%r11d
  6.62%  ││││  0x00007fcda7af4be0: cmp    %r10d,%r11d
         │╰││  0x00007fcda7af4be3: jl     0x00007fcda7af4b20
         │ ││  0x00007fcda7af4be9: cmp    %r9d,%r11d
         │ ││  0x00007fcda7af4bec: jl     0x00007fcda7af4a0c
         │ ╰│  0x00007fcda7af4bf2: jmpq   0x00007fcda7af4a44
         ↘  │  0x00007fcda7af4bf7: mov    %rbx,0x60(%rsp)
            ╰  0x00007fcda7af4bfc: jmpq   0x00007fcda7af4a4f             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               0x00007fcda7af4c01: mov    $0xffffff7e,%esi               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 97.39%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.39%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 205 (454 bytes) 
  1.28%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.86%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 202 (65 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (42 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         classes.jsa  [unknown] (0 bytes) 
  0.02%         interpreter  invoke return entry points  (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%           libjvm.so  _ZNK11G1Analytics16predict_card_numEmb (0 bytes) 
  0.02%           libjvm.so  _ZNK11G1Analytics16predict_card_numEmb (0 bytes) 
  0.02%           libjvm.so  _ZN18G1SATBMarkQueueSet6filterEP13SATBMarkQueue (0 bytes) 
  0.02%           libjvm.so  _ZN19java_lang_Throwable19fill_in_stack_traceE6HandleRK12methodHandleP6Thread (0 bytes) 
  0.02%  <...other 1 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.39%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 205 
  1.58%   [kernel.kallsyms]  [unknown] 
  0.86%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 202 
  0.04%           libjvm.so  _ZNK11G1Analytics16predict_card_numEmb 
  0.02%           libjvm.so  _ZN11SymbolTable11lookup_onlyEPKciRj 
  0.02%           libjvm.so  _ZN18G1SATBMarkQueueSet6filterEP13SATBMarkQueue 
  0.02%         interpreter  invoke return entry points  
  0.02%           libjvm.so  _ZN19java_lang_Throwable19fill_in_stack_traceE6HandleRK12methodHandleP6Thread 
  0.02%         classes.jsa  [unknown] 
  0.02%         interpreter  method entry point (kind = zerolocals)  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 98.25%                  c2
  1.58%   [kernel.kallsyms]
  0.10%           libjvm.so
  0.04%         interpreter
  0.02%         classes.jsa
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckOptimistic
# Parameters: (probabilityOfNaN = 0.001, size = 1024)

# Run progress: 81.48% complete, ETA 00:02:59
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5716.453 ops/ms
# Warmup Iteration   2: 7222.275 ops/ms
# Warmup Iteration   3: 7325.405 ops/ms
# Warmup Iteration   4: 7393.285 ops/ms
# Warmup Iteration   5: 7364.770 ops/ms
Iteration   1: 7264.551 ops/ms
Iteration   2: 7388.010 ops/ms
Iteration   3: 7338.085 ops/ms
Iteration   4: 7421.865 ops/ms
Iteration   5: 7330.558 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 82.72% complete, ETA 00:02:47
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4085.822 ops/ms
# Warmup Iteration   2: 5120.731 ops/ms
# Warmup Iteration   3: 5470.323 ops/ms
# Warmup Iteration   4: 5727.194 ops/ms
# Warmup Iteration   5: 5858.604 ops/ms
Iteration   1: 5153.709 ops/ms
Iteration   2: 5537.771 ops/ms
Iteration   3: 5683.594 ops/ms
Iteration   4: 5837.422 ops/ms
Iteration   5: 5832.960 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 83.95% complete, ETA 00:02:35
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4638.741 ops/ms
# Warmup Iteration   2: 6213.697 ops/ms
# Warmup Iteration   3: 6354.636 ops/ms
# Warmup Iteration   4: 6300.983 ops/ms
# Warmup Iteration   5: 6311.178 ops/ms
Iteration   1: 6299.933 ops/ms
Iteration   2: 6314.982 ops/ms
Iteration   3: 6366.160 ops/ms
Iteration   4: 6306.581 ops/ms
Iteration   5: 6305.318 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckOptimistic":
  6425.433 ±(99.9%) 807.532 ops/ms [Average]
  (min, avg, max) = (5153.709, 6425.433, 7421.865), stdev = 755.366
  CI (99.9%): [5617.901, 7232.965] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckOptimistic:·asm":
PrintAssembly processed: 58891 total address lines.
Perf output processed (skipped 6.406 seconds):
 Column 1: cycles (5135 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 211 (454 bytes) 

                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               0x00007facf3d0088c: vmovdqu 0x10(%rcx,%r11,4),%ymm0
               0x00007facf3d00893: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.10%        0x00007facf3d0089a: vcmpneqps %ymm0,%ymm0,%ymm2
  0.37%        0x00007facf3d0089f: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.66%        0x00007facf3d008a5: vcmpneqps %ymm1,%ymm1,%ymm2
               0x00007facf3d008aa: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.82%        0x00007facf3d008b0: vaddps %ymm0,%ymm1,%ymm0
  0.02%        0x00007facf3d008b4: vmovdqu %ymm0,0x10(%r8,%r11,4)
               0x00007facf3d008bb: add    $0x8,%r11d
  0.58%        0x00007facf3d008bf: cmp    %r9d,%r11d                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               0x00007facf3d008c2: jl     0x00007facf3d0088c             ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.lang.invoke.DirectMethodHandle::internalMemberName@0 (line 310)
                                                                         ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
                                                                         ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                                         ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
                                                                         ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ↗   0x00007facf3d008c4: mov    %rbx,0x60(%rsp)
           │   0x00007facf3d008c9: vmovdqu %ymm3,0x20(%rsp)
           │↗  0x00007facf3d008cf: mov    %rdi,%rdx
  0.31%    ││  0x00007facf3d008d2: shl    $0x3,%rdx
           ││  0x00007facf3d008d6: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007facf3d008da: xchg   %ax,%ax
           ││  0x00007facf3d008dc: vzeroupper 
  0.18%    ││  0x00007facf3d008df: callq  0x00007facf3c61900             ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
           ││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
           ││                                                            ;   {optimized virtual_call}
           ││  0x00007facf3d008e4: mov    0x60(%rsp),%rbx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.10%    ││  0x00007facf3d008e9: movzbl 0x94(%rbx),%r10d               ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - java.util.Objects::requireNonNull@1 (line 220)
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@30 (line 99)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007facf3d008f1: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007facf3d008f8: add    $0x1,%rbp                      ; ImmutableOopMap{rbx=Oop [96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
           ││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
  0.19%    ││  0x00007facf3d008fc: test   %eax,(%r11)                    ;   {poll}
           ││  0x00007facf3d008ff: test   %r10d,%r10d
           ││  0x00007facf3d00902: jne    0x00007facf3d00853
           ││  0x00007facf3d00908: mov    0x70(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%    ││  0x00007facf3d0090d: mov    0xc(%r10),%r9d                 ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.18%    ││  0x00007facf3d00911: mov    0x20(%r10),%edi                ;*invokestatic internalMemberName {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
           ││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007facf3d00915: test   %r9d,%r9d
         ╭ ││  0x00007facf3d00918: jle    0x00007facf3d00a77
         │ ││  0x00007facf3d0091e: mov    0x18(%r10),%r11d
         │ ││  0x00007facf3d00922: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007facf3d00a81
  0.21%  │ ││  0x00007facf3d00929: mov    0x1c(%r10),%r10d
         │ ││  0x00007facf3d0092d: vmovdqu 0x10(%r12,%r10,8),%ymm1       ; implicit exception: dispatches to 0x00007facf3d00a81
  0.04%  │ ││  0x00007facf3d00934: test   %edi,%edi
         │ ││  0x00007facf3d00936: je     0x00007facf3d00a81
         │ ││  0x00007facf3d0093c: cmp    $0x7ffffff8,%r9d
         │ ││  0x00007facf3d00943: jg     0x00007facf3d00a9a
  0.18%  │ ││  0x00007facf3d00949: vcmpneqps %ymm1,%ymm1,%ymm2
  0.37%  │ ││  0x00007facf3d0094e: vmovdqu 0x20(%rsp),%ymm3
         │ ││  0x00007facf3d00954: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.99%  │ ││  0x00007facf3d0095a: vcmpneqps %ymm0,%ymm0,%ymm2
         │ ││  0x00007facf3d0095f: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.25%  │ ││  0x00007facf3d00965: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%  │ ││  0x00007facf3d00969: vmovdqu %ymm0,0x10(%r12,%rdi,8)       ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.16%  │ ││  0x00007facf3d00970: lea    (%r12,%rdi,8),%r8
         │ ││  0x00007facf3d00974: lea    (%r12,%r10,8),%rcx
         │ ││  0x00007facf3d00978: mov    %r9d,%r10d
         │ ││  0x00007facf3d0097b: add    $0xffffffe8,%r10d
  0.19%  │ ││  0x00007facf3d0097f: cmp    %r10d,%r9d
         │ ││  0x00007facf3d00982: mov    $0x80000000,%esi
         │ ││  0x00007facf3d00987: cmovl  %esi,%r10d
         │ ││  0x00007facf3d0098b: lea    (%r12,%r11,8),%rdx
  0.25%  │ ││  0x00007facf3d0098f: cmp    $0x8,%r10d
         │ ││  0x00007facf3d00993: jle    0x00007facf3d00ab6             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         │ ││  0x00007facf3d00999: mov    $0x8,%r11d
         │ ││  0x00007facf3d0099f: nop                                   ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::blend@6 (line 1025)
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         │↗││  0x00007facf3d009a0: vmovdqu 0x10(%rcx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@1 (line 1024)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.21%  ││││  0x00007facf3d009a7: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%  ││││  0x00007facf3d009ae: vcmpneqps %ymm0,%ymm0,%ymm2
  6.31%  ││││  0x00007facf3d009b3: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.66%  ││││  0x00007facf3d009b9: vcmpneqps %ymm1,%ymm1,%ymm2
         ││││  0x00007facf3d009be: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.78%  ││││  0x00007facf3d009c4: vaddps %ymm0,%ymm1,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007facf3d009c8: vmovdqu %ymm0,0x10(%r8,%r11,4)        ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007facf3d009cf: vmovdqu 0x30(%rdx,%r11,4),%ymm0       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::broadcast@21 (line 1351)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.98%  ││││  0x00007facf3d009d6: vmovdqu 0x30(%rcx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007facf3d009dd: vcmpneqps %ymm0,%ymm0,%ymm2
         ││││  0x00007facf3d009e2: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.72%  ││││  0x00007facf3d009e8: vcmpneqps %ymm1,%ymm1,%ymm2
         ││││  0x00007facf3d009ed: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.93%  ││││  0x00007facf3d009f3: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%  ││││  0x00007facf3d009f7: vmovdqu %ymm0,0x30(%r8,%r11,4)        ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.05%  ││││  0x00007facf3d009fe: vmovdqu 0x50(%rdx,%r11,4),%ymm0       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.06%  ││││  0x00007facf3d00a05: vmovdqu 0x50(%rcx,%r11,4),%ymm1       ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007facf3d00a0c: vcmpneqps %ymm0,%ymm0,%ymm2
         ││││  0x00007facf3d00a11: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  7.21%  ││││  0x00007facf3d00a17: vcmpneqps %ymm1,%ymm1,%ymm2
         ││││  0x00007facf3d00a1c: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.52%  ││││  0x00007facf3d00a22: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%  ││││  0x00007facf3d00a26: vmovdqu %ymm0,0x50(%r8,%r11,4)        ;*synchronization entry
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%  ││││  0x00007facf3d00a2d: vmovdqu 0x70(%rdx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.29%  ││││  0x00007facf3d00a34: vmovdqu 0x70(%rcx,%r11,4),%ymm1       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@8
         ││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
         ││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007facf3d00a3b: vcmpneqps %ymm0,%ymm0,%ymm2
         ││││  0x00007facf3d00a40: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.43%  ││││  0x00007facf3d00a46: vcmpneqps %ymm1,%ymm1,%ymm2
         ││││  0x00007facf3d00a4b: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.72%  ││││  0x00007facf3d00a51: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007facf3d00a55: vmovdqu %ymm0,0x70(%r8,%r11,4)        ;*synchronization entry
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007facf3d00a5c: add    $0x20,%r11d
  6.00%  ││││  0x00007facf3d00a60: cmp    %r10d,%r11d
         │╰││  0x00007facf3d00a63: jl     0x00007facf3d009a0
         │ ││  0x00007facf3d00a69: cmp    %r9d,%r11d
         │ ││  0x00007facf3d00a6c: jl     0x00007facf3d0088c
         │ ╰│  0x00007facf3d00a72: jmpq   0x00007facf3d008c4
         ↘  │  0x00007facf3d00a77: mov    %rbx,0x60(%rsp)
            ╰  0x00007facf3d00a7c: jmpq   0x00007facf3d008cf             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               0x00007facf3d00a81: mov    $0xffffff7e,%esi               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 95.17%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.17%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 211 (454 bytes) 
  3.29%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.95%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 208 (65 bytes) 
  0.16%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (27 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  invoke return entry points  (0 bytes) 
  0.02%         interpreter  invoke return entry points  (0 bytes) 
  0.02%         interpreter  method entry point (kind = native)  (0 bytes) 
  0.02%         interpreter  checkcast  192 checkcast  (0 bytes) 
  0.02%         interpreter  fast_aaccess_0  222 fast_aaccess_0  (0 bytes) 
  0.02%         interpreter  nofast_getfield  234 nofast_getfield  (0 bytes) 
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.17%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 211 
  3.74%   [kernel.kallsyms]  [unknown] 
  0.95%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 208 
  0.04%         interpreter  invoke return entry points  
  0.02%         interpreter  nofast_getfield  234 nofast_getfield  
  0.02%         interpreter  checkcast  192 checkcast  
  0.02%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  0.02%         interpreter  method entry point (kind = native)  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.12%                  c2
  3.74%   [kernel.kallsyms]
  0.12%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 58701 total address lines.
Perf output processed (skipped 6.488 seconds):
 Column 1: cycles (5094 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 207 (461 bytes) 

                                                                           ;   {poll_return}
                 0x00007f470c75c10a: retq                                  ;*synchronization entry
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@-1 (line 141)
                 0x00007f470c75c10b: nop                                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                                           ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
                                                                           ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ↗  ↗    0x00007f470c75c10c: vmovdqu 0x10(%rcx,%r11,4),%ymm0
  0.06%  │  │    0x00007f470c75c113: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.26%  │  │    0x00007f470c75c11a: vcmpneqps %ymm0,%ymm0,%ymm2
  0.24%  │  │    0x00007f470c75c11f: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.55%  │  │    0x00007f470c75c125: vcmpneqps %ymm1,%ymm1,%ymm2
  0.02%  │  │    0x00007f470c75c12a: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.55%  │  │    0x00007f470c75c130: vaddps %ymm0,%ymm1,%ymm0
  0.06%  │  │    0x00007f470c75c134: vmovdqu %ymm0,0x10(%r8,%r11,4)
  0.18%  │  │    0x00007f470c75c13b: add    $0x8,%r11d
  0.43%  │  │    0x00007f470c75c13f: cmp    %r9d,%r11d                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ╰  │    0x00007f470c75c142: jl     0x00007f470c75c10c             ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
            │                                                              ; - java.lang.invoke.DirectMethodHandle::internalMemberName@0 (line 310)
            │                                                              ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
            │                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │↗   0x00007f470c75c144: mov    %rbx,0x60(%rsp)
            ││   0x00007f470c75c149: vmovdqu %ymm3,0x20(%rsp)
  0.02%     ││↗  0x00007f470c75c14f: mov    %rdi,%rdx
  0.10%     │││  0x00007f470c75c152: shl    $0x3,%rdx
            │││  0x00007f470c75c156: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f470c75c15a: xchg   %ax,%ax
  0.02%     │││  0x00007f470c75c15c: vzeroupper 
  0.10%     │││  0x00007f470c75c15f: callq  0x00007f470c6bf900             ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
            │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
            │││                                                            ;   {optimized virtual_call}
            │││  0x00007f470c75c164: mov    0x60(%rsp),%rbx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.14%     │││  0x00007f470c75c169: movzbl 0x94(%rbx),%r10d               ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.util.Objects::requireNonNull@1 (line 220)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@30 (line 99)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f470c75c171: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │││  0x00007f470c75c178: add    $0x1,%rbp                      ; ImmutableOopMap{rbx=Oop [96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
            │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
  0.20%     │││  0x00007f470c75c17c: test   %eax,(%r11)                    ;   {poll}
            │││  0x00007f470c75c17f: test   %r10d,%r10d
            │││  0x00007f470c75c182: jne    0x00007f470c75c0d3
            │││  0x00007f470c75c188: mov    0x70(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%     │││  0x00007f470c75c18d: mov    0xc(%r10),%r9d                 ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.22%     │││  0x00007f470c75c191: mov    0x20(%r10),%edi                ;*invokestatic internalMemberName {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f470c75c195: test   %r9d,%r9d
          ╭ │││  0x00007f470c75c198: jle    0x00007f470c75c2f7
          │ │││  0x00007f470c75c19e: mov    0x18(%r10),%r11d
          │ │││  0x00007f470c75c1a2: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007f470c75c301
  0.33%   │ │││  0x00007f470c75c1a9: mov    0x1c(%r10),%r10d
          │ │││  0x00007f470c75c1ad: vmovdqu 0x10(%r12,%r10,8),%ymm1       ; implicit exception: dispatches to 0x00007f470c75c301
  0.24%   │ │││  0x00007f470c75c1b4: test   %edi,%edi
          │ │││  0x00007f470c75c1b6: je     0x00007f470c75c301
  0.02%   │ │││  0x00007f470c75c1bc: cmp    $0x7ffffff8,%r9d
          │ │││  0x00007f470c75c1c3: jg     0x00007f470c75c31a
  0.16%   │ │││  0x00007f470c75c1c9: vcmpneqps %ymm1,%ymm1,%ymm2
  0.55%   │ │││  0x00007f470c75c1ce: vmovdqu 0x20(%rsp),%ymm3
          │ │││  0x00007f470c75c1d4: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.79%   │ │││  0x00007f470c75c1da: vcmpneqps %ymm0,%ymm0,%ymm2
  0.02%   │ │││  0x00007f470c75c1df: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.39%   │ │││  0x00007f470c75c1e5: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.16%   │ │││  0x00007f470c75c1e9: vmovdqu %ymm0,0x10(%r12,%rdi,8)       ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.10%   │ │││  0x00007f470c75c1f0: lea    (%r12,%rdi,8),%r8
          │ │││  0x00007f470c75c1f4: lea    (%r12,%r10,8),%rcx
          │ │││  0x00007f470c75c1f8: mov    %r9d,%r10d
          │ │││  0x00007f470c75c1fb: add    $0xffffffe8,%r10d
  0.08%   │ │││  0x00007f470c75c1ff: cmp    %r10d,%r9d
          │ │││  0x00007f470c75c202: mov    $0x80000000,%esi
          │ │││  0x00007f470c75c207: cmovl  %esi,%r10d
          │ │││  0x00007f470c75c20b: lea    (%r12,%r11,8),%rdx
  0.10%   │ │││  0x00007f470c75c20f: cmp    $0x8,%r10d
          │ │││  0x00007f470c75c213: jle    0x00007f470c75c336             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f470c75c219: mov    $0x8,%r11d
          │ │││  0x00007f470c75c21f: nop                                   ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::blend@6 (line 1025)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │↗│││  0x00007f470c75c220: vmovdqu 0x10(%rcx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@1 (line 1024)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.22%   │││││  0x00007f470c75c227: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.57%   │││││  0x00007f470c75c22e: vcmpneqps %ymm0,%ymm0,%ymm2
  3.36%   │││││  0x00007f470c75c233: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  5.73%   │││││  0x00007f470c75c239: vcmpneqps %ymm1,%ymm1,%ymm2
          │││││  0x00007f470c75c23e: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.20%   │││││  0x00007f470c75c244: vaddps %ymm0,%ymm1,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.31%   │││││  0x00007f470c75c248: vmovdqu %ymm0,0x10(%r8,%r11,4)        ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.99%   │││││  0x00007f470c75c24f: vmovdqu 0x30(%rdx,%r11,4),%ymm0       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::broadcast@21 (line 1351)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  7.70%   │││││  0x00007f470c75c256: vmovdqu 0x30(%rcx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.10%   │││││  0x00007f470c75c25d: vcmpneqps %ymm0,%ymm0,%ymm2
  0.75%   │││││  0x00007f470c75c262: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  7.11%   │││││  0x00007f470c75c268: vcmpneqps %ymm1,%ymm1,%ymm2
  0.04%   │││││  0x00007f470c75c26d: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  7.09%   │││││  0x00007f470c75c273: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.02%   │││││  0x00007f470c75c277: vmovdqu %ymm0,0x30(%r8,%r11,4)        ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.26%   │││││  0x00007f470c75c27e: vmovdqu 0x50(%rdx,%r11,4),%ymm0       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.77%   │││││  0x00007f470c75c285: vmovdqu 0x50(%rcx,%r11,4),%ymm1       ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f470c75c28c: vcmpneqps %ymm0,%ymm0,%ymm2
  0.04%   │││││  0x00007f470c75c291: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  5.14%   │││││  0x00007f470c75c297: vcmpneqps %ymm1,%ymm1,%ymm2
          │││││  0x00007f470c75c29c: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.16%   │││││  0x00007f470c75c2a2: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.27%   │││││  0x00007f470c75c2a6: vmovdqu %ymm0,0x50(%r8,%r11,4)        ;*synchronization entry
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.96%   │││││  0x00007f470c75c2ad: vmovdqu 0x70(%rdx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.22%   │││││  0x00007f470c75c2b4: vmovdqu 0x70(%rcx,%r11,4),%ymm1       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@8
          │││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%   │││││  0x00007f470c75c2bb: vcmpneqps %ymm0,%ymm0,%ymm2
          │││││  0x00007f470c75c2c0: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.62%   │││││  0x00007f470c75c2c6: vcmpneqps %ymm1,%ymm1,%ymm2
          │││││  0x00007f470c75c2cb: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  7.77%   │││││  0x00007f470c75c2d1: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.83%   │││││  0x00007f470c75c2d5: vmovdqu %ymm0,0x70(%r8,%r11,4)        ;*synchronization entry
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  2.08%   │││││  0x00007f470c75c2dc: add    $0x20,%r11d
  3.10%   │││││  0x00007f470c75c2e0: cmp    %r10d,%r11d
          │╰│││  0x00007f470c75c2e3: jl     0x00007f470c75c220
          │ │││  0x00007f470c75c2e9: cmp    %r9d,%r11d
          │ ╰││  0x00007f470c75c2ec: jl     0x00007f470c75c10c
          │  ╰│  0x00007f470c75c2f2: jmpq   0x00007f470c75c144
          ↘   │  0x00007f470c75c2f7: mov    %rbx,0x60(%rsp)
              ╰  0x00007f470c75c2fc: jmpq   0x00007f470c75c14f             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                 0x00007f470c75c301: mov    $0xffffff7e,%esi               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 95.54%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.54%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 207 (461 bytes) 
  2.87%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.82%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 204 (65 bytes) 
  0.24%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.10%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  method entry point (kind = native)  (0 bytes) 
  0.02%         interpreter  iconst_0  3 iconst_0  (0 bytes) 
  0.02%         interpreter  ifle  158 ifle  (0 bytes) 
  0.04%  <...other 2 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.54%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 207 
  3.47%   [kernel.kallsyms]  [unknown] 
  0.82%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 204 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  ireturn  172 ireturn  
  0.02%         interpreter  iconst_0  3 iconst_0  
  0.02%         interpreter  invokespecial  183 invokespecial  
  0.02%         interpreter  method entry point (kind = native)  
  0.02%         interpreter  ifle  158 ifle  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.37%                  c2
  3.47%   [kernel.kallsyms]
  0.14%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 58876 total address lines.
Perf output processed (skipped 6.434 seconds):
 Column 1: cycles (5148 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 211 (461 bytes) 

                                                                           ;   {poll_return}
                 0x00007fd10ff1ba0a: retq                                  ;*synchronization entry
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@-1 (line 141)
                 0x00007fd10ff1ba0b: nop                                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                                           ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
                                                                           ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ↗  ↗    0x00007fd10ff1ba0c: vmovdqu 0x10(%rcx,%r11,4),%ymm0
  0.02%  │  │    0x00007fd10ff1ba13: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.25%  │  │    0x00007fd10ff1ba1a: vcmpneqps %ymm0,%ymm0,%ymm2
  0.39%  │  │    0x00007fd10ff1ba1f: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.87%  │  │    0x00007fd10ff1ba25: vcmpneqps %ymm1,%ymm1,%ymm2
         │  │    0x00007fd10ff1ba2a: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.84%  │  │    0x00007fd10ff1ba30: vaddps %ymm0,%ymm1,%ymm0
  0.10%  │  │    0x00007fd10ff1ba34: vmovdqu %ymm0,0x10(%r8,%r11,4)
  0.16%  │  │    0x00007fd10ff1ba3b: add    $0x8,%r11d
  0.37%  │  │    0x00007fd10ff1ba3f: cmp    %r9d,%r11d                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ╰  │    0x00007fd10ff1ba42: jl     0x00007fd10ff1ba0c             ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
            │                                                              ; - java.lang.invoke.DirectMethodHandle::internalMemberName@0 (line 310)
            │                                                              ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
            │                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │↗   0x00007fd10ff1ba44: mov    %rbx,0x60(%rsp)
            ││   0x00007fd10ff1ba49: vmovdqu %ymm3,0x20(%rsp)
  0.04%     ││↗  0x00007fd10ff1ba4f: mov    %rdi,%rdx
  0.17%     │││  0x00007fd10ff1ba52: shl    $0x3,%rdx
            │││  0x00007fd10ff1ba56: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fd10ff1ba5a: xchg   %ax,%ax
  0.06%     │││  0x00007fd10ff1ba5c: vzeroupper 
  0.25%     │││  0x00007fd10ff1ba5f: callq  0x00007fd10fe7b900             ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
            │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
            │││                                                            ;   {optimized virtual_call}
  0.04%     │││  0x00007fd10ff1ba64: mov    0x60(%rsp),%rbx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.14%     │││  0x00007fd10ff1ba69: movzbl 0x94(%rbx),%r10d               ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.util.Objects::requireNonNull@1 (line 220)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@30 (line 99)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fd10ff1ba71: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.06%     │││  0x00007fd10ff1ba78: add    $0x1,%rbp                      ; ImmutableOopMap{rbx=Oop [96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
            │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
  0.19%     │││  0x00007fd10ff1ba7c: test   %eax,(%r11)                    ;   {poll}
            │││  0x00007fd10ff1ba7f: test   %r10d,%r10d
            │││  0x00007fd10ff1ba82: jne    0x00007fd10ff1b9d3
            │││  0x00007fd10ff1ba88: mov    0x70(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%     │││  0x00007fd10ff1ba8d: mov    0xc(%r10),%r9d                 ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.12%     │││  0x00007fd10ff1ba91: mov    0x20(%r10),%edi                ;*invokestatic internalMemberName {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fd10ff1ba95: test   %r9d,%r9d
          ╭ │││  0x00007fd10ff1ba98: jle    0x00007fd10ff1bbf7
          │ │││  0x00007fd10ff1ba9e: mov    0x18(%r10),%r11d
  0.02%   │ │││  0x00007fd10ff1baa2: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007fd10ff1bc01
  0.16%   │ │││  0x00007fd10ff1baa9: mov    0x1c(%r10),%r10d
          │ │││  0x00007fd10ff1baad: vmovdqu 0x10(%r12,%r10,8),%ymm1       ; implicit exception: dispatches to 0x00007fd10ff1bc01
          │ │││  0x00007fd10ff1bab4: test   %edi,%edi
          │ │││  0x00007fd10ff1bab6: je     0x00007fd10ff1bc01
  0.06%   │ │││  0x00007fd10ff1babc: cmp    $0x7ffffff8,%r9d
          │ │││  0x00007fd10ff1bac3: jg     0x00007fd10ff1bc1a
  0.16%   │ │││  0x00007fd10ff1bac9: vcmpneqps %ymm1,%ymm1,%ymm2
  0.06%   │ │││  0x00007fd10ff1bace: vmovdqu 0x20(%rsp),%ymm3
          │ │││  0x00007fd10ff1bad4: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.76%   │ │││  0x00007fd10ff1bada: vcmpneqps %ymm0,%ymm0,%ymm2
          │ │││  0x00007fd10ff1badf: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.41%   │ │││  0x00007fd10ff1bae5: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │ │││  0x00007fd10ff1bae9: vmovdqu %ymm0,0x10(%r12,%rdi,8)       ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.14%   │ │││  0x00007fd10ff1baf0: lea    (%r12,%rdi,8),%r8
          │ │││  0x00007fd10ff1baf4: lea    (%r12,%r10,8),%rcx
          │ │││  0x00007fd10ff1baf8: mov    %r9d,%r10d
          │ │││  0x00007fd10ff1bafb: add    $0xffffffe8,%r10d
  0.17%   │ │││  0x00007fd10ff1baff: cmp    %r10d,%r9d
          │ │││  0x00007fd10ff1bb02: mov    $0x80000000,%esi
          │ │││  0x00007fd10ff1bb07: cmovl  %esi,%r10d
          │ │││  0x00007fd10ff1bb0b: lea    (%r12,%r11,8),%rdx
  0.16%   │ │││  0x00007fd10ff1bb0f: cmp    $0x8,%r10d
          │ │││  0x00007fd10ff1bb13: jle    0x00007fd10ff1bc36             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007fd10ff1bb19: mov    $0x8,%r11d
          │ │││  0x00007fd10ff1bb1f: nop                                   ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::blend@6 (line 1025)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │↗│││  0x00007fd10ff1bb20: vmovdqu 0x10(%rcx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@1 (line 1024)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.23%   │││││  0x00007fd10ff1bb27: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.43%   │││││  0x00007fd10ff1bb2e: vcmpneqps %ymm0,%ymm0,%ymm2
  4.86%   │││││  0x00007fd10ff1bb33: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.31%   │││││  0x00007fd10ff1bb39: vcmpneqps %ymm1,%ymm1,%ymm2
  0.02%   │││││  0x00007fd10ff1bb3e: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.76%   │││││  0x00007fd10ff1bb44: vaddps %ymm0,%ymm1,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.89%   │││││  0x00007fd10ff1bb48: vmovdqu %ymm0,0x10(%r8,%r11,4)        ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.93%   │││││  0x00007fd10ff1bb4f: vmovdqu 0x30(%rdx,%r11,4),%ymm0       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::broadcast@21 (line 1351)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.51%   │││││  0x00007fd10ff1bb56: vmovdqu 0x30(%rcx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fd10ff1bb5d: vcmpneqps %ymm0,%ymm0,%ymm2
          │││││  0x00007fd10ff1bb62: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  5.85%   │││││  0x00007fd10ff1bb68: vcmpneqps %ymm1,%ymm1,%ymm2
          │││││  0x00007fd10ff1bb6d: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.29%   │││││  0x00007fd10ff1bb73: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.16%   │││││  0x00007fd10ff1bb77: vmovdqu %ymm0,0x30(%r8,%r11,4)        ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.85%   │││││  0x00007fd10ff1bb7e: vmovdqu 0x50(%rdx,%r11,4),%ymm0       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  8.72%   │││││  0x00007fd10ff1bb85: vmovdqu 0x50(%rcx,%r11,4),%ymm1       ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fd10ff1bb8c: vcmpneqps %ymm0,%ymm0,%ymm2
  1.15%   │││││  0x00007fd10ff1bb91: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.82%   │││││  0x00007fd10ff1bb97: vcmpneqps %ymm1,%ymm1,%ymm2
          │││││  0x00007fd10ff1bb9c: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  7.34%   │││││  0x00007fd10ff1bba2: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.78%   │││││  0x00007fd10ff1bba6: vmovdqu %ymm0,0x50(%r8,%r11,4)        ;*synchronization entry
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.95%   │││││  0x00007fd10ff1bbad: vmovdqu 0x70(%rdx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.29%   │││││  0x00007fd10ff1bbb4: vmovdqu 0x70(%rcx,%r11,4),%ymm1       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@8
          │││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fd10ff1bbbb: vcmpneqps %ymm0,%ymm0,%ymm2
          │││││  0x00007fd10ff1bbc0: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  5.71%   │││││  0x00007fd10ff1bbc6: vcmpneqps %ymm1,%ymm1,%ymm2
          │││││  0x00007fd10ff1bbcb: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  5.98%   │││││  0x00007fd10ff1bbd1: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.08%   │││││  0x00007fd10ff1bbd5: vmovdqu %ymm0,0x70(%r8,%r11,4)        ;*synchronization entry
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.45%   │││││  0x00007fd10ff1bbdc: add    $0x20,%r11d
  5.26%   │││││  0x00007fd10ff1bbe0: cmp    %r10d,%r11d
          │╰│││  0x00007fd10ff1bbe3: jl     0x00007fd10ff1bb20
          │ │││  0x00007fd10ff1bbe9: cmp    %r9d,%r11d
          │ ╰││  0x00007fd10ff1bbec: jl     0x00007fd10ff1ba0c
          │  ╰│  0x00007fd10ff1bbf2: jmpq   0x00007fd10ff1ba44
          ↘   │  0x00007fd10ff1bbf7: mov    %rbx,0x60(%rsp)
              ╰  0x00007fd10ff1bbfc: jmpq   0x00007fd10ff1ba4f             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                 0x00007fd10ff1bc01: mov    $0xffffff7e,%esi               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 94.83%  <total for region 1>

....[Hottest Regions]...............................................................................
 94.83%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 211 (461 bytes) 
  3.44%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.84%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 208 (65 bytes) 
  0.10%   [kernel.kallsyms]  [unknown] (41 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (7 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (6 bytes) 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm (17 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.37%  <...other 19 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 94.83%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 211 
  3.96%   [kernel.kallsyms]  [unknown] 
  0.84%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 208 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%           libjvm.so  _ZN13WatcherThread3runEv 
  0.02%         interpreter  invoke return entry points  
  0.02%           libjvm.so  _ZN10JavaThread7prepareEP8_jobject14ThreadPriority 
  0.02%         interpreter  if_icmpgt  163 if_icmpgt  
  0.02%           libjvm.so  _ZN17CompilationPolicy19compile_if_requiredERK12methodHandleP6Thread 
  0.02%           libjvm.so  _ZN7Monitor28lock_without_safepoint_checkEv 
  0.02%           libjvm.so  _ZN2os13PlatformEvent4parkEl 
  0.02%         interpreter  arraylength  190 arraylength  
  0.02%         interpreter  nofast_getfield  234 nofast_getfield  
  0.02%        libc-2.23.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.02%           libjvm.so  _ZN21ThreadStateTransition20transition_and_fenceEP10JavaThread15JavaThreadStateS2_.constprop.179 
  0.02%         classes.jsa  [unknown] 
  0.02%           libjvm.so  _ZN10Reflection9new_fieldEP15fieldDescriptorP6Thread 
  0.02%           libjvm.so  _ZN15StatSamplerTask4taskEv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.67%                  c2
  3.96%   [kernel.kallsyms]
  0.19%           libjvm.so
  0.12%         interpreter
  0.02%         classes.jsa
  0.02%        libc-2.23.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckOptimistic
# Parameters: (probabilityOfNaN = 0.01, size = 1024)

# Run progress: 85.19% complete, ETA 00:02:23
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5326.677 ops/ms
# Warmup Iteration   2: 6744.487 ops/ms
# Warmup Iteration   3: 6868.644 ops/ms
# Warmup Iteration   4: 6895.037 ops/ms
# Warmup Iteration   5: 6977.955 ops/ms
Iteration   1: 6845.589 ops/ms
Iteration   2: 6937.351 ops/ms
Iteration   3: 6935.233 ops/ms
Iteration   4: 6970.709 ops/ms
Iteration   5: 6910.224 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 86.42% complete, ETA 00:02:11
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5031.177 ops/ms
# Warmup Iteration   2: 6534.017 ops/ms
# Warmup Iteration   3: 6561.849 ops/ms
# Warmup Iteration   4: 6007.148 ops/ms
# Warmup Iteration   5: 6756.451 ops/ms
Iteration   1: 6526.500 ops/ms
Iteration   2: 6524.190 ops/ms
Iteration   3: 5944.970 ops/ms
Iteration   4: 6118.404 ops/ms
Iteration   5: 5971.885 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 87.65% complete, ETA 00:01:59
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4429.712 ops/ms
# Warmup Iteration   2: 6458.116 ops/ms
# Warmup Iteration   3: 6297.274 ops/ms
# Warmup Iteration   4: 5692.000 ops/ms
# Warmup Iteration   5: 6504.826 ops/ms
Iteration   1: 5910.357 ops/ms
Iteration   2: 6559.996 ops/ms
Iteration   3: 6425.375 ops/ms
Iteration   4: 6302.116 ops/ms
Iteration   5: 5566.065 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckOptimistic":
  6429.931 ±(99.9%) 479.671 ops/ms [Average]
  (min, avg, max) = (5566.065, 6429.931, 6970.709), stdev = 448.684
  CI (99.9%): [5950.260, 6909.602] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckOptimistic:·asm":
PrintAssembly processed: 58858 total address lines.
Perf output processed (skipped 6.438 seconds):
 Column 1: cycles (5032 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 211 (461 bytes) 

                                                                           ;   {poll_return}
                 0x00007fcc6875f08a: retq                                  ;*synchronization entry
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@-1 (line 141)
                 0x00007fcc6875f08b: nop                                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                                           ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
                                                                           ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ↗  ↗    0x00007fcc6875f08c: vmovdqu 0x10(%rcx,%r11,4),%ymm0
  0.02%  │  │    0x00007fcc6875f093: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.20%  │  │    0x00007fcc6875f09a: vcmpneqps %ymm0,%ymm0,%ymm2
  0.36%  │  │    0x00007fcc6875f09f: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.64%  │  │    0x00007fcc6875f0a5: vcmpneqps %ymm1,%ymm1,%ymm2
         │  │    0x00007fcc6875f0aa: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.54%  │  │    0x00007fcc6875f0b0: vaddps %ymm0,%ymm1,%ymm0
         │  │    0x00007fcc6875f0b4: vmovdqu %ymm0,0x10(%r8,%r11,4)
  0.02%  │  │    0x00007fcc6875f0bb: add    $0x8,%r11d
  0.54%  │  │    0x00007fcc6875f0bf: cmp    %r9d,%r11d                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ╰  │    0x00007fcc6875f0c2: jl     0x00007fcc6875f08c             ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
            │                                                              ; - java.lang.invoke.DirectMethodHandle::internalMemberName@0 (line 310)
            │                                                              ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
            │                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │↗   0x00007fcc6875f0c4: mov    %rbx,0x60(%rsp)
            ││   0x00007fcc6875f0c9: vmovdqu %ymm3,0x20(%rsp)
            ││↗  0x00007fcc6875f0cf: mov    %rdi,%rdx
  0.30%     │││  0x00007fcc6875f0d2: shl    $0x3,%rdx
            │││  0x00007fcc6875f0d6: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fcc6875f0da: xchg   %ax,%ax
            │││  0x00007fcc6875f0dc: vzeroupper 
  0.20%     │││  0x00007fcc6875f0df: callq  0x00007fcc686bf900             ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
            │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
            │││                                                            ;   {optimized virtual_call}
            │││  0x00007fcc6875f0e4: mov    0x60(%rsp),%rbx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.18%     │││  0x00007fcc6875f0e9: movzbl 0x94(%rbx),%r10d               ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.util.Objects::requireNonNull@1 (line 220)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@30 (line 99)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fcc6875f0f1: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fcc6875f0f8: add    $0x1,%rbp                      ; ImmutableOopMap{rbx=Oop [96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
            │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
  0.16%     │││  0x00007fcc6875f0fc: test   %eax,(%r11)                    ;   {poll}
            │││  0x00007fcc6875f0ff: test   %r10d,%r10d
            │││  0x00007fcc6875f102: jne    0x00007fcc6875f053
            │││  0x00007fcc6875f108: mov    0x70(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fcc6875f10d: mov    0xc(%r10),%r9d                 ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.18%     │││  0x00007fcc6875f111: mov    0x20(%r10),%edi                ;*invokestatic internalMemberName {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fcc6875f115: test   %r9d,%r9d
          ╭ │││  0x00007fcc6875f118: jle    0x00007fcc6875f277
          │ │││  0x00007fcc6875f11e: mov    0x18(%r10),%r11d
          │ │││  0x00007fcc6875f122: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007fcc6875f281
  0.16%   │ │││  0x00007fcc6875f129: mov    0x1c(%r10),%r10d
          │ │││  0x00007fcc6875f12d: vmovdqu 0x10(%r12,%r10,8),%ymm1       ; implicit exception: dispatches to 0x00007fcc6875f281
          │ │││  0x00007fcc6875f134: test   %edi,%edi
          │ │││  0x00007fcc6875f136: je     0x00007fcc6875f281
          │ │││  0x00007fcc6875f13c: cmp    $0x7ffffff8,%r9d
          │ │││  0x00007fcc6875f143: jg     0x00007fcc6875f29a
  0.08%   │ │││  0x00007fcc6875f149: vcmpneqps %ymm1,%ymm1,%ymm2
  0.20%   │ │││  0x00007fcc6875f14e: vmovdqu 0x20(%rsp),%ymm3
          │ │││  0x00007fcc6875f154: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.70%   │ │││  0x00007fcc6875f15a: vcmpneqps %ymm0,%ymm0,%ymm2
          │ │││  0x00007fcc6875f15f: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.58%   │ │││  0x00007fcc6875f165: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%   │ │││  0x00007fcc6875f169: vmovdqu %ymm0,0x10(%r12,%rdi,8)       ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.18%   │ │││  0x00007fcc6875f170: lea    (%r12,%rdi,8),%r8
  0.02%   │ │││  0x00007fcc6875f174: lea    (%r12,%r10,8),%rcx
          │ │││  0x00007fcc6875f178: mov    %r9d,%r10d
          │ │││  0x00007fcc6875f17b: add    $0xffffffe8,%r10d
  0.20%   │ │││  0x00007fcc6875f17f: cmp    %r10d,%r9d
          │ │││  0x00007fcc6875f182: mov    $0x80000000,%esi
          │ │││  0x00007fcc6875f187: cmovl  %esi,%r10d
          │ │││  0x00007fcc6875f18b: lea    (%r12,%r11,8),%rdx
  0.16%   │ │││  0x00007fcc6875f18f: cmp    $0x8,%r10d
          │ │││  0x00007fcc6875f193: jle    0x00007fcc6875f2b6             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │ │││  0x00007fcc6875f199: mov    $0x8,%r11d
          │ │││  0x00007fcc6875f19f: nop                                   ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::blend@6 (line 1025)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │↗│││  0x00007fcc6875f1a0: vmovdqu 0x10(%rcx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@1 (line 1024)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.20%   │││││  0x00007fcc6875f1a7: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.58%   │││││  0x00007fcc6875f1ae: vcmpneqps %ymm0,%ymm0,%ymm2
  5.60%   │││││  0x00007fcc6875f1b3: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.06%   │││││  0x00007fcc6875f1b9: vcmpneqps %ymm1,%ymm1,%ymm2
          │││││  0x00007fcc6875f1be: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  7.05%   │││││  0x00007fcc6875f1c4: vaddps %ymm0,%ymm1,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fcc6875f1c8: vmovdqu %ymm0,0x10(%r8,%r11,4)        ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.09%   │││││  0x00007fcc6875f1cf: vmovdqu 0x30(%rdx,%r11,4),%ymm0       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::broadcast@21 (line 1351)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.30%   │││││  0x00007fcc6875f1d6: vmovdqu 0x30(%rcx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fcc6875f1dd: vcmpneqps %ymm0,%ymm0,%ymm2
  0.02%   │││││  0x00007fcc6875f1e2: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  5.76%   │││││  0x00007fcc6875f1e8: vcmpneqps %ymm1,%ymm1,%ymm2
  0.81%   │││││  0x00007fcc6875f1ed: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  7.77%   │││││  0x00007fcc6875f1f3: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.43%   │││││  0x00007fcc6875f1f7: vmovdqu %ymm0,0x30(%r8,%r11,4)        ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.05%   │││││  0x00007fcc6875f1fe: vmovdqu 0x50(%rdx,%r11,4),%ymm0       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  4.81%   │││││  0x00007fcc6875f205: vmovdqu 0x50(%rcx,%r11,4),%ymm1       ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fcc6875f20c: vcmpneqps %ymm0,%ymm0,%ymm2
  0.02%   │││││  0x00007fcc6875f211: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.34%   │││││  0x00007fcc6875f217: vcmpneqps %ymm1,%ymm1,%ymm2
          │││││  0x00007fcc6875f21c: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.22%   │││││  0x00007fcc6875f222: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.08%   │││││  0x00007fcc6875f226: vmovdqu %ymm0,0x50(%r8,%r11,4)        ;*synchronization entry
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.10%   │││││  0x00007fcc6875f22d: vmovdqu 0x70(%rdx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.32%   │││││  0x00007fcc6875f234: vmovdqu 0x70(%rcx,%r11,4),%ymm1       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@8
          │││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fcc6875f23b: vcmpneqps %ymm0,%ymm0,%ymm2
          │││││  0x00007fcc6875f240: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  5.56%   │││││  0x00007fcc6875f246: vcmpneqps %ymm1,%ymm1,%ymm2
  0.46%   │││││  0x00007fcc6875f24b: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  7.33%   │││││  0x00007fcc6875f251: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  1.15%   │││││  0x00007fcc6875f255: vmovdqu %ymm0,0x70(%r8,%r11,4)        ;*synchronization entry
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.50%   │││││  0x00007fcc6875f25c: add    $0x20,%r11d
  5.66%   │││││  0x00007fcc6875f260: cmp    %r10d,%r11d
          │╰│││  0x00007fcc6875f263: jl     0x00007fcc6875f1a0
          │ │││  0x00007fcc6875f269: cmp    %r9d,%r11d
          │ ╰││  0x00007fcc6875f26c: jl     0x00007fcc6875f08c
          │  ╰│  0x00007fcc6875f272: jmpq   0x00007fcc6875f0c4
          ↘   │  0x00007fcc6875f277: mov    %rbx,0x60(%rsp)
              ╰  0x00007fcc6875f27c: jmpq   0x00007fcc6875f0cf             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
                 0x00007fcc6875f281: mov    $0xffffff7e,%esi               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 96.94%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.94%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 211 (461 bytes) 
  1.23%   [kernel.kallsyms]  [unknown] (5 bytes) 
  1.13%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 208 (65 bytes) 
  0.10%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.22%  <...other 11 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.94%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 211 
  1.71%   [kernel.kallsyms]  [unknown] 
  1.13%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 208 
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%           libjvm.so  JVM_ArrayCopy 
  0.02%           libjvm.so  _ZN17SignatureIterator18iterate_parametersEv 
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%           libjvm.so  _ZN12LinkResolver14resolve_invokeER8CallInfo6HandleRK18constantPoolHandleiN9Bytecodes4CodeEP6Thread 
  0.02%           libjvm.so  _ZNK6vframe6senderEv 
  0.02%           libjvm.so  _ZN12PeriodicTask14real_time_tickEi 
  0.02%           libjvm.so  _ZN28G1YoungRemSetSamplingClosure14do_heap_regionEP10HeapRegion 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  method entry point (kind = zerolocals_synchronized)  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 98.07%                  c2
  1.71%   [kernel.kallsyms]
  0.12%           libjvm.so
  0.08%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 58778 total address lines.
Perf output processed (skipped 6.457 seconds):
 Column 1: cycles (5089 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 209 (454 bytes) 

                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               0x00007fdecc75e08c: vmovdqu 0x10(%rcx,%r11,4),%ymm0
               0x00007fdecc75e093: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.28%        0x00007fdecc75e09a: vcmpneqps %ymm0,%ymm0,%ymm2
  0.26%        0x00007fdecc75e09f: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  1.36%        0x00007fdecc75e0a5: vcmpneqps %ymm1,%ymm1,%ymm2
               0x00007fdecc75e0aa: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.77%        0x00007fdecc75e0b0: vaddps %ymm0,%ymm1,%ymm0
  0.02%        0x00007fdecc75e0b4: vmovdqu %ymm0,0x10(%r8,%r11,4)
  0.22%        0x00007fdecc75e0bb: add    $0x8,%r11d
  0.33%        0x00007fdecc75e0bf: cmp    %r9d,%r11d                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               0x00007fdecc75e0c2: jl     0x00007fdecc75e08c             ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.lang.invoke.DirectMethodHandle::internalMemberName@0 (line 310)
                                                                         ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
                                                                         ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                                         ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
                                                                         ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ↗   0x00007fdecc75e0c4: mov    %rbx,0x60(%rsp)
           │   0x00007fdecc75e0c9: vmovdqu %ymm3,0x20(%rsp)
           │↗  0x00007fdecc75e0cf: mov    %rdi,%rdx
  0.18%    ││  0x00007fdecc75e0d2: shl    $0x3,%rdx
           ││  0x00007fdecc75e0d6: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%    ││  0x00007fdecc75e0da: xchg   %ax,%ax
           ││  0x00007fdecc75e0dc: vzeroupper 
  0.20%    ││  0x00007fdecc75e0df: callq  0x00007fdecc6bf900             ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
           ││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
           ││                                                            ;   {optimized virtual_call}
  0.04%    ││  0x00007fdecc75e0e4: mov    0x60(%rsp),%rbx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.16%    ││  0x00007fdecc75e0e9: movzbl 0x94(%rbx),%r10d               ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - java.util.Objects::requireNonNull@1 (line 220)
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@30 (line 99)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007fdecc75e0f1: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007fdecc75e0f8: add    $0x1,%rbp                      ; ImmutableOopMap{rbx=Oop [96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
           ││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
  0.29%    ││  0x00007fdecc75e0fc: test   %eax,(%r11)                    ;   {poll}
           ││  0x00007fdecc75e0ff: test   %r10d,%r10d
           ││  0x00007fdecc75e102: jne    0x00007fdecc75e053
           ││  0x00007fdecc75e108: mov    0x70(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007fdecc75e10d: mov    0xc(%r10),%r9d                 ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.29%    ││  0x00007fdecc75e111: mov    0x20(%r10),%edi                ;*invokestatic internalMemberName {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
           ││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007fdecc75e115: test   %r9d,%r9d
         ╭ ││  0x00007fdecc75e118: jle    0x00007fdecc75e277
         │ ││  0x00007fdecc75e11e: mov    0x18(%r10),%r11d
         │ ││  0x00007fdecc75e122: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007fdecc75e281
  0.55%  │ ││  0x00007fdecc75e129: mov    0x1c(%r10),%r10d
         │ ││  0x00007fdecc75e12d: vmovdqu 0x10(%r12,%r10,8),%ymm1       ; implicit exception: dispatches to 0x00007fdecc75e281
  0.14%  │ ││  0x00007fdecc75e134: test   %edi,%edi
         │ ││  0x00007fdecc75e136: je     0x00007fdecc75e281
         │ ││  0x00007fdecc75e13c: cmp    $0x7ffffff8,%r9d
         │ ││  0x00007fdecc75e143: jg     0x00007fdecc75e29a
  0.08%  │ ││  0x00007fdecc75e149: vcmpneqps %ymm1,%ymm1,%ymm2
  0.47%  │ ││  0x00007fdecc75e14e: vmovdqu 0x20(%rsp),%ymm3
         │ ││  0x00007fdecc75e154: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.90%  │ ││  0x00007fdecc75e15a: vcmpneqps %ymm0,%ymm0,%ymm2
         │ ││  0x00007fdecc75e15f: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.45%  │ ││  0x00007fdecc75e165: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%  │ ││  0x00007fdecc75e169: vmovdqu %ymm0,0x10(%r12,%rdi,8)       ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.10%  │ ││  0x00007fdecc75e170: lea    (%r12,%rdi,8),%r8
         │ ││  0x00007fdecc75e174: lea    (%r12,%r10,8),%rcx
         │ ││  0x00007fdecc75e178: mov    %r9d,%r10d
         │ ││  0x00007fdecc75e17b: add    $0xffffffe8,%r10d
  0.28%  │ ││  0x00007fdecc75e17f: cmp    %r10d,%r9d
         │ ││  0x00007fdecc75e182: mov    $0x80000000,%esi
         │ ││  0x00007fdecc75e187: cmovl  %esi,%r10d
         │ ││  0x00007fdecc75e18b: lea    (%r12,%r11,8),%rdx
  0.24%  │ ││  0x00007fdecc75e18f: cmp    $0x8,%r10d
         │ ││  0x00007fdecc75e193: jle    0x00007fdecc75e2b6             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%  │ ││  0x00007fdecc75e199: mov    $0x8,%r11d
         │ ││  0x00007fdecc75e19f: nop                                   ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::blend@6 (line 1025)
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         │↗││  0x00007fdecc75e1a0: vmovdqu 0x10(%rcx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@1 (line 1024)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.33%  ││││  0x00007fdecc75e1a7: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.12%  ││││  0x00007fdecc75e1ae: vcmpneqps %ymm0,%ymm0,%ymm2
  5.78%  ││││  0x00007fdecc75e1b3: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.70%  ││││  0x00007fdecc75e1b9: vcmpneqps %ymm1,%ymm1,%ymm2
         ││││  0x00007fdecc75e1be: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  5.93%  ││││  0x00007fdecc75e1c4: vaddps %ymm0,%ymm1,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%  ││││  0x00007fdecc75e1c8: vmovdqu %ymm0,0x10(%r8,%r11,4)        ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.54%  ││││  0x00007fdecc75e1cf: vmovdqu 0x30(%rdx,%r11,4),%ymm0       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::broadcast@21 (line 1351)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  5.90%  ││││  0x00007fdecc75e1d6: vmovdqu 0x30(%rcx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%  ││││  0x00007fdecc75e1dd: vcmpneqps %ymm0,%ymm0,%ymm2
  0.06%  ││││  0x00007fdecc75e1e2: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.64%  ││││  0x00007fdecc75e1e8: vcmpneqps %ymm1,%ymm1,%ymm2
  0.02%  ││││  0x00007fdecc75e1ed: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.78%  ││││  0x00007fdecc75e1f3: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.10%  ││││  0x00007fdecc75e1f7: vmovdqu %ymm0,0x30(%r8,%r11,4)        ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.37%  ││││  0x00007fdecc75e1fe: vmovdqu 0x50(%rdx,%r11,4),%ymm0       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.37%  ││││  0x00007fdecc75e205: vmovdqu 0x50(%rcx,%r11,4),%ymm1       ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007fdecc75e20c: vcmpneqps %ymm0,%ymm0,%ymm2
         ││││  0x00007fdecc75e211: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.46%  ││││  0x00007fdecc75e217: vcmpneqps %ymm1,%ymm1,%ymm2
         ││││  0x00007fdecc75e21c: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.35%  ││││  0x00007fdecc75e222: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.08%  ││││  0x00007fdecc75e226: vmovdqu %ymm0,0x50(%r8,%r11,4)        ;*synchronization entry
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.10%  ││││  0x00007fdecc75e22d: vmovdqu 0x70(%rdx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.27%  ││││  0x00007fdecc75e234: vmovdqu 0x70(%rcx,%r11,4),%ymm1       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@8
         ││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
         ││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007fdecc75e23b: vcmpneqps %ymm0,%ymm0,%ymm2
  0.06%  ││││  0x00007fdecc75e240: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.82%  ││││  0x00007fdecc75e246: vcmpneqps %ymm1,%ymm1,%ymm2
  0.04%  ││││  0x00007fdecc75e24b: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.19%  ││││  0x00007fdecc75e251: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.14%  ││││  0x00007fdecc75e255: vmovdqu %ymm0,0x70(%r8,%r11,4)        ;*synchronization entry
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.26%  ││││  0x00007fdecc75e25c: add    $0x20,%r11d
  6.29%  ││││  0x00007fdecc75e260: cmp    %r10d,%r11d
         │╰││  0x00007fdecc75e263: jl     0x00007fdecc75e1a0
         │ ││  0x00007fdecc75e269: cmp    %r9d,%r11d
         │ ││  0x00007fdecc75e26c: jl     0x00007fdecc75e08c
         │ ╰│  0x00007fdecc75e272: jmpq   0x00007fdecc75e0c4
         ↘  │  0x00007fdecc75e277: mov    %rbx,0x60(%rsp)
            ╰  0x00007fdecc75e27c: jmpq   0x00007fdecc75e0cf             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               0x00007fdecc75e281: mov    $0xffffff7e,%esi               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 95.42%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.42%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 209 (454 bytes) 
  2.44%   [kernel.kallsyms]  [unknown] (5 bytes) 
  1.14%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 206 (65 bytes) 
  0.18%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.10%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.39%  <...other 20 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.42%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 209 
  3.22%   [kernel.kallsyms]  [unknown] 
  1.14%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 206 
  0.04%         interpreter  invokevirtual  182 invokevirtual  
  0.02%           libjvm.so  _ZN11SymbolTable11lookup_onlyEPKciRj 
  0.02%         classes.jsa  [unknown] 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN7Monitor28lock_without_safepoint_checkEv 
  0.02%           libjvm.so  _ZN8Rewriter18compute_index_mapsEv 
  0.02%           libjvm.so  _ZN15StatSamplerTask4taskEv 
  0.02%        libc-2.23.so  vfprintf 
  0.02%        libc-2.23.so  __libc_send 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.56%                  c2
  3.22%   [kernel.kallsyms]
  0.08%           libjvm.so
  0.06%         interpreter
  0.04%        libc-2.23.so
  0.02%         classes.jsa
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 58887 total address lines.
Perf output processed (skipped 6.485 seconds):
 Column 1: cycles (5086 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 211 (454 bytes) 

                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               0x00007ff36f6be08c: vmovdqu 0x10(%rcx,%r11,4),%ymm0
               0x00007ff36f6be093: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@23 (line 871)
                                                                         ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.39%        0x00007ff36f6be09a: vcmpneqps %ymm0,%ymm0,%ymm2
  0.26%        0x00007ff36f6be09f: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.81%        0x00007ff36f6be0a5: vcmpneqps %ymm1,%ymm1,%ymm2
               0x00007ff36f6be0aa: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.90%        0x00007ff36f6be0b0: vaddps %ymm0,%ymm1,%ymm0
  0.10%        0x00007ff36f6be0b4: vmovdqu %ymm0,0x10(%r8,%r11,4)
  0.12%        0x00007ff36f6be0bb: add    $0x8,%r11d
  0.39%        0x00007ff36f6be0bf: cmp    %r9d,%r11d                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               0x00007ff36f6be0c2: jl     0x00007ff36f6be08c             ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.lang.invoke.DirectMethodHandle::internalMemberName@0 (line 310)
                                                                         ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
                                                                         ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                                         ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
                                                                         ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ↗   0x00007ff36f6be0c4: mov    %rbx,0x60(%rsp)
           │   0x00007ff36f6be0c9: vmovdqu %ymm3,0x20(%rsp)
  0.06%    │↗  0x00007ff36f6be0cf: mov    %rdi,%rdx
  0.33%    ││  0x00007ff36f6be0d2: shl    $0x3,%rdx
           ││  0x00007ff36f6be0d6: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007ff36f6be0da: xchg   %ax,%ax
  0.04%    ││  0x00007ff36f6be0dc: vzeroupper 
  0.24%    ││  0x00007ff36f6be0df: callq  0x00007ff36f61e900             ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
           ││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@22 (line 145)
           ││                                                            ;   {optimized virtual_call}
  0.08%    ││  0x00007ff36f6be0e4: mov    0x60(%rsp),%rbx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.08%    ││  0x00007ff36f6be0e9: movzbl 0x94(%rbx),%r10d               ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - java.util.Objects::requireNonNull@1 (line 220)
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@30 (line 99)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007ff36f6be0f1: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.06%    ││  0x00007ff36f6be0f8: add    $0x1,%rbp                      ; ImmutableOopMap{rbx=Oop [96]=Oop [104]=Oop [112]=Oop [120]=Oop [0]=Oop }
           ││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@35 (line 147)
  0.10%    ││  0x00007ff36f6be0fc: test   %eax,(%r11)                    ;   {poll}
           ││  0x00007ff36f6be0ff: test   %r10d,%r10d
           ││  0x00007ff36f6be102: jne    0x00007ff36f6be053
           ││  0x00007ff36f6be108: mov    0x70(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%    ││  0x00007ff36f6be10d: mov    0xc(%r10),%r9d                 ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.14%    ││  0x00007ff36f6be111: mov    0x20(%r10),%edi                ;*invokestatic internalMemberName {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@1
           ││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
           ││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
           ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
           ││  0x00007ff36f6be115: test   %r9d,%r9d
         ╭ ││  0x00007ff36f6be118: jle    0x00007ff36f6be277
         │ ││  0x00007ff36f6be11e: mov    0x18(%r10),%r11d
  0.02%  │ ││  0x00007ff36f6be122: vmovdqu 0x10(%r12,%r11,8),%ymm0       ; implicit exception: dispatches to 0x00007ff36f6be281
  0.18%  │ ││  0x00007ff36f6be129: mov    0x1c(%r10),%r10d
         │ ││  0x00007ff36f6be12d: vmovdqu 0x10(%r12,%r10,8),%ymm1       ; implicit exception: dispatches to 0x00007ff36f6be281
  0.12%  │ ││  0x00007ff36f6be134: test   %edi,%edi
         │ ││  0x00007ff36f6be136: je     0x00007ff36f6be281
         │ ││  0x00007ff36f6be13c: cmp    $0x7ffffff8,%r9d
         │ ││  0x00007ff36f6be143: jg     0x00007ff36f6be29a
  0.10%  │ ││  0x00007ff36f6be149: vcmpneqps %ymm1,%ymm1,%ymm2
  0.92%  │ ││  0x00007ff36f6be14e: vmovdqu 0x20(%rsp),%ymm3
         │ ││  0x00007ff36f6be154: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  0.92%  │ ││  0x00007ff36f6be15a: vcmpneqps %ymm0,%ymm0,%ymm2
         │ ││  0x00007ff36f6be15f: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  0.45%  │ ││  0x00007ff36f6be165: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.08%  │ ││  0x00007ff36f6be169: vmovdqu %ymm0,0x10(%r12,%rdi,8)       ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@39 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.29%  │ ││  0x00007ff36f6be170: lea    (%r12,%rdi,8),%r8
         │ ││  0x00007ff36f6be174: lea    (%r12,%r10,8),%rcx
         │ ││  0x00007ff36f6be178: mov    %r9d,%r10d
         │ ││  0x00007ff36f6be17b: add    $0xffffffe8,%r10d
  0.28%  │ ││  0x00007ff36f6be17f: cmp    %r10d,%r9d
         │ ││  0x00007ff36f6be182: mov    $0x80000000,%esi
         │ ││  0x00007ff36f6be187: cmovl  %esi,%r10d
         │ ││  0x00007ff36f6be18b: lea    (%r12,%r11,8),%rdx
  0.12%  │ ││  0x00007ff36f6be18f: cmp    $0x8,%r10d
         │ ││  0x00007ff36f6be193: jle    0x00007ff36f6be2b6             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         │ ││  0x00007ff36f6be199: mov    $0x8,%r11d
         │ ││  0x00007ff36f6be19f: nop                                   ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::blend@6 (line 1025)
         │ ││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         │ ││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         │↗││  0x00007ff36f6be1a0: vmovdqu 0x10(%rcx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@1 (line 1024)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.22%  ││││  0x00007ff36f6be1a7: vmovdqu 0x10(%rdx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.37%  ││││  0x00007ff36f6be1ae: vcmpneqps %ymm0,%ymm0,%ymm2
  5.72%  ││││  0x00007ff36f6be1b3: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.57%  ││││  0x00007ff36f6be1b9: vcmpneqps %ymm1,%ymm1,%ymm2
  0.04%  ││││  0x00007ff36f6be1be: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.80%  ││││  0x00007ff36f6be1c4: vaddps %ymm0,%ymm1,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.29%  ││││  0x00007ff36f6be1c8: vmovdqu %ymm0,0x10(%r8,%r11,4)        ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@9 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  3.79%  ││││  0x00007ff36f6be1cf: vmovdqu 0x30(%rdx,%r11,4),%ymm0       ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::broadcast@21 (line 1351)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.00%  ││││  0x00007ff36f6be1d6: vmovdqu 0x30(%rcx,%r11,4),%ymm1       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.04%  ││││  0x00007ff36f6be1dd: vcmpneqps %ymm0,%ymm0,%ymm2
         ││││  0x00007ff36f6be1e2: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.96%  ││││  0x00007ff36f6be1e8: vcmpneqps %ymm1,%ymm1,%ymm2
  0.02%  ││││  0x00007ff36f6be1ed: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.47%  ││││  0x00007ff36f6be1f3: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.26%  ││││  0x00007ff36f6be1f7: vmovdqu %ymm0,0x30(%r8,%r11,4)        ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.18%  ││││  0x00007ff36f6be1fe: vmovdqu 0x50(%rdx,%r11,4),%ymm0       ;*invokevirtual blend {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.11%  ││││  0x00007ff36f6be205: vmovdqu 0x50(%rcx,%r11,4),%ymm1       ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::blend@5 (line 237)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@42 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.02%  ││││  0x00007ff36f6be20c: vcmpneqps %ymm0,%ymm0,%ymm2
         ││││  0x00007ff36f6be211: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  6.69%  ││││  0x00007ff36f6be217: vcmpneqps %ymm1,%ymm1,%ymm2
         ││││  0x00007ff36f6be21c: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.11%  ││││  0x00007ff36f6be222: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.08%  ││││  0x00007ff36f6be226: vmovdqu %ymm0,0x50(%r8,%r11,4)        ;*synchronization entry
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.18%  ││││  0x00007ff36f6be22d: vmovdqu 0x70(%rdx,%r11,4),%ymm0       ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  6.55%  ││││  0x00007ff36f6be234: vmovdqu 0x70(%rcx,%r11,4),%ymm1       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@8
         ││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
         ││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
         ││││  0x00007ff36f6be23b: vcmpneqps %ymm0,%ymm0,%ymm2
         ││││  0x00007ff36f6be240: vblendvps %ymm2,%ymm3,%ymm0,%ymm0
  5.78%  ││││  0x00007ff36f6be246: vcmpneqps %ymm1,%ymm1,%ymm2
  0.04%  ││││  0x00007ff36f6be24b: vblendvps %ymm2,%ymm3,%ymm1,%ymm1
  6.10%  ││││  0x00007ff36f6be251: vaddps %ymm1,%ymm0,%ymm0              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         ││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.31%  ││││  0x00007ff36f6be255: vmovdqu %ymm0,0x70(%r8,%r11,4)        ;*synchronization entry
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@-1 (line 1398)
         ││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@18 (line 98)
         ││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
  0.22%  ││││  0x00007ff36f6be25c: add    $0x20,%r11d
  6.21%  ││││  0x00007ff36f6be260: cmp    %r10d,%r11d
         │╰││  0x00007ff36f6be263: jl     0x00007ff36f6be1a0
         │ ││  0x00007ff36f6be269: cmp    %r9d,%r11d
         │ ││  0x00007ff36f6be26c: jl     0x00007ff36f6be08c
         │ ╰│  0x00007ff36f6be272: jmpq   0x00007ff36f6be0c4
         ↘  │  0x00007ff36f6be277: mov    %rbx,0x60(%rsp)
            ╰  0x00007ff36f6be27c: jmpq   0x00007ff36f6be0cf             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckOptimistic@66 (line 100)
                                                                         ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub@19 (line 145)
               0x00007ff36f6be281: mov    $0xffffff7e,%esi               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 95.71%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.71%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 211 (454 bytes) 
  2.10%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.69%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 208 (72 bytes) 
  0.37%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (2 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (23 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm (33 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  getstatic  178 getstatic  (18 bytes) 
  0.04%           libjvm.so  _ZN15StatSamplerTask4taskEv (19 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.57%  <...other 29 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.71%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckOptimistic_jmhTest::verticalSumPanamaArrayNaNCheckOptimistic_thrpt_jmhStub, version 211 
  3.22%   [kernel.kallsyms]  [unknown] 
  0.69%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 208 
  0.06%         interpreter  getstatic  178 getstatic  
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.04%           libjvm.so  _ZN15StatSamplerTask4taskEv 
  0.02%           libjvm.so  _ZN2os5Posix24supports_monotonic_clockEv 
  0.02%           libjvm.so  _ZN2os5Posix13clock_gettimeEiP8timespec 
  0.02%          ld-2.23.so  __tls_get_addr 
  0.02%        libc-2.23.so  pthread_mutex_lock 
  0.02%           libjvm.so  _ZN11SymbolTable11lookup_onlyEPKciRj 
  0.02%  libpthread-2.23.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.02%           libjvm.so  _ZN14AccessInternal25arraycopy_conjoint_atomicIvEEvPT_S2_m 
  0.02%         classes.jsa  [unknown] 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  invokeinterface  185 invokeinterface  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.40%                  c2
  3.22%   [kernel.kallsyms]
  0.18%           libjvm.so
  0.10%         interpreter
  0.02%          ld-2.23.so
  0.02%         classes.jsa
  0.02%  libpthread-2.23.so
  0.02%        libc-2.23.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckPessimistic
# Parameters: (probabilityOfNaN = 0, size = 1024)

# Run progress: 88.89% complete, ETA 00:01:47
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3522.461 ops/ms
# Warmup Iteration   2: 4118.520 ops/ms
# Warmup Iteration   3: 3908.460 ops/ms
# Warmup Iteration   4: 3571.279 ops/ms
# Warmup Iteration   5: 4259.229 ops/ms
Iteration   1: 4335.712 ops/ms
Iteration   2: 4470.361 ops/ms
Iteration   3: 4441.966 ops/ms
Iteration   4: 4462.779 ops/ms
Iteration   5: 4414.912 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 90.12% complete, ETA 00:01:35
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3275.489 ops/ms
# Warmup Iteration   2: 3855.690 ops/ms
# Warmup Iteration   3: 4167.448 ops/ms
# Warmup Iteration   4: 3911.019 ops/ms
# Warmup Iteration   5: 4018.468 ops/ms
Iteration   1: 4038.014 ops/ms
Iteration   2: 3751.725 ops/ms
Iteration   3: 4055.249 ops/ms
Iteration   4: 4159.234 ops/ms
Iteration   5: 4014.206 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 91.36% complete, ETA 00:01:23
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3324.155 ops/ms
# Warmup Iteration   2: 4124.011 ops/ms
# Warmup Iteration   3: 3998.307 ops/ms
# Warmup Iteration   4: 3732.161 ops/ms
# Warmup Iteration   5: 3851.955 ops/ms
Iteration   1: 4021.016 ops/ms
Iteration   2: 3689.664 ops/ms
Iteration   3: 4036.204 ops/ms
Iteration   4: 4070.200 ops/ms
Iteration   5: 4501.356 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckPessimistic":
  4164.173 ±(99.9%) 279.558 ops/ms [Average]
  (min, avg, max) = (3689.664, 4164.173, 4501.356), stdev = 261.499
  CI (99.9%): [3884.615, 4443.731] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckPessimistic:·asm":
PrintAssembly processed: 59347 total address lines.
Perf output processed (skipped 6.427 seconds):
 Column 1: cycles (5077 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 215 (541 bytes) 

                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                                                                           ;   {poll_return}
                 0x00007ffa9833a2da: retq                                  ;*synchronization entry
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@-1 (line 141)
                 0x00007ffa9833a2db: nop                                   ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ↗  ↗    0x00007ffa9833a2dc: vmovdqu 0x10(%rdx,%r8,4),%ymm0        ;*invokevirtual verticalSumPanamaArrayNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.32%  │  │    0x00007ffa9833a2e3: vmovdqu 0x10(%rax,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │  │    0x00007ffa9833a2ea: vmovdqu 0x10(%rsi,%r8,4),%ymm2
  0.10%  │  │    0x00007ffa9833a2f1: vcmpneqps %ymm0,%ymm0,%ymm3
  0.28%  │  │    0x00007ffa9833a2f6: vaddps %ymm0,%ymm1,%ymm0
  0.22%  │  │    0x00007ffa9833a2fa: vcmpneqps %ymm1,%ymm1,%ymm1
  0.10%  │  │    0x00007ffa9833a2ff: vpor   %ymm3,%ymm1,%ymm1
  0.32%  │  │    0x00007ffa9833a303: vpxor  -0x87b4b(%rip),%ymm1,%ymm1        # Stub::vector_all_bits_set
         │  │                                                              ;   {external_word}
         │  │    0x00007ffa9833a30b: vblendvps %ymm1,%ymm0,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.18%  │  │    0x00007ffa9833a311: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │  │    0x00007ffa9833a318: add    $0x8,%r8d
         │  │    0x00007ffa9833a31c: cmp    %r9d,%r8d                      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ╰  │    0x00007ffa9833a31f: jl     0x00007ffa9833a2dc             ;*new {reexecute=0 rethrow=0 return_oop=0}
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@0
            │                                                              ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.14%     │↗   0x00007ffa9833a321: mov    %rcx,0x40(%rsp)
            ││↗  0x00007ffa9833a326: mov    %rbx,%rdx
            │││  0x00007ffa9833a329: shl    $0x3,%rdx
            │││  0x00007ffa9833a32d: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.10%     │││  0x00007ffa9833a331: data16 xchg %ax,%ax
  0.04%     │││  0x00007ffa9833a334: vzeroupper 
  0.24%     │││  0x00007ffa9833a337: callq  0x00007ffa98299900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
            │││                                                            ;   {optimized virtual_call}
  0.02%     │││  0x00007ffa9833a33c: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007ffa9833a341: movzbl 0x94(%rcx),%r10d               ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@30 (line 88)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%     │││  0x00007ffa9833a349: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │││  0x00007ffa9833a350: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
            │││  0x00007ffa9833a354: test   %eax,(%r11)                    ;   {poll}
            │││  0x00007ffa9833a357: test   %r10d,%r10d
            │││  0x00007ffa9833a35a: jne    0x00007ffa9833a2a3
  0.10%     │││  0x00007ffa9833a360: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │││  0x00007ffa9833a365: mov    0xc(%r10),%r9d                 ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007ffa9833a369: mov    0x20(%r10),%ebx                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
            │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007ffa9833a36d: test   %r9d,%r9d
          ╭ │││  0x00007ffa9833a370: jle    0x00007ffa9833a50b             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.14%   │ │││  0x00007ffa9833a376: mov    0x18(%r10),%r8d                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%   │ │││  0x00007ffa9833a37a: vmovdqu 0x10(%r12,%r8,8),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││                                                            ; implicit exception: dispatches to 0x00007ffa9833a585
          │ │││  0x00007ffa9833a381: mov    0x1c(%r10),%r11d               ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007ffa9833a385: vmovdqu 0x10(%r12,%r11,8),%ymm1       ; implicit exception: dispatches to 0x00007ffa9833a585
  0.37%   │ │││  0x00007ffa9833a38c: vmovdqu 0x10(%r12,%rbx,8),%ymm2       ; implicit exception: dispatches to 0x00007ffa9833a585
  0.06%   │ │││  0x00007ffa9833a393: cmp    $0x7ffffff8,%r9d
          │ │││  0x00007ffa9833a39a: jg     0x00007ffa9833a515
          │ │││  0x00007ffa9833a3a0: vcmpneqps %ymm1,%ymm1,%ymm3
  0.55%   │ │││  0x00007ffa9833a3a5: vaddps %ymm1,%ymm0,%ymm1
          │ │││  0x00007ffa9833a3a9: vcmpneqps %ymm0,%ymm0,%ymm0
  0.04%   │ │││  0x00007ffa9833a3ae: vpor   %ymm3,%ymm0,%ymm0
  0.12%   │ │││  0x00007ffa9833a3b2: lea    (%r12,%rbx,8),%rsi
  0.06%   │ │││  0x00007ffa9833a3b6: lea    (%r12,%r11,8),%rdx
          │ │││  0x00007ffa9833a3ba: mov    %r9d,%r10d
          │ │││  0x00007ffa9833a3bd: add    $0xffffffe8,%r10d
  0.06%   │ │││  0x00007ffa9833a3c1: cmp    %r10d,%r9d
  0.02%   │ │││  0x00007ffa9833a3c4: mov    $0x80000000,%edi
          │ │││  0x00007ffa9833a3c9: cmovl  %edi,%r10d
  0.02%   │ │││  0x00007ffa9833a3cd: lea    (%r12,%r8,8),%rax
  0.20%   │ │││  0x00007ffa9833a3d1: vpxor  -0x87c19(%rip),%ymm0,%ymm0        # Stub::vector_all_bits_set
          │ │││                                                            ;   {external_word}
  0.12%   │ │││  0x00007ffa9833a3d9: vblendvps %ymm0,%ymm1,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.20%   │ │││  0x00007ffa9833a3df: vmovdqu %ymm0,0x10(%r12,%rbx,8)       ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007ffa9833a3e6: cmp    $0x8,%r10d
          │ │││  0x00007ffa9833a3ea: jle    0x00007ffa9833a52e             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007ffa9833a3f0: mov    $0x8,%r8d
  0.04%   │ │││  0x00007ffa9833a3f6: data16 nopw 0x0(%rax,%rax,1)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.79%   │↗│││  0x00007ffa9833a400: vmovdqu 0x10(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.21%   │││││  0x00007ffa9833a407: vmovdqu 0x10(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007ffa9833a40e: vmovdqu 0x10(%rax,%r8,4),%ymm2        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%   │││││  0x00007ffa9833a415: vcmpneqps %ymm1,%ymm1,%ymm3
  1.83%   │││││  0x00007ffa9833a41a: vcmpneqps %ymm2,%ymm2,%ymm4
  1.99%   │││││  0x00007ffa9833a41f: vaddps %ymm1,%ymm2,%ymm1
  0.02%   │││││  0x00007ffa9833a423: vpor   %ymm3,%ymm4,%ymm2
  0.47%   │││││  0x00007ffa9833a427: vpxor  -0x87c6f(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  1.73%   │││││  0x00007ffa9833a42f: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  5.32%   │││││  0x00007ffa9833a435: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.34%   │││││  0x00007ffa9833a43c: vmovdqu 0x30(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007ffa9833a443: vmovdqu 0x30(%rdx,%r8,4),%ymm1        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.01%   │││││  0x00007ffa9833a44a: vmovdqu 0x30(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.87%   │││││  0x00007ffa9833a451: vcmpneqps %ymm1,%ymm1,%ymm3
  1.18%   │││││  0x00007ffa9833a456: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007ffa9833a45b: vaddps %ymm1,%ymm2,%ymm1
  3.05%   │││││  0x00007ffa9833a45f: vpor   %ymm3,%ymm4,%ymm2
  5.52%   │││││  0x00007ffa9833a463: vpxor  -0x87cab(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  3.11%   │││││  0x00007ffa9833a46b: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 10.87%   │││││  0x00007ffa9833a471: vmovdqu %ymm0,0x30(%rsi,%r8,4)        ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@22 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007ffa9833a478: vmovdqu 0x50(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007ffa9833a47f: vmovdqu 0x50(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.75%   │││││  0x00007ffa9833a486: vmovdqu 0x50(%rax,%r8,4),%ymm2        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.32%   │││││  0x00007ffa9833a48d: vcmpneqps %ymm1,%ymm1,%ymm3
  0.10%   │││││  0x00007ffa9833a492: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007ffa9833a497: vaddps %ymm1,%ymm2,%ymm1
  1.52%   │││││  0x00007ffa9833a49b: vpor   %ymm3,%ymm4,%ymm2
  2.76%   │││││  0x00007ffa9833a49f: vpxor  -0x87ce7(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  0.08%   │││││  0x00007ffa9833a4a7: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.07%   │││││  0x00007ffa9833a4ad: vmovdqu %ymm0,0x50(%rsi,%r8,4)        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007ffa9833a4b4: vmovdqu 0x70(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007ffa9833a4bb: vmovdqu 0x70(%rdx,%r8,4),%ymm1        ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.03%   │││││  0x00007ffa9833a4c2: vmovdqu 0x70(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.98%   │││││  0x00007ffa9833a4c9: vcmpneqps %ymm1,%ymm1,%ymm3
  0.51%   │││││  0x00007ffa9833a4ce: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007ffa9833a4d3: vaddps %ymm1,%ymm2,%ymm1
  2.76%   │││││  0x00007ffa9833a4d7: vpor   %ymm3,%ymm4,%ymm2
  6.32%   │││││  0x00007ffa9833a4db: vpxor  -0x87d23(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  3.58%   │││││  0x00007ffa9833a4e3: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 10.68%   │││││  0x00007ffa9833a4e9: vmovdqu %ymm0,0x70(%rsi,%r8,4)        ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007ffa9833a4f0: add    $0x20,%r8d
          │││││  0x00007ffa9833a4f4: cmp    %r10d,%r8d
          │╰│││  0x00007ffa9833a4f7: jl     0x00007ffa9833a400
  0.06%   │ │││  0x00007ffa9833a4fd: cmp    %r9d,%r8d
  0.06%   │ ╰││  0x00007ffa9833a500: jl     0x00007ffa9833a2dc
          │  ╰│  0x00007ffa9833a506: jmpq   0x00007ffa9833a321
          ↘   │  0x00007ffa9833a50b: mov    %rcx,0x40(%rsp)
              ╰  0x00007ffa9833a510: jmpq   0x00007ffa9833a326             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 0x00007ffa9833a515: mov    $0xffffff76,%esi               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@18 (line 1140)
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@1 (line 1069)
....................................................................................................
 96.24%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.24%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 215 (541 bytes) 
  2.62%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.69%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 212 (68 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  method entry point (kind = native)  (0 bytes) 
  0.02%         interpreter  ireturn  172 ireturn  (0 bytes) 
  0.02%         interpreter  new  187 new  (0 bytes) 
  0.02%           libjvm.so  acs_CopyRight (0 bytes) 
  0.02%           libjvm.so  _ZN12MemAllocator10Allocation31notify_allocation_jvmti_samplerEv (0 bytes) 
  0.02%           libjvm.so  _ZN9metaspace12SpaceManager8allocateEm (0 bytes) 
  0.06%  <...other 3 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.24%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 215 
  2.82%   [kernel.kallsyms]  [unknown] 
  0.69%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 212 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.02%        libc-2.23.so  _int_malloc 
  0.02%           libjvm.so  acs_CopyRight 
  0.02%         interpreter  method entry point (kind = native)  
  0.02%           libjvm.so  _ZN12MemAllocator10Allocation31notify_allocation_jvmti_samplerEv 
  0.02%        libc-2.23.so  _int_free 
  0.02%         interpreter  ireturn  172 ireturn  
  0.02%  libpthread-2.23.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.02%         interpreter  new  187 new  
  0.02%           libjvm.so  _ZN9metaspace12SpaceManager8allocateEm 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.93%                  c2
  2.82%   [kernel.kallsyms]
  0.12%         interpreter
  0.06%           libjvm.so
  0.04%        libc-2.23.so
  0.02%  libpthread-2.23.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 58581 total address lines.
Perf output processed (skipped 6.448 seconds):
 Column 1: cycles (5054 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 207 (548 bytes) 

                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                                                                           ;   {poll_return}
                 0x00007fc428337c5a: retq                                  ;*synchronization entry
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@-1 (line 141)
                 0x00007fc428337c5b: nop                                   ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%  ↗  ↗    0x00007fc428337c5c: vmovdqu 0x10(%rdx,%r8,4),%ymm0        ;*invokevirtual verticalSumPanamaArrayNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.24%  │  │    0x00007fc428337c63: vmovdqu 0x10(%rax,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │  │    0x00007fc428337c6a: vmovdqu 0x10(%rsi,%r8,4),%ymm2
  0.14%  │  │    0x00007fc428337c71: vcmpneqps %ymm0,%ymm0,%ymm3
  0.36%  │  │    0x00007fc428337c76: vaddps %ymm0,%ymm1,%ymm0
  0.22%  │  │    0x00007fc428337c7a: vcmpneqps %ymm1,%ymm1,%ymm1
         │  │    0x00007fc428337c7f: vpor   %ymm3,%ymm1,%ymm1
  0.65%  │  │    0x00007fc428337c83: vpxor  -0x854cb(%rip),%ymm1,%ymm1        # Stub::vector_all_bits_set
         │  │                                                              ;   {external_word}
  0.12%  │  │    0x00007fc428337c8b: vblendvps %ymm1,%ymm0,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.11%  │  │    0x00007fc428337c91: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │  │    0x00007fc428337c98: add    $0x8,%r8d
         │  │    0x00007fc428337c9c: cmp    %r9d,%r8d                      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ╰  │    0x00007fc428337c9f: jl     0x00007fc428337c5c             ;*new {reexecute=0 rethrow=0 return_oop=0}
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@0
            │                                                              ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%     │↗   0x00007fc428337ca1: mov    %rcx,0x40(%rsp)
  0.02%     ││↗  0x00007fc428337ca6: mov    %rbx,%rdx
            │││  0x00007fc428337ca9: shl    $0x3,%rdx
            │││  0x00007fc428337cad: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.10%     │││  0x00007fc428337cb1: data16 xchg %ax,%ax
  0.02%     │││  0x00007fc428337cb4: vzeroupper 
  0.22%     │││  0x00007fc428337cb7: callq  0x00007fc428299900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
            │││                                                            ;   {optimized virtual_call}
  0.04%     │││  0x00007fc428337cbc: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fc428337cc1: movzbl 0x94(%rcx),%r10d               ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@30 (line 88)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.12%     │││  0x00007fc428337cc9: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │││  0x00007fc428337cd0: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
            │││  0x00007fc428337cd4: test   %eax,(%r11)                    ;   {poll}
            │││  0x00007fc428337cd7: test   %r10d,%r10d
            │││  0x00007fc428337cda: jne    0x00007fc428337c23
  0.06%     │││  0x00007fc428337ce0: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │││  0x00007fc428337ce5: mov    0xc(%r10),%r9d                 ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fc428337ce9: mov    0x20(%r10),%ebx                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
            │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fc428337ced: test   %r9d,%r9d
          ╭ │││  0x00007fc428337cf0: jle    0x00007fc428337e8b             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%   │ │││  0x00007fc428337cf6: mov    0x18(%r10),%r8d                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%   │ │││  0x00007fc428337cfa: vmovdqu 0x10(%r12,%r8,8),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││                                                            ; implicit exception: dispatches to 0x00007fc428337f05
          │ │││  0x00007fc428337d01: mov    0x1c(%r10),%r11d               ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007fc428337d05: vmovdqu 0x10(%r12,%r11,8),%ymm1       ; implicit exception: dispatches to 0x00007fc428337f05
  0.28%   │ │││  0x00007fc428337d0c: vmovdqu 0x10(%r12,%rbx,8),%ymm2       ; implicit exception: dispatches to 0x00007fc428337f05
  0.04%   │ │││  0x00007fc428337d13: cmp    $0x7ffffff8,%r9d
          │ │││  0x00007fc428337d1a: jg     0x00007fc428337e95
          │ │││  0x00007fc428337d20: vcmpneqps %ymm1,%ymm1,%ymm3
  0.57%   │ │││  0x00007fc428337d25: vaddps %ymm1,%ymm0,%ymm1
          │ │││  0x00007fc428337d29: vcmpneqps %ymm0,%ymm0,%ymm0
          │ │││  0x00007fc428337d2e: vpor   %ymm3,%ymm0,%ymm0
  0.04%   │ │││  0x00007fc428337d32: lea    (%r12,%rbx,8),%rsi
  0.04%   │ │││  0x00007fc428337d36: lea    (%r12,%r11,8),%rdx
          │ │││  0x00007fc428337d3a: mov    %r9d,%r10d
          │ │││  0x00007fc428337d3d: add    $0xffffffe8,%r10d
  0.02%   │ │││  0x00007fc428337d41: cmp    %r10d,%r9d
  0.02%   │ │││  0x00007fc428337d44: mov    $0x80000000,%edi
          │ │││  0x00007fc428337d49: cmovl  %edi,%r10d
          │ │││  0x00007fc428337d4d: lea    (%r12,%r8,8),%rax
  0.14%   │ │││  0x00007fc428337d51: vpxor  -0x85599(%rip),%ymm0,%ymm0        # Stub::vector_all_bits_set
          │ │││                                                            ;   {external_word}
  0.08%   │ │││  0x00007fc428337d59: vblendvps %ymm0,%ymm1,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.14%   │ │││  0x00007fc428337d5f: vmovdqu %ymm0,0x10(%r12,%rbx,8)       ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007fc428337d66: cmp    $0x8,%r10d
          │ │││  0x00007fc428337d6a: jle    0x00007fc428337eae             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007fc428337d70: mov    $0x8,%r8d
  0.04%   │ │││  0x00007fc428337d76: data16 nopw 0x0(%rax,%rax,1)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.70%   │↗│││  0x00007fc428337d80: vmovdqu 0x10(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.92%   │││││  0x00007fc428337d87: vmovdqu 0x10(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │││││  0x00007fc428337d8e: vmovdqu 0x10(%rax,%r8,4),%ymm2        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%   │││││  0x00007fc428337d95: vcmpneqps %ymm1,%ymm1,%ymm3
  1.90%   │││││  0x00007fc428337d9a: vcmpneqps %ymm2,%ymm2,%ymm4
  2.22%   │││││  0x00007fc428337d9f: vaddps %ymm1,%ymm2,%ymm1
  0.02%   │││││  0x00007fc428337da3: vpor   %ymm3,%ymm4,%ymm2
  0.44%   │││││  0x00007fc428337da7: vpxor  -0x855ef(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  2.14%   │││││  0x00007fc428337daf: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  5.07%   │││││  0x00007fc428337db5: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.81%   │││││  0x00007fc428337dbc: vmovdqu 0x30(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fc428337dc3: vmovdqu 0x30(%rdx,%r8,4),%ymm1        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.43%   │││││  0x00007fc428337dca: vmovdqu 0x30(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.79%   │││││  0x00007fc428337dd1: vcmpneqps %ymm1,%ymm1,%ymm3
  1.52%   │││││  0x00007fc428337dd6: vcmpneqps %ymm2,%ymm2,%ymm4
  0.02%   │││││  0x00007fc428337ddb: vaddps %ymm1,%ymm2,%ymm1
  3.26%   │││││  0x00007fc428337ddf: vpor   %ymm3,%ymm4,%ymm2
  5.09%   │││││  0x00007fc428337de3: vpxor  -0x8562b(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  2.73%   │││││  0x00007fc428337deb: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 10.27%   │││││  0x00007fc428337df1: vmovdqu %ymm0,0x30(%rsi,%r8,4)        ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@22 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fc428337df8: vmovdqu 0x50(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fc428337dff: vmovdqu 0x50(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.25%   │││││  0x00007fc428337e06: vmovdqu 0x50(%rax,%r8,4),%ymm2        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.55%   │││││  0x00007fc428337e0d: vcmpneqps %ymm1,%ymm1,%ymm3
  0.18%   │││││  0x00007fc428337e12: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007fc428337e17: vaddps %ymm1,%ymm2,%ymm1
  1.54%   │││││  0x00007fc428337e1b: vpor   %ymm3,%ymm4,%ymm2
  2.67%   │││││  0x00007fc428337e1f: vpxor  -0x85667(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  0.10%   │││││  0x00007fc428337e27: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.07%   │││││  0x00007fc428337e2d: vmovdqu %ymm0,0x50(%rsi,%r8,4)        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │││││  0x00007fc428337e34: vmovdqu 0x70(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fc428337e3b: vmovdqu 0x70(%rdx,%r8,4),%ymm1        ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.19%   │││││  0x00007fc428337e42: vmovdqu 0x70(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.37%   │││││  0x00007fc428337e49: vcmpneqps %ymm1,%ymm1,%ymm3
  0.59%   │││││  0x00007fc428337e4e: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007fc428337e53: vaddps %ymm1,%ymm2,%ymm1
  3.17%   │││││  0x00007fc428337e57: vpor   %ymm3,%ymm4,%ymm2
  6.55%   │││││  0x00007fc428337e5b: vpxor  -0x856a3(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  3.07%   │││││  0x00007fc428337e63: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 10.76%   │││││  0x00007fc428337e69: vmovdqu %ymm0,0x70(%rsi,%r8,4)        ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │││││  0x00007fc428337e70: add    $0x20,%r8d
          │││││  0x00007fc428337e74: cmp    %r10d,%r8d
          │╰│││  0x00007fc428337e77: jl     0x00007fc428337d80
  0.08%   │ │││  0x00007fc428337e7d: cmp    %r9d,%r8d
  0.08%   │ ╰││  0x00007fc428337e80: jl     0x00007fc428337c5c
          │  ╰│  0x00007fc428337e86: jmpq   0x00007fc428337ca1
          ↘   │  0x00007fc428337e8b: mov    %rcx,0x40(%rsp)
              ╰  0x00007fc428337e90: jmpq   0x00007fc428337ca6             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 0x00007fc428337e95: mov    $0xffffff76,%esi               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@18 (line 1140)
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@1 (line 1069)
....................................................................................................
 96.72%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.72%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 207 (548 bytes) 
  1.72%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.61%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 204 (68 bytes) 
  0.20%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.24%  <...other 12 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.72%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 207 
  2.51%   [kernel.kallsyms]  [unknown] 
  0.61%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 204 
  0.02%         interpreter  nofast_getfield  234 nofast_getfield  
  0.02%           libjvm.so  _ZN17ThreadsListHandleD2Ev 
  0.02%           libjvm.so  _ZNK8CodeHeap16find_blob_unsafeEPv 
  0.02%         interpreter  invokestatic  184 invokestatic  
  0.02%         classes.jsa  [unknown] 
  0.02%         interpreter  new  187 new  
  0.02%           libjvm.so  _ZN16SystemDictionary23check_signature_loadersEP6Symbol6HandleS2_bP6Thread 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.33%                  c2
  2.51%   [kernel.kallsyms]
  0.06%           libjvm.so
  0.06%         interpreter
  0.02%         classes.jsa
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 59329 total address lines.
Perf output processed (skipped 6.497 seconds):
 Column 1: cycles (5050 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 215 (548 bytes) 

                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                                                                           ;   {poll_return}
                 0x00007fd66c76055a: retq                                  ;*synchronization entry
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@-1 (line 141)
                 0x00007fd66c76055b: nop                                   ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%  ↗  ↗    0x00007fd66c76055c: vmovdqu 0x10(%rdx,%r8,4),%ymm0        ;*invokevirtual verticalSumPanamaArrayNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.26%  │  │    0x00007fd66c760563: vmovdqu 0x10(%rax,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%  │  │    0x00007fd66c76056a: vmovdqu 0x10(%rsi,%r8,4),%ymm2
  0.10%  │  │    0x00007fd66c760571: vcmpneqps %ymm0,%ymm0,%ymm3
  0.08%  │  │    0x00007fd66c760576: vaddps %ymm0,%ymm1,%ymm0
  0.20%  │  │    0x00007fd66c76057a: vcmpneqps %ymm1,%ymm1,%ymm1
  0.02%  │  │    0x00007fd66c76057f: vpor   %ymm3,%ymm1,%ymm1
  0.42%  │  │    0x00007fd66c760583: vpxor  -0x87dcb(%rip),%ymm1,%ymm1        # Stub::vector_all_bits_set
         │  │                                                              ;   {external_word}
  0.08%  │  │    0x00007fd66c76058b: vblendvps %ymm1,%ymm0,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.99%  │  │    0x00007fd66c760591: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │  │    0x00007fd66c760598: add    $0x8,%r8d
         │  │    0x00007fd66c76059c: cmp    %r9d,%r8d                      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ╰  │    0x00007fd66c76059f: jl     0x00007fd66c76055c             ;*new {reexecute=0 rethrow=0 return_oop=0}
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@0
            │                                                              ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%     │↗   0x00007fd66c7605a1: mov    %rcx,0x40(%rsp)
            ││↗  0x00007fd66c7605a6: mov    %rbx,%rdx
            │││  0x00007fd66c7605a9: shl    $0x3,%rdx
            │││  0x00007fd66c7605ad: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%     │││  0x00007fd66c7605b1: data16 xchg %ax,%ax
  0.04%     │││  0x00007fd66c7605b4: vzeroupper 
  0.16%     │││  0x00007fd66c7605b7: callq  0x00007fd66c6bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
            │││                                                            ;   {optimized virtual_call}
  0.04%     │││  0x00007fd66c7605bc: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fd66c7605c1: movzbl 0x94(%rcx),%r10d               ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@30 (line 88)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%     │││  0x00007fd66c7605c9: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fd66c7605d0: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
            │││  0x00007fd66c7605d4: test   %eax,(%r11)                    ;   {poll}
            │││  0x00007fd66c7605d7: test   %r10d,%r10d
            │││  0x00007fd66c7605da: jne    0x00007fd66c760523
  0.14%     │││  0x00007fd66c7605e0: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │││  0x00007fd66c7605e5: mov    0xc(%r10),%r9d                 ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fd66c7605e9: mov    0x20(%r10),%ebx                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
            │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fd66c7605ed: test   %r9d,%r9d
          ╭ │││  0x00007fd66c7605f0: jle    0x00007fd66c76078b             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.14%   │ │││  0x00007fd66c7605f6: mov    0x18(%r10),%r8d                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │ │││  0x00007fd66c7605fa: vmovdqu 0x10(%r12,%r8,8),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││                                                            ; implicit exception: dispatches to 0x00007fd66c760805
          │ │││  0x00007fd66c760601: mov    0x1c(%r10),%r11d               ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007fd66c760605: vmovdqu 0x10(%r12,%r11,8),%ymm1       ; implicit exception: dispatches to 0x00007fd66c760805
  0.42%   │ │││  0x00007fd66c76060c: vmovdqu 0x10(%r12,%rbx,8),%ymm2       ; implicit exception: dispatches to 0x00007fd66c760805
  0.06%   │ │││  0x00007fd66c760613: cmp    $0x7ffffff8,%r9d
          │ │││  0x00007fd66c76061a: jg     0x00007fd66c760795
          │ │││  0x00007fd66c760620: vcmpneqps %ymm1,%ymm1,%ymm3
  0.55%   │ │││  0x00007fd66c760625: vaddps %ymm1,%ymm0,%ymm1
          │ │││  0x00007fd66c760629: vcmpneqps %ymm0,%ymm0,%ymm0
  0.02%   │ │││  0x00007fd66c76062e: vpor   %ymm3,%ymm0,%ymm0
  0.12%   │ │││  0x00007fd66c760632: lea    (%r12,%rbx,8),%rsi
  0.06%   │ │││  0x00007fd66c760636: lea    (%r12,%r11,8),%rdx
          │ │││  0x00007fd66c76063a: mov    %r9d,%r10d
          │ │││  0x00007fd66c76063d: add    $0xffffffe8,%r10d
  0.02%   │ │││  0x00007fd66c760641: cmp    %r10d,%r9d
  0.02%   │ │││  0x00007fd66c760644: mov    $0x80000000,%edi
          │ │││  0x00007fd66c760649: cmovl  %edi,%r10d
          │ │││  0x00007fd66c76064d: lea    (%r12,%r8,8),%rax
  0.08%   │ │││  0x00007fd66c760651: vpxor  -0x87e99(%rip),%ymm0,%ymm0        # Stub::vector_all_bits_set
          │ │││                                                            ;   {external_word}
  0.14%   │ │││  0x00007fd66c760659: vblendvps %ymm0,%ymm1,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.20%   │ │││  0x00007fd66c76065f: vmovdqu %ymm0,0x10(%r12,%rbx,8)       ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007fd66c760666: cmp    $0x8,%r10d
          │ │││  0x00007fd66c76066a: jle    0x00007fd66c7607ae             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007fd66c760670: mov    $0x8,%r8d
  0.10%   │ │││  0x00007fd66c760676: data16 nopw 0x0(%rax,%rax,1)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.70%   │↗│││  0x00007fd66c760680: vmovdqu 0x10(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.14%   │││││  0x00007fd66c760687: vmovdqu 0x10(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fd66c76068e: vmovdqu 0x10(%rax,%r8,4),%ymm2        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%   │││││  0x00007fd66c760695: vcmpneqps %ymm1,%ymm1,%ymm3
  1.94%   │││││  0x00007fd66c76069a: vcmpneqps %ymm2,%ymm2,%ymm4
  2.10%   │││││  0x00007fd66c76069f: vaddps %ymm1,%ymm2,%ymm1
  0.08%   │││││  0x00007fd66c7606a3: vpor   %ymm3,%ymm4,%ymm2
  0.55%   │││││  0x00007fd66c7606a7: vpxor  -0x87eef(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  1.90%   │││││  0x00007fd66c7606af: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  4.99%   │││││  0x00007fd66c7606b5: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.65%   │││││  0x00007fd66c7606bc: vmovdqu 0x30(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fd66c7606c3: vmovdqu 0x30(%rdx,%r8,4),%ymm1        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.34%   │││││  0x00007fd66c7606ca: vmovdqu 0x30(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.63%   │││││  0x00007fd66c7606d1: vcmpneqps %ymm1,%ymm1,%ymm3
  1.11%   │││││  0x00007fd66c7606d6: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007fd66c7606db: vaddps %ymm1,%ymm2,%ymm1
  3.31%   │││││  0x00007fd66c7606df: vpor   %ymm3,%ymm4,%ymm2
  6.10%   │││││  0x00007fd66c7606e3: vpxor  -0x87f2b(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  2.85%   │││││  0x00007fd66c7606eb: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 10.61%   │││││  0x00007fd66c7606f1: vmovdqu %ymm0,0x30(%rsi,%r8,4)        ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@22 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fd66c7606f8: vmovdqu 0x50(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │││││  0x00007fd66c7606ff: vmovdqu 0x50(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.54%   │││││  0x00007fd66c760706: vmovdqu 0x50(%rax,%r8,4),%ymm2        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.51%   │││││  0x00007fd66c76070d: vcmpneqps %ymm1,%ymm1,%ymm3
  0.12%   │││││  0x00007fd66c760712: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007fd66c760717: vaddps %ymm1,%ymm2,%ymm1
  1.82%   │││││  0x00007fd66c76071b: vpor   %ymm3,%ymm4,%ymm2
  2.99%   │││││  0x00007fd66c76071f: vpxor  -0x87f67(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  0.18%   │││││  0x00007fd66c760727: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  7.03%   │││││  0x00007fd66c76072d: vmovdqu %ymm0,0x50(%rsi,%r8,4)        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fd66c760734: vmovdqu 0x70(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fd66c76073b: vmovdqu 0x70(%rdx,%r8,4),%ymm1        ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.87%   │││││  0x00007fd66c760742: vmovdqu 0x70(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.27%   │││││  0x00007fd66c760749: vcmpneqps %ymm1,%ymm1,%ymm3
  0.65%   │││││  0x00007fd66c76074e: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007fd66c760753: vaddps %ymm1,%ymm2,%ymm1
  2.93%   │││││  0x00007fd66c760757: vpor   %ymm3,%ymm4,%ymm2
  6.34%   │││││  0x00007fd66c76075b: vpxor  -0x87fa3(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  2.57%   │││││  0x00007fd66c760763: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  9.76%   │││││  0x00007fd66c760769: vmovdqu %ymm0,0x70(%rsi,%r8,4)        ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%   │││││  0x00007fd66c760770: add    $0x20,%r8d
          │││││  0x00007fd66c760774: cmp    %r10d,%r8d
          │╰│││  0x00007fd66c760777: jl     0x00007fd66c760680
  0.02%   │ │││  0x00007fd66c76077d: cmp    %r9d,%r8d
  0.04%   │ ╰││  0x00007fd66c760780: jl     0x00007fd66c76055c
          │  ╰│  0x00007fd66c760786: jmpq   0x00007fd66c7605a1
          ↘   │  0x00007fd66c76078b: mov    %rcx,0x40(%rsp)
              ╰  0x00007fd66c760790: jmpq   0x00007fd66c7605a6             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 0x00007fd66c760795: mov    $0xffffff76,%esi               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@18 (line 1140)
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@1 (line 1069)
....................................................................................................
 96.57%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.57%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 215 (548 bytes) 
  2.38%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.73%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 212 (68 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.57%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 215 
  2.67%   [kernel.kallsyms]  [unknown] 
  0.73%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 212 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.31%                  c2
  2.67%   [kernel.kallsyms]
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckPessimistic
# Parameters: (probabilityOfNaN = 0.001, size = 1024)

# Run progress: 92.59% complete, ETA 00:01:11
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4107.121 ops/ms
# Warmup Iteration   2: 4710.331 ops/ms
# Warmup Iteration   3: 4183.956 ops/ms
# Warmup Iteration   4: 4159.681 ops/ms
# Warmup Iteration   5: 3807.734 ops/ms
Iteration   1: 3950.220 ops/ms
Iteration   2: 4100.231 ops/ms
Iteration   3: 4000.087 ops/ms
Iteration   4: 3776.349 ops/ms
Iteration   5: 3978.051 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 93.83% complete, ETA 00:00:59
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3904.635 ops/ms
# Warmup Iteration   2: 4603.792 ops/ms
# Warmup Iteration   3: 3855.051 ops/ms
# Warmup Iteration   4: 4049.670 ops/ms
# Warmup Iteration   5: 4085.656 ops/ms
Iteration   1: 4458.484 ops/ms
Iteration   2: 4460.476 ops/ms
Iteration   3: 4553.949 ops/ms
Iteration   4: 4178.574 ops/ms
Iteration   5: 4034.746 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 95.06% complete, ETA 00:00:47
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3232.232 ops/ms
# Warmup Iteration   2: 4550.995 ops/ms
# Warmup Iteration   3: 3788.073 ops/ms
# Warmup Iteration   4: 3867.047 ops/ms
# Warmup Iteration   5: 4121.907 ops/ms
Iteration   1: 4102.673 ops/ms
Iteration   2: 3629.651 ops/ms
Iteration   3: 3981.900 ops/ms
Iteration   4: 4248.619 ops/ms
Iteration   5: 4313.345 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckPessimistic":
  4117.824 ±(99.9%) 274.797 ops/ms [Average]
  (min, avg, max) = (3629.651, 4117.824, 4553.949), stdev = 257.046
  CI (99.9%): [3843.026, 4392.621] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckPessimistic:·asm":
PrintAssembly processed: 59786 total address lines.
Perf output processed (skipped 6.456 seconds):
 Column 1: cycles (5075 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 215 (541 bytes) 

                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                                                                           ;   {poll_return}
                 0x00007fd48c7610da: retq                                  ;*synchronization entry
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@-1 (line 141)
                 0x00007fd48c7610db: nop                                   ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ↗  ↗    0x00007fd48c7610dc: vmovdqu 0x10(%rdx,%r8,4),%ymm0        ;*invokevirtual verticalSumPanamaArrayNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.28%  │  │    0x00007fd48c7610e3: vmovdqu 0x10(%rax,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%  │  │    0x00007fd48c7610ea: vmovdqu 0x10(%rsi,%r8,4),%ymm2
  0.06%  │  │    0x00007fd48c7610f1: vcmpneqps %ymm0,%ymm0,%ymm3
  0.61%  │  │    0x00007fd48c7610f6: vaddps %ymm0,%ymm1,%ymm0
  0.30%  │  │    0x00007fd48c7610fa: vcmpneqps %ymm1,%ymm1,%ymm1
         │  │    0x00007fd48c7610ff: vpor   %ymm3,%ymm1,%ymm1
  0.53%  │  │    0x00007fd48c761103: vpxor  -0x8894b(%rip),%ymm1,%ymm1        # Stub::vector_all_bits_set
         │  │                                                              ;   {external_word}
  0.20%  │  │    0x00007fd48c76110b: vblendvps %ymm1,%ymm0,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.34%  │  │    0x00007fd48c761111: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │  │    0x00007fd48c761118: add    $0x8,%r8d
         │  │    0x00007fd48c76111c: cmp    %r9d,%r8d                      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ╰  │    0x00007fd48c76111f: jl     0x00007fd48c7610dc             ;*new {reexecute=0 rethrow=0 return_oop=0}
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@0
            │                                                              ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%     │↗   0x00007fd48c761121: mov    %rcx,0x40(%rsp)
  0.12%     ││↗  0x00007fd48c761126: mov    %rbx,%rdx
            │││  0x00007fd48c761129: shl    $0x3,%rdx
            │││  0x00007fd48c76112d: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%     │││  0x00007fd48c761131: data16 xchg %ax,%ax
  0.08%     │││  0x00007fd48c761134: vzeroupper 
  0.20%     │││  0x00007fd48c761137: callq  0x00007fd48c6bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
            │││                                                            ;   {optimized virtual_call}
  0.16%     │││  0x00007fd48c76113c: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │││  0x00007fd48c761141: movzbl 0x94(%rcx),%r10d               ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@30 (line 88)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%     │││  0x00007fd48c761149: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │││  0x00007fd48c761150: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
            │││  0x00007fd48c761154: test   %eax,(%r11)                    ;   {poll}
            │││  0x00007fd48c761157: test   %r10d,%r10d
            │││  0x00007fd48c76115a: jne    0x00007fd48c7610a3
  0.06%     │││  0x00007fd48c761160: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.12%     │││  0x00007fd48c761165: mov    0xc(%r10),%r9d                 ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fd48c761169: mov    0x20(%r10),%ebx                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
            │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007fd48c76116d: test   %r9d,%r9d
          ╭ │││  0x00007fd48c761170: jle    0x00007fd48c76130b             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │ │││  0x00007fd48c761176: mov    0x18(%r10),%r8d                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%   │ │││  0x00007fd48c76117a: vmovdqu 0x10(%r12,%r8,8),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││                                                            ; implicit exception: dispatches to 0x00007fd48c761385
          │ │││  0x00007fd48c761181: mov    0x1c(%r10),%r11d               ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007fd48c761185: vmovdqu 0x10(%r12,%r11,8),%ymm1       ; implicit exception: dispatches to 0x00007fd48c761385
  0.47%   │ │││  0x00007fd48c76118c: vmovdqu 0x10(%r12,%rbx,8),%ymm2       ; implicit exception: dispatches to 0x00007fd48c761385
  0.04%   │ │││  0x00007fd48c761193: cmp    $0x7ffffff8,%r9d
          │ │││  0x00007fd48c76119a: jg     0x00007fd48c761315
          │ │││  0x00007fd48c7611a0: vcmpneqps %ymm1,%ymm1,%ymm3
  0.51%   │ │││  0x00007fd48c7611a5: vaddps %ymm1,%ymm0,%ymm1
          │ │││  0x00007fd48c7611a9: vcmpneqps %ymm0,%ymm0,%ymm0
          │ │││  0x00007fd48c7611ae: vpor   %ymm3,%ymm0,%ymm0
  0.24%   │ │││  0x00007fd48c7611b2: lea    (%r12,%rbx,8),%rsi
  0.02%   │ │││  0x00007fd48c7611b6: lea    (%r12,%r11,8),%rdx
          │ │││  0x00007fd48c7611ba: mov    %r9d,%r10d
  0.04%   │ │││  0x00007fd48c7611bd: add    $0xffffffe8,%r10d
  0.04%   │ │││  0x00007fd48c7611c1: cmp    %r10d,%r9d
  0.02%   │ │││  0x00007fd48c7611c4: mov    $0x80000000,%edi
          │ │││  0x00007fd48c7611c9: cmovl  %edi,%r10d
          │ │││  0x00007fd48c7611cd: lea    (%r12,%r8,8),%rax
  0.10%   │ │││  0x00007fd48c7611d1: vpxor  -0x88a19(%rip),%ymm0,%ymm0        # Stub::vector_all_bits_set
          │ │││                                                            ;   {external_word}
  0.14%   │ │││  0x00007fd48c7611d9: vblendvps %ymm0,%ymm1,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.26%   │ │││  0x00007fd48c7611df: vmovdqu %ymm0,0x10(%r12,%rbx,8)       ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007fd48c7611e6: cmp    $0x8,%r10d
          │ │││  0x00007fd48c7611ea: jle    0x00007fd48c76132e             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007fd48c7611f0: mov    $0x8,%r8d
  0.14%   │ │││  0x00007fd48c7611f6: data16 nopw 0x0(%rax,%rax,1)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.84%   │↗│││  0x00007fd48c761200: vmovdqu 0x10(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.18%   │││││  0x00007fd48c761207: vmovdqu 0x10(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.82%   │││││  0x00007fd48c76120e: vmovdqu 0x10(%rax,%r8,4),%ymm2        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%   │││││  0x00007fd48c761215: vcmpneqps %ymm1,%ymm1,%ymm3
  5.26%   │││││  0x00007fd48c76121a: vcmpneqps %ymm2,%ymm2,%ymm4
  1.12%   │││││  0x00007fd48c76121f: vaddps %ymm1,%ymm2,%ymm1
  0.28%   │││││  0x00007fd48c761223: vpor   %ymm3,%ymm4,%ymm2
  5.64%   │││││  0x00007fd48c761227: vpxor  -0x88a6f(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  4.14%   │││││  0x00007fd48c76122f: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  9.73%   │││││  0x00007fd48c761235: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fd48c76123c: vmovdqu 0x30(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%   │││││  0x00007fd48c761243: vmovdqu 0x30(%rdx,%r8,4),%ymm1        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.29%   │││││  0x00007fd48c76124a: vmovdqu 0x30(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.07%   │││││  0x00007fd48c761251: vcmpneqps %ymm1,%ymm1,%ymm3
  0.14%   │││││  0x00007fd48c761256: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007fd48c76125b: vaddps %ymm1,%ymm2,%ymm1
  2.29%   │││││  0x00007fd48c76125f: vpor   %ymm3,%ymm4,%ymm2
  2.13%   │││││  0x00007fd48c761263: vpxor  -0x88aab(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  0.20%   │││││  0x00007fd48c76126b: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.46%   │││││  0x00007fd48c761271: vmovdqu %ymm0,0x30(%rsi,%r8,4)        ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@22 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │││││  0x00007fd48c761278: vmovdqu 0x50(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fd48c76127f: vmovdqu 0x50(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.72%   │││││  0x00007fd48c761286: vmovdqu 0x50(%rax,%r8,4),%ymm2        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.08%   │││││  0x00007fd48c76128d: vcmpneqps %ymm1,%ymm1,%ymm3
  0.45%   │││││  0x00007fd48c761292: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007fd48c761297: vaddps %ymm1,%ymm2,%ymm1
  3.15%   │││││  0x00007fd48c76129b: vpor   %ymm3,%ymm4,%ymm2
  5.50%   │││││  0x00007fd48c76129f: vpxor  -0x88ae7(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  2.78%   │││││  0x00007fd48c7612a7: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 10.29%   │││││  0x00007fd48c7612ad: vmovdqu %ymm0,0x50(%rsi,%r8,4)        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%   │││││  0x00007fd48c7612b4: vmovdqu 0x70(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%   │││││  0x00007fd48c7612bb: vmovdqu 0x70(%rdx,%r8,4),%ymm1        ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.73%   │││││  0x00007fd48c7612c2: vmovdqu 0x70(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.48%   │││││  0x00007fd48c7612c9: vcmpneqps %ymm1,%ymm1,%ymm3
  0.16%   │││││  0x00007fd48c7612ce: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007fd48c7612d3: vaddps %ymm1,%ymm2,%ymm1
  1.58%   │││││  0x00007fd48c7612d7: vpor   %ymm3,%ymm4,%ymm2
  2.58%   │││││  0x00007fd48c7612db: vpxor  -0x88b23(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  0.26%   │││││  0x00007fd48c7612e3: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.54%   │││││  0x00007fd48c7612e9: vmovdqu %ymm0,0x70(%rsi,%r8,4)        ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007fd48c7612f0: add    $0x20,%r8d
          │││││  0x00007fd48c7612f4: cmp    %r10d,%r8d
          │╰│││  0x00007fd48c7612f7: jl     0x00007fd48c761200
  0.02%   │ │││  0x00007fd48c7612fd: cmp    %r9d,%r8d
  0.06%   │ ╰││  0x00007fd48c761300: jl     0x00007fd48c7610dc
          │  ╰│  0x00007fd48c761306: jmpq   0x00007fd48c761121
          ↘   │  0x00007fd48c76130b: mov    %rcx,0x40(%rsp)
              ╰  0x00007fd48c761310: jmpq   0x00007fd48c761126             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 0x00007fd48c761315: mov    $0xffffff76,%esi               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@18 (line 1140)
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@1 (line 1069)
....................................................................................................
 96.53%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.53%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 215 (541 bytes) 
  2.07%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.49%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 212 (68 bytes) 
  0.20%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%         interpreter  new  187 new  (20 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.24%  <...other 12 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.53%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 215 
  2.76%   [kernel.kallsyms]  [unknown] 
  0.49%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 212 
  0.04%         interpreter  new  187 new  
  0.02%           libjvm.so  _ZN2os5Posix24supports_monotonic_clockEv 
  0.02%        libc-2.23.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.02%           libjvm.so  _ZN7Monitor28lock_without_safepoint_checkEv 
  0.02%           libjvm.so  _ZNK6vframe6senderEv 
  0.02%           libjvm.so  _ZNK17ObjArrayAllocator10initializeEP8HeapWord 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%           libjvm.so  _ZN5Klass8set_nameEP6Symbol 
  0.02%           libjvm.so  _ZN4UTF813is_legal_utf8EPKhib 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.02%                  c2
  2.76%   [kernel.kallsyms]
  0.14%           libjvm.so
  0.04%         interpreter
  0.02%        libc-2.23.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 59517 total address lines.
Perf output processed (skipped 6.505 seconds):
 Column 1: cycles (4996 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 213 (548 bytes) 

                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                                                                           ;   {poll_return}
                 0x00007f3d4c75fc5a: retq                                  ;*synchronization entry
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@-1 (line 141)
                 0x00007f3d4c75fc5b: nop                                   ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%  ↗  ↗    0x00007f3d4c75fc5c: vmovdqu 0x10(%rdx,%r8,4),%ymm0        ;*invokevirtual verticalSumPanamaArrayNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.28%  │  │    0x00007f3d4c75fc63: vmovdqu 0x10(%rax,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%  │  │    0x00007f3d4c75fc6a: vmovdqu 0x10(%rsi,%r8,4),%ymm2
  0.04%  │  │    0x00007f3d4c75fc71: vcmpneqps %ymm0,%ymm0,%ymm3
  0.20%  │  │    0x00007f3d4c75fc76: vaddps %ymm0,%ymm1,%ymm0
  0.18%  │  │    0x00007f3d4c75fc7a: vcmpneqps %ymm1,%ymm1,%ymm1
         │  │    0x00007f3d4c75fc7f: vpor   %ymm3,%ymm1,%ymm1
  0.58%  │  │    0x00007f3d4c75fc83: vpxor  -0x874cb(%rip),%ymm1,%ymm1        # Stub::vector_all_bits_set
         │  │                                                              ;   {external_word}
  0.14%  │  │    0x00007f3d4c75fc8b: vblendvps %ymm1,%ymm0,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.12%  │  │    0x00007f3d4c75fc91: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │  │    0x00007f3d4c75fc98: add    $0x8,%r8d
         │  │    0x00007f3d4c75fc9c: cmp    %r9d,%r8d                      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ╰  │    0x00007f3d4c75fc9f: jl     0x00007f3d4c75fc5c             ;*new {reexecute=0 rethrow=0 return_oop=0}
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@0
            │                                                              ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%     │↗   0x00007f3d4c75fca1: mov    %rcx,0x40(%rsp)
  0.08%     ││↗  0x00007f3d4c75fca6: mov    %rbx,%rdx
            │││  0x00007f3d4c75fca9: shl    $0x3,%rdx
            │││  0x00007f3d4c75fcad: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%     │││  0x00007f3d4c75fcb1: data16 xchg %ax,%ax
  0.12%     │││  0x00007f3d4c75fcb4: vzeroupper 
  0.18%     │││  0x00007f3d4c75fcb7: callq  0x00007f3d4c6bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
            │││                                                            ;   {optimized virtual_call}
  0.10%     │││  0x00007f3d4c75fcbc: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f3d4c75fcc1: movzbl 0x94(%rcx),%r10d               ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@30 (line 88)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%     │││  0x00007f3d4c75fcc9: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%     │││  0x00007f3d4c75fcd0: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
            │││  0x00007f3d4c75fcd4: test   %eax,(%r11)                    ;   {poll}
            │││  0x00007f3d4c75fcd7: test   %r10d,%r10d
            │││  0x00007f3d4c75fcda: jne    0x00007f3d4c75fc23
  0.04%     │││  0x00007f3d4c75fce0: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%     │││  0x00007f3d4c75fce5: mov    0xc(%r10),%r9d                 ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f3d4c75fce9: mov    0x20(%r10),%ebx                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
            │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f3d4c75fced: test   %r9d,%r9d
          ╭ │││  0x00007f3d4c75fcf0: jle    0x00007f3d4c75fe8b             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%   │ │││  0x00007f3d4c75fcf6: mov    0x18(%r10),%r8d                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%   │ │││  0x00007f3d4c75fcfa: vmovdqu 0x10(%r12,%r8,8),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││                                                            ; implicit exception: dispatches to 0x00007f3d4c75ff05
          │ │││  0x00007f3d4c75fd01: mov    0x1c(%r10),%r11d               ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f3d4c75fd05: vmovdqu 0x10(%r12,%r11,8),%ymm1       ; implicit exception: dispatches to 0x00007f3d4c75ff05
  0.50%   │ │││  0x00007f3d4c75fd0c: vmovdqu 0x10(%r12,%rbx,8),%ymm2       ; implicit exception: dispatches to 0x00007f3d4c75ff05
  0.12%   │ │││  0x00007f3d4c75fd13: cmp    $0x7ffffff8,%r9d
          │ │││  0x00007f3d4c75fd1a: jg     0x00007f3d4c75fe95
          │ │││  0x00007f3d4c75fd20: vcmpneqps %ymm1,%ymm1,%ymm3
  0.74%   │ │││  0x00007f3d4c75fd25: vaddps %ymm1,%ymm0,%ymm1
          │ │││  0x00007f3d4c75fd29: vcmpneqps %ymm0,%ymm0,%ymm0
          │ │││  0x00007f3d4c75fd2e: vpor   %ymm3,%ymm0,%ymm0
  0.22%   │ │││  0x00007f3d4c75fd32: lea    (%r12,%rbx,8),%rsi
  0.02%   │ │││  0x00007f3d4c75fd36: lea    (%r12,%r11,8),%rdx
          │ │││  0x00007f3d4c75fd3a: mov    %r9d,%r10d
          │ │││  0x00007f3d4c75fd3d: add    $0xffffffe8,%r10d
  0.04%   │ │││  0x00007f3d4c75fd41: cmp    %r10d,%r9d
  0.08%   │ │││  0x00007f3d4c75fd44: mov    $0x80000000,%edi
          │ │││  0x00007f3d4c75fd49: cmovl  %edi,%r10d
  0.02%   │ │││  0x00007f3d4c75fd4d: lea    (%r12,%r8,8),%rax
  0.10%   │ │││  0x00007f3d4c75fd51: vpxor  -0x87599(%rip),%ymm0,%ymm0        # Stub::vector_all_bits_set
          │ │││                                                            ;   {external_word}
  0.12%   │ │││  0x00007f3d4c75fd59: vblendvps %ymm0,%ymm1,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.26%   │ │││  0x00007f3d4c75fd5f: vmovdqu %ymm0,0x10(%r12,%rbx,8)       ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f3d4c75fd66: cmp    $0x8,%r10d
          │ │││  0x00007f3d4c75fd6a: jle    0x00007f3d4c75feae             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f3d4c75fd70: mov    $0x8,%r8d
  0.04%   │ │││  0x00007f3d4c75fd76: data16 nopw 0x0(%rax,%rax,1)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.96%   │↗│││  0x00007f3d4c75fd80: vmovdqu 0x10(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.92%   │││││  0x00007f3d4c75fd87: vmovdqu 0x10(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.10%   │││││  0x00007f3d4c75fd8e: vmovdqu 0x10(%rax,%r8,4),%ymm2        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.14%   │││││  0x00007f3d4c75fd95: vcmpneqps %ymm1,%ymm1,%ymm3
  4.76%   │││││  0x00007f3d4c75fd9a: vcmpneqps %ymm2,%ymm2,%ymm4
  0.94%   │││││  0x00007f3d4c75fd9f: vaddps %ymm1,%ymm2,%ymm1
  0.12%   │││││  0x00007f3d4c75fda3: vpor   %ymm3,%ymm4,%ymm2
  6.71%   │││││  0x00007f3d4c75fda7: vpxor  -0x875ef(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  4.82%   │││││  0x00007f3d4c75fdaf: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 10.57%   │││││  0x00007f3d4c75fdb5: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │││││  0x00007f3d4c75fdbc: vmovdqu 0x30(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │││││  0x00007f3d4c75fdc3: vmovdqu 0x30(%rdx,%r8,4),%ymm1        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.16%   │││││  0x00007f3d4c75fdca: vmovdqu 0x30(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.88%   │││││  0x00007f3d4c75fdd1: vcmpneqps %ymm1,%ymm1,%ymm3
          │││││  0x00007f3d4c75fdd6: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007f3d4c75fddb: vaddps %ymm1,%ymm2,%ymm1
  2.42%   │││││  0x00007f3d4c75fddf: vpor   %ymm3,%ymm4,%ymm2
  2.34%   │││││  0x00007f3d4c75fde3: vpxor  -0x8762b(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  0.06%   │││││  0x00007f3d4c75fdeb: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.59%   │││││  0x00007f3d4c75fdf1: vmovdqu %ymm0,0x30(%rsi,%r8,4)        ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@22 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f3d4c75fdf8: vmovdqu 0x50(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f3d4c75fdff: vmovdqu 0x50(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.62%   │││││  0x00007f3d4c75fe06: vmovdqu 0x50(%rax,%r8,4),%ymm2        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.16%   │││││  0x00007f3d4c75fe0d: vcmpneqps %ymm1,%ymm1,%ymm3
  0.30%   │││││  0x00007f3d4c75fe12: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007f3d4c75fe17: vaddps %ymm1,%ymm2,%ymm1
  2.92%   │││││  0x00007f3d4c75fe1b: vpor   %ymm3,%ymm4,%ymm2
  5.68%   │││││  0x00007f3d4c75fe1f: vpxor  -0x87667(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  3.16%   │││││  0x00007f3d4c75fe27: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 10.71%   │││││  0x00007f3d4c75fe2d: vmovdqu %ymm0,0x50(%rsi,%r8,4)        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │││││  0x00007f3d4c75fe34: vmovdqu 0x70(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f3d4c75fe3b: vmovdqu 0x70(%rdx,%r8,4),%ymm1        ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.60%   │││││  0x00007f3d4c75fe42: vmovdqu 0x70(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.22%   │││││  0x00007f3d4c75fe49: vcmpneqps %ymm1,%ymm1,%ymm3
  0.02%   │││││  0x00007f3d4c75fe4e: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007f3d4c75fe53: vaddps %ymm1,%ymm2,%ymm1
  1.98%   │││││  0x00007f3d4c75fe57: vpor   %ymm3,%ymm4,%ymm2
  2.74%   │││││  0x00007f3d4c75fe5b: vpxor  -0x876a3(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  0.30%   │││││  0x00007f3d4c75fe63: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.61%   │││││  0x00007f3d4c75fe69: vmovdqu %ymm0,0x70(%rsi,%r8,4)        ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f3d4c75fe70: add    $0x20,%r8d
  0.02%   │││││  0x00007f3d4c75fe74: cmp    %r10d,%r8d
          │╰│││  0x00007f3d4c75fe77: jl     0x00007f3d4c75fd80
  0.06%   │ │││  0x00007f3d4c75fe7d: cmp    %r9d,%r8d
  0.22%   │ ╰││  0x00007f3d4c75fe80: jl     0x00007f3d4c75fc5c
          │  ╰│  0x00007f3d4c75fe86: jmpq   0x00007f3d4c75fca1
          ↘   │  0x00007f3d4c75fe8b: mov    %rcx,0x40(%rsp)
              ╰  0x00007f3d4c75fe90: jmpq   0x00007f3d4c75fca6             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 0x00007f3d4c75fe95: mov    $0xffffff76,%esi               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@18 (line 1140)
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@1 (line 1069)
....................................................................................................
 97.64%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.64%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 213 (548 bytes) 
  1.18%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.62%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 210 (68 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm (17 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%         interpreter  lstore_3  66 lstore_3  (0 bytes) 
  0.02%         interpreter  astore_1  76 astore_1  (0 bytes) 
  0.02%         interpreter  return  177 return  (0 bytes) 
  0.12%  <...other 6 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.64%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 213 
  1.48%   [kernel.kallsyms]  [unknown] 
  0.62%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 210 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%           libjvm.so  _ZN21ThreadStateTransition22transition_from_nativeEP10JavaThread15JavaThreadState.constprop.178 
  0.02%         interpreter  astore_1  76 astore_1  
  0.02%         interpreter  fast_iload  224 fast_iload  
  0.02%           libjvm.so  _ZN20SafepointSynchronize5beginEv 
  0.02%           libjvm.so  _ZN10Dictionary4findEjP6Symbol6Handle 
  0.02%         interpreter  getfield  180 getfield  
  0.02%         interpreter  return  177 return  
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  0.02%         interpreter  lstore_3  66 lstore_3  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 98.26%                  c2
  1.48%   [kernel.kallsyms]
  0.14%         interpreter
  0.10%           libjvm.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 59792 total address lines.
Perf output processed (skipped 6.639 seconds):
 Column 1: cycles (5019 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 215 (548 bytes) 

                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                                                                           ;   {poll_return}
                 0x00007f54b876105a: retq                                  ;*synchronization entry
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@-1 (line 141)
                 0x00007f54b876105b: nop                                   ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%  ↗  ↗    0x00007f54b876105c: vmovdqu 0x10(%rdx,%r8,4),%ymm0        ;*invokevirtual verticalSumPanamaArrayNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.30%  │  │    0x00007f54b8761063: vmovdqu 0x10(%rax,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%  │  │    0x00007f54b876106a: vmovdqu 0x10(%rsi,%r8,4),%ymm2
  0.06%  │  │    0x00007f54b8761071: vcmpneqps %ymm0,%ymm0,%ymm3
  0.42%  │  │    0x00007f54b8761076: vaddps %ymm0,%ymm1,%ymm0
  0.26%  │  │    0x00007f54b876107a: vcmpneqps %ymm1,%ymm1,%ymm1
         │  │    0x00007f54b876107f: vpor   %ymm3,%ymm1,%ymm1
  0.40%  │  │    0x00007f54b8761083: vpxor  -0x888cb(%rip),%ymm1,%ymm1        # Stub::vector_all_bits_set
         │  │                                                              ;   {external_word}
  0.06%  │  │    0x00007f54b876108b: vblendvps %ymm1,%ymm0,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.14%  │  │    0x00007f54b8761091: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │  │    0x00007f54b8761098: add    $0x8,%r8d
         │  │    0x00007f54b876109c: cmp    %r9d,%r8d                      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ╰  │    0x00007f54b876109f: jl     0x00007f54b876105c             ;*new {reexecute=0 rethrow=0 return_oop=0}
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@0
            │                                                              ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │↗   0x00007f54b87610a1: mov    %rcx,0x40(%rsp)
  0.12%     ││↗  0x00007f54b87610a6: mov    %rbx,%rdx
            │││  0x00007f54b87610a9: shl    $0x3,%rdx
            │││  0x00007f54b87610ad: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%     │││  0x00007f54b87610b1: data16 xchg %ax,%ax
  0.18%     │││  0x00007f54b87610b4: vzeroupper 
  0.14%     │││  0x00007f54b87610b7: callq  0x00007f54b86bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
            │││                                                            ;   {optimized virtual_call}
  0.08%     │││  0x00007f54b87610bc: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f54b87610c1: movzbl 0x94(%rcx),%r10d               ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@30 (line 88)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │││  0x00007f54b87610c9: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.10%     │││  0x00007f54b87610d0: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
            │││  0x00007f54b87610d4: test   %eax,(%r11)                    ;   {poll}
            │││  0x00007f54b87610d7: test   %r10d,%r10d
            │││  0x00007f54b87610da: jne    0x00007f54b8761023
  0.06%     │││  0x00007f54b87610e0: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%     │││  0x00007f54b87610e5: mov    0xc(%r10),%r9d                 ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f54b87610e9: mov    0x20(%r10),%ebx                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
            │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f54b87610ed: test   %r9d,%r9d
          ╭ │││  0x00007f54b87610f0: jle    0x00007f54b876128b             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%   │ │││  0x00007f54b87610f6: mov    0x18(%r10),%r8d                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.12%   │ │││  0x00007f54b87610fa: vmovdqu 0x10(%r12,%r8,8),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││                                                            ; implicit exception: dispatches to 0x00007f54b8761305
          │ │││  0x00007f54b8761101: mov    0x1c(%r10),%r11d               ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f54b8761105: vmovdqu 0x10(%r12,%r11,8),%ymm1       ; implicit exception: dispatches to 0x00007f54b8761305
  0.42%   │ │││  0x00007f54b876110c: vmovdqu 0x10(%r12,%rbx,8),%ymm2       ; implicit exception: dispatches to 0x00007f54b8761305
  0.08%   │ │││  0x00007f54b8761113: cmp    $0x7ffffff8,%r9d
          │ │││  0x00007f54b876111a: jg     0x00007f54b8761295
          │ │││  0x00007f54b8761120: vcmpneqps %ymm1,%ymm1,%ymm3
  0.78%   │ │││  0x00007f54b8761125: vaddps %ymm1,%ymm0,%ymm1
          │ │││  0x00007f54b8761129: vcmpneqps %ymm0,%ymm0,%ymm0
  0.02%   │ │││  0x00007f54b876112e: vpor   %ymm3,%ymm0,%ymm0
  0.34%   │ │││  0x00007f54b8761132: lea    (%r12,%rbx,8),%rsi
  0.06%   │ │││  0x00007f54b8761136: lea    (%r12,%r11,8),%rdx
          │ │││  0x00007f54b876113a: mov    %r9d,%r10d
          │ │││  0x00007f54b876113d: add    $0xffffffe8,%r10d
  0.02%   │ │││  0x00007f54b8761141: cmp    %r10d,%r9d
  0.04%   │ │││  0x00007f54b8761144: mov    $0x80000000,%edi
          │ │││  0x00007f54b8761149: cmovl  %edi,%r10d
          │ │││  0x00007f54b876114d: lea    (%r12,%r8,8),%rax
  0.12%   │ │││  0x00007f54b8761151: vpxor  -0x88999(%rip),%ymm0,%ymm0        # Stub::vector_all_bits_set
          │ │││                                                            ;   {external_word}
  0.08%   │ │││  0x00007f54b8761159: vblendvps %ymm0,%ymm1,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.24%   │ │││  0x00007f54b876115f: vmovdqu %ymm0,0x10(%r12,%rbx,8)       ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f54b8761166: cmp    $0x8,%r10d
          │ │││  0x00007f54b876116a: jle    0x00007f54b87612ae             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f54b8761170: mov    $0x8,%r8d
  0.14%   │ │││  0x00007f54b8761176: data16 nopw 0x0(%rax,%rax,1)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.15%   │↗│││  0x00007f54b8761180: vmovdqu 0x10(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.14%   │││││  0x00007f54b8761187: vmovdqu 0x10(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.51%   │││││  0x00007f54b876118e: vmovdqu 0x10(%rax,%r8,4),%ymm2        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.12%   │││││  0x00007f54b8761195: vcmpneqps %ymm1,%ymm1,%ymm3
  4.78%   │││││  0x00007f54b876119a: vcmpneqps %ymm2,%ymm2,%ymm4
  1.08%   │││││  0x00007f54b876119f: vaddps %ymm1,%ymm2,%ymm1
  0.22%   │││││  0x00007f54b87611a3: vpor   %ymm3,%ymm4,%ymm2
  5.54%   │││││  0x00007f54b87611a7: vpxor  -0x889ef(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  3.77%   │││││  0x00007f54b87611af: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 10.32%   │││││  0x00007f54b87611b5: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f54b87611bc: vmovdqu 0x30(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f54b87611c3: vmovdqu 0x30(%rdx,%r8,4),%ymm1        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.01%   │││││  0x00007f54b87611ca: vmovdqu 0x30(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.51%   │││││  0x00007f54b87611d1: vcmpneqps %ymm1,%ymm1,%ymm3
  0.18%   │││││  0x00007f54b87611d6: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007f54b87611db: vaddps %ymm1,%ymm2,%ymm1
  2.17%   │││││  0x00007f54b87611df: vpor   %ymm3,%ymm4,%ymm2
  2.23%   │││││  0x00007f54b87611e3: vpxor  -0x88a2b(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  0.14%   │││││  0x00007f54b87611eb: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.63%   │││││  0x00007f54b87611f1: vmovdqu %ymm0,0x30(%rsi,%r8,4)        ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@22 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f54b87611f8: vmovdqu 0x50(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f54b87611ff: vmovdqu 0x50(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.97%   │││││  0x00007f54b8761206: vmovdqu 0x50(%rax,%r8,4),%ymm2        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.10%   │││││  0x00007f54b876120d: vcmpneqps %ymm1,%ymm1,%ymm3
  0.44%   │││││  0x00007f54b8761212: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007f54b8761217: vaddps %ymm1,%ymm2,%ymm1
  3.55%   │││││  0x00007f54b876121b: vpor   %ymm3,%ymm4,%ymm2
  5.26%   │││││  0x00007f54b876121f: vpxor  -0x88a67(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  3.35%   │││││  0x00007f54b8761227: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 10.26%   │││││  0x00007f54b876122d: vmovdqu %ymm0,0x50(%rsi,%r8,4)        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f54b8761234: vmovdqu 0x70(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f54b876123b: vmovdqu 0x70(%rdx,%r8,4),%ymm1        ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.51%   │││││  0x00007f54b8761242: vmovdqu 0x70(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.29%   │││││  0x00007f54b8761249: vcmpneqps %ymm1,%ymm1,%ymm3
  0.06%   │││││  0x00007f54b876124e: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007f54b8761253: vaddps %ymm1,%ymm2,%ymm1
  1.95%   │││││  0x00007f54b8761257: vpor   %ymm3,%ymm4,%ymm2
  2.53%   │││││  0x00007f54b876125b: vpxor  -0x88aa3(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  0.20%   │││││  0x00007f54b8761263: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.48%   │││││  0x00007f54b8761269: vmovdqu %ymm0,0x70(%rsi,%r8,4)        ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │││││  0x00007f54b8761270: add    $0x20,%r8d
          │││││  0x00007f54b8761274: cmp    %r10d,%r8d
          │╰│││  0x00007f54b8761277: jl     0x00007f54b8761180
  0.02%   │ │││  0x00007f54b876127d: cmp    %r9d,%r8d
  0.06%   │ ╰││  0x00007f54b8761280: jl     0x00007f54b876105c
          │  ╰│  0x00007f54b8761286: jmpq   0x00007f54b87610a1
          ↘   │  0x00007f54b876128b: mov    %rcx,0x40(%rsp)
              ╰  0x00007f54b8761290: jmpq   0x00007f54b87610a6             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 0x00007f54b8761295: mov    $0xffffff76,%esi               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@18 (line 1140)
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@1 (line 1069)
....................................................................................................
 96.61%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.61%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 215 (548 bytes) 
  1.75%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.64%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 212 (68 bytes) 
  0.16%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (27 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (1 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.32%  <...other 16 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.61%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 215 
  2.59%   [kernel.kallsyms]  [unknown] 
  0.64%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 212 
  0.02%           libjvm.so  _ZN6Thread10muxAcquireEPVlPKc 
  0.02%           libjvm.so  _ZN2os15elapsed_counterEv 
  0.02%           libjvm.so  _ZNK13WatcherThread5sleepEv 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN11StringTable6internE6HandlePKtiP6Thread 
  0.02%        libc-2.23.so  pthread_mutex_unlock 
  0.02%         interpreter  new  187 new  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.25%                  c2
  2.59%   [kernel.kallsyms]
  0.08%           libjvm.so
  0.04%         interpreter
  0.02%        libc-2.23.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.20
# VM version: JDK 12-internal, VM 12-internal+0-adhoc.root.dev
# VM invoker: /home/richard/workspace/dev/build/linux-x86_64-normal-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:TypeProfileLevel=111 -XX:-TieredCompilation -Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=0
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckPessimistic
# Parameters: (probabilityOfNaN = 0.01, size = 1024)

# Run progress: 96.30% complete, ETA 00:00:35
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3776.201 ops/ms
# Warmup Iteration   2: 4565.970 ops/ms
# Warmup Iteration   3: 4096.107 ops/ms
# Warmup Iteration   4: 4167.994 ops/ms
# Warmup Iteration   5: 4339.458 ops/ms
Iteration   1: 4439.114 ops/ms
Iteration   2: 4353.382 ops/ms
Iteration   3: 4178.135 ops/ms
Iteration   4: 3998.327 ops/ms
Iteration   5: 3926.546 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 97.53% complete, ETA 00:00:23
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3567.133 ops/ms
# Warmup Iteration   2: 4557.494 ops/ms
# Warmup Iteration   3: 3974.214 ops/ms
# Warmup Iteration   4: 4024.883 ops/ms
# Warmup Iteration   5: 3559.969 ops/ms
Iteration   1: 3875.219 ops/ms
Iteration   2: 4172.894 ops/ms
Iteration   3: 4007.307 ops/ms
Iteration   4: 3900.449 ops/ms
Iteration   5: 3851.331 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 98.77% complete, ETA 00:00:11
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3653.743 ops/ms
# Warmup Iteration   2: 4479.771 ops/ms
# Warmup Iteration   3: 3833.412 ops/ms
# Warmup Iteration   4: 3958.673 ops/ms
# Warmup Iteration   5: 3764.281 ops/ms
Iteration   1: 3783.828 ops/ms
Iteration   2: 3882.748 ops/ms
Iteration   3: 4054.564 ops/ms
Iteration   4: 3955.525 ops/ms
Iteration   5: 4371.382 ops/ms
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckPessimistic":
  4050.050 ±(99.9%) 220.974 ops/ms [Average]
  (min, avg, max) = (3783.828, 4050.050, 4439.114), stdev = 206.699
  CI (99.9%): [3829.076, 4271.024] (assumes normal distribution)

Secondary result "com.openkappa.panama.vectorbenchmarks.VerticalSum.verticalSumPanamaArrayNaNCheckPessimistic:·asm":
PrintAssembly processed: 59662 total address lines.
Perf output processed (skipped 6.612 seconds):
 Column 1: cycles (5076 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 213 (548 bytes) 

                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                                                                           ;   {poll_return}
                 0x00007f7cbc760cda: retq                                  ;*synchronization entry
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@-1 (line 141)
                 0x00007f7cbc760cdb: nop                                   ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%  ↗  ↗    0x00007f7cbc760cdc: vmovdqu 0x10(%rdx,%r8,4),%ymm0        ;*invokevirtual verticalSumPanamaArrayNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.28%  │  │    0x00007f7cbc760ce3: vmovdqu 0x10(%rax,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.10%  │  │    0x00007f7cbc760cea: vmovdqu 0x10(%rsi,%r8,4),%ymm2
  0.04%  │  │    0x00007f7cbc760cf1: vcmpneqps %ymm0,%ymm0,%ymm3
  0.53%  │  │    0x00007f7cbc760cf6: vaddps %ymm0,%ymm1,%ymm0
  0.16%  │  │    0x00007f7cbc760cfa: vcmpneqps %ymm1,%ymm1,%ymm1
         │  │    0x00007f7cbc760cff: vpor   %ymm3,%ymm1,%ymm1
  0.45%  │  │    0x00007f7cbc760d03: vpxor  -0x8854b(%rip),%ymm1,%ymm1        # Stub::vector_all_bits_set
         │  │                                                              ;   {external_word}
  0.18%  │  │    0x00007f7cbc760d0b: vblendvps %ymm1,%ymm0,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.26%  │  │    0x00007f7cbc760d11: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │  │    0x00007f7cbc760d18: add    $0x8,%r8d
         │  │    0x00007f7cbc760d1c: cmp    %r9d,%r8d                      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ╰  │    0x00007f7cbc760d1f: jl     0x00007f7cbc760cdc             ;*new {reexecute=0 rethrow=0 return_oop=0}
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@0
            │                                                              ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │↗   0x00007f7cbc760d21: mov    %rcx,0x40(%rsp)
  0.10%     ││↗  0x00007f7cbc760d26: mov    %rbx,%rdx
            │││  0x00007f7cbc760d29: shl    $0x3,%rdx
            │││  0x00007f7cbc760d2d: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f7cbc760d31: data16 xchg %ax,%ax
  0.08%     │││  0x00007f7cbc760d34: vzeroupper 
  0.12%     │││  0x00007f7cbc760d37: callq  0x00007f7cbc6bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
            │││                                                            ;   {optimized virtual_call}
  1.26%     │││  0x00007f7cbc760d3c: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f7cbc760d41: movzbl 0x94(%rcx),%r10d               ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@30 (line 88)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f7cbc760d49: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%     │││  0x00007f7cbc760d50: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
            │││  0x00007f7cbc760d54: test   %eax,(%r11)                    ;   {poll}
            │││  0x00007f7cbc760d57: test   %r10d,%r10d
            │││  0x00007f7cbc760d5a: jne    0x00007f7cbc760ca3
            │││  0x00007f7cbc760d60: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.10%     │││  0x00007f7cbc760d65: mov    0xc(%r10),%r9d                 ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f7cbc760d69: mov    0x20(%r10),%ebx                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
            │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f7cbc760d6d: test   %r9d,%r9d
          ╭ │││  0x00007f7cbc760d70: jle    0x00007f7cbc760f0b             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f7cbc760d76: mov    0x18(%r10),%r8d                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.10%   │ │││  0x00007f7cbc760d7a: vmovdqu 0x10(%r12,%r8,8),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││                                                            ; implicit exception: dispatches to 0x00007f7cbc760f85
          │ │││  0x00007f7cbc760d81: mov    0x1c(%r10),%r11d               ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f7cbc760d85: vmovdqu 0x10(%r12,%r11,8),%ymm1       ; implicit exception: dispatches to 0x00007f7cbc760f85
          │ │││  0x00007f7cbc760d8c: vmovdqu 0x10(%r12,%rbx,8),%ymm2       ; implicit exception: dispatches to 0x00007f7cbc760f85
  0.08%   │ │││  0x00007f7cbc760d93: cmp    $0x7ffffff8,%r9d
          │ │││  0x00007f7cbc760d9a: jg     0x00007f7cbc760f15
          │ │││  0x00007f7cbc760da0: vcmpneqps %ymm1,%ymm1,%ymm3
  0.08%   │ │││  0x00007f7cbc760da5: vaddps %ymm1,%ymm0,%ymm1
          │ │││  0x00007f7cbc760da9: vcmpneqps %ymm0,%ymm0,%ymm0
  0.16%   │ │││  0x00007f7cbc760dae: vpor   %ymm3,%ymm0,%ymm0
  0.12%   │ │││  0x00007f7cbc760db2: lea    (%r12,%rbx,8),%rsi
  0.04%   │ │││  0x00007f7cbc760db6: lea    (%r12,%r11,8),%rdx
          │ │││  0x00007f7cbc760dba: mov    %r9d,%r10d
  0.12%   │ │││  0x00007f7cbc760dbd: add    $0xffffffe8,%r10d
  0.02%   │ │││  0x00007f7cbc760dc1: cmp    %r10d,%r9d
          │ │││  0x00007f7cbc760dc4: mov    $0x80000000,%edi
          │ │││  0x00007f7cbc760dc9: cmovl  %edi,%r10d
  0.08%   │ │││  0x00007f7cbc760dcd: lea    (%r12,%r8,8),%rax
  0.06%   │ │││  0x00007f7cbc760dd1: vpxor  -0x88619(%rip),%ymm0,%ymm0        # Stub::vector_all_bits_set
          │ │││                                                            ;   {external_word}
          │ │││  0x00007f7cbc760dd9: vblendvps %ymm0,%ymm1,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.35%   │ │││  0x00007f7cbc760ddf: vmovdqu %ymm0,0x10(%r12,%rbx,8)       ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f7cbc760de6: cmp    $0x8,%r10d
          │ │││  0x00007f7cbc760dea: jle    0x00007f7cbc760f2e             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f7cbc760df0: mov    $0x8,%r8d
  0.14%   │ │││  0x00007f7cbc760df6: data16 nopw 0x0(%rax,%rax,1)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.94%   │↗│││  0x00007f7cbc760e00: vmovdqu 0x10(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.93%   │││││  0x00007f7cbc760e07: vmovdqu 0x10(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.21%   │││││  0x00007f7cbc760e0e: vmovdqu 0x10(%rax,%r8,4),%ymm2        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%   │││││  0x00007f7cbc760e15: vcmpneqps %ymm1,%ymm1,%ymm3
  4.08%   │││││  0x00007f7cbc760e1a: vcmpneqps %ymm2,%ymm2,%ymm4
  0.95%   │││││  0x00007f7cbc760e1f: vaddps %ymm1,%ymm2,%ymm1
  0.22%   │││││  0x00007f7cbc760e23: vpor   %ymm3,%ymm4,%ymm2
  5.69%   │││││  0x00007f7cbc760e27: vpxor  -0x8866f(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  3.88%   │││││  0x00007f7cbc760e2f: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 10.48%   │││││  0x00007f7cbc760e35: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f7cbc760e3c: vmovdqu 0x30(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f7cbc760e43: vmovdqu 0x30(%rdx,%r8,4),%ymm1        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.46%   │││││  0x00007f7cbc760e4a: vmovdqu 0x30(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.42%   │││││  0x00007f7cbc760e51: vcmpneqps %ymm1,%ymm1,%ymm3
          │││││  0x00007f7cbc760e56: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007f7cbc760e5b: vaddps %ymm1,%ymm2,%ymm1
  2.15%   │││││  0x00007f7cbc760e5f: vpor   %ymm3,%ymm4,%ymm2
  1.89%   │││││  0x00007f7cbc760e63: vpxor  -0x886ab(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  0.10%   │││││  0x00007f7cbc760e6b: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.05%   │││││  0x00007f7cbc760e71: vmovdqu %ymm0,0x30(%rsi,%r8,4)        ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@22 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%   │││││  0x00007f7cbc760e78: vmovdqu 0x50(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f7cbc760e7f: vmovdqu 0x50(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.36%   │││││  0x00007f7cbc760e86: vmovdqu 0x50(%rax,%r8,4),%ymm2        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.00%   │││││  0x00007f7cbc760e8d: vcmpneqps %ymm1,%ymm1,%ymm3
  0.22%   │││││  0x00007f7cbc760e92: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007f7cbc760e97: vaddps %ymm1,%ymm2,%ymm1
  2.82%   │││││  0x00007f7cbc760e9b: vpor   %ymm3,%ymm4,%ymm2
  5.52%   │││││  0x00007f7cbc760e9f: vpxor  -0x886e7(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  2.94%   │││││  0x00007f7cbc760ea7: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  9.81%   │││││  0x00007f7cbc760ead: vmovdqu %ymm0,0x50(%rsi,%r8,4)        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f7cbc760eb4: vmovdqu 0x70(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f7cbc760ebb: vmovdqu 0x70(%rdx,%r8,4),%ymm1        ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.40%   │││││  0x00007f7cbc760ec2: vmovdqu 0x70(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.29%   │││││  0x00007f7cbc760ec9: vcmpneqps %ymm1,%ymm1,%ymm3
  0.02%   │││││  0x00007f7cbc760ece: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007f7cbc760ed3: vaddps %ymm1,%ymm2,%ymm1
  1.40%   │││││  0x00007f7cbc760ed7: vpor   %ymm3,%ymm4,%ymm2
  2.54%   │││││  0x00007f7cbc760edb: vpxor  -0x88723(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  0.18%   │││││  0x00007f7cbc760ee3: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.03%   │││││  0x00007f7cbc760ee9: vmovdqu %ymm0,0x70(%rsi,%r8,4)        ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.60%   │││││  0x00007f7cbc760ef0: add    $0x20,%r8d
          │││││  0x00007f7cbc760ef4: cmp    %r10d,%r8d
          │╰│││  0x00007f7cbc760ef7: jl     0x00007f7cbc760e00
          │ │││  0x00007f7cbc760efd: cmp    %r9d,%r8d
  0.08%   │ ╰││  0x00007f7cbc760f00: jl     0x00007f7cbc760cdc
          │  ╰│  0x00007f7cbc760f06: jmpq   0x00007f7cbc760d21
          ↘   │  0x00007f7cbc760f0b: mov    %rcx,0x40(%rsp)
              ╰  0x00007f7cbc760f10: jmpq   0x00007f7cbc760d26             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 0x00007f7cbc760f15: mov    $0xffffff76,%esi               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@18 (line 1140)
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@1 (line 1069)
....................................................................................................
 93.85%  <total for region 1>

....[Hottest Regions]...............................................................................
 93.85%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 213 (548 bytes) 
  2.15%   [kernel.kallsyms]  [unknown] (0 bytes) 
  1.81%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.57%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 210 (68 bytes) 
  0.41%   [kernel.kallsyms]  [unknown] (18 bytes) 
  0.26%   [kernel.kallsyms]  [unknown] (68 bytes) 
  0.08%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZN17ResourceHashtableIPhN10decode_env14SourceFileInfoEXadL_ZNS2_4hashERKS0_EEXadL_ZNS2_6equalsES4_S4_EELj15889ELN11ResourceObj15allocation_typeE2EL10MemoryType7EED2Ev (16 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.43%  <...other 22 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 93.85%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 213 
  5.38%   [kernel.kallsyms]  [unknown] 
  0.57%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 210 
  0.04%           libjvm.so  _ZN17ResourceHashtableIPhN10decode_env14SourceFileInfoEXadL_ZNS2_4hashERKS0_EEXadL_ZNS2_6equalsES4_S4_EELj15889ELN11ResourceObj15allocation_typeE2EL10MemoryType7EED2Ev 
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%           libjvm.so  _ZN20GenericGrowableArray12raw_allocateEi 
  0.02%         interpreter  invoke return entry points  
  0.02%         interpreter  if_icmpeq  159 if_icmpeq  
  0.02%           libjvm.so  _ZNK6Method17is_not_compilableEi 
  0.02%         interpreter  aload  25 aload  
  0.02%           libjvm.so  _ZN13MallocTracker11record_freeEPv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.42%                  c2
  5.38%   [kernel.kallsyms]
  0.10%           libjvm.so
  0.08%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 59765 total address lines.
Perf output processed (skipped 6.570 seconds):
 Column 1: cycles (5111 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 215 (541 bytes) 

                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                                                                           ;   {poll_return}
                 0x00007f0d307604da: retq                                  ;*synchronization entry
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@-1 (line 141)
                 0x00007f0d307604db: nop                                   ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ↗  ↗    0x00007f0d307604dc: vmovdqu 0x10(%rdx,%r8,4),%ymm0        ;*invokevirtual verticalSumPanamaArrayNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.31%  │  │    0x00007f0d307604e3: vmovdqu 0x10(%rax,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%  │  │    0x00007f0d307604ea: vmovdqu 0x10(%rsi,%r8,4),%ymm2
  0.04%  │  │    0x00007f0d307604f1: vcmpneqps %ymm0,%ymm0,%ymm3
  0.43%  │  │    0x00007f0d307604f6: vaddps %ymm0,%ymm1,%ymm0
  0.14%  │  │    0x00007f0d307604fa: vcmpneqps %ymm1,%ymm1,%ymm1
         │  │    0x00007f0d307604ff: vpor   %ymm3,%ymm1,%ymm1
  0.45%  │  │    0x00007f0d30760503: vpxor  -0x87d4b(%rip),%ymm1,%ymm1        # Stub::vector_all_bits_set
         │  │                                                              ;   {external_word}
  0.04%  │  │    0x00007f0d3076050b: vblendvps %ymm1,%ymm0,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.96%  │  │    0x00007f0d30760511: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │  │    0x00007f0d30760518: add    $0x8,%r8d
         │  │    0x00007f0d3076051c: cmp    %r9d,%r8d                      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ╰  │    0x00007f0d3076051f: jl     0x00007f0d307604dc             ;*new {reexecute=0 rethrow=0 return_oop=0}
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@0
            │                                                              ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │↗   0x00007f0d30760521: mov    %rcx,0x40(%rsp)
  0.16%     ││↗  0x00007f0d30760526: mov    %rbx,%rdx
            │││  0x00007f0d30760529: shl    $0x3,%rdx
            │││  0x00007f0d3076052d: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │││  0x00007f0d30760531: data16 xchg %ax,%ax
  0.14%     │││  0x00007f0d30760534: vzeroupper 
  0.08%     │││  0x00007f0d30760537: callq  0x00007f0d306bf900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
            │││                                                            ;   {optimized virtual_call}
  0.12%     │││  0x00007f0d3076053c: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f0d30760541: movzbl 0x94(%rcx),%r10d               ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@30 (line 88)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │││  0x00007f0d30760549: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.10%     │││  0x00007f0d30760550: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
            │││  0x00007f0d30760554: test   %eax,(%r11)                    ;   {poll}
            │││  0x00007f0d30760557: test   %r10d,%r10d
            │││  0x00007f0d3076055a: jne    0x00007f0d307604a3
  0.02%     │││  0x00007f0d30760560: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.20%     │││  0x00007f0d30760565: mov    0xc(%r10),%r9d                 ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f0d30760569: mov    0x20(%r10),%ebx                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
            │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f0d3076056d: test   %r9d,%r9d
          ╭ │││  0x00007f0d30760570: jle    0x00007f0d3076070b             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f0d30760576: mov    0x18(%r10),%r8d                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │ │││  0x00007f0d3076057a: vmovdqu 0x10(%r12,%r8,8),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││                                                            ; implicit exception: dispatches to 0x00007f0d30760785
  0.02%   │ │││  0x00007f0d30760581: mov    0x1c(%r10),%r11d               ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f0d30760585: vmovdqu 0x10(%r12,%r11,8),%ymm1       ; implicit exception: dispatches to 0x00007f0d30760785
  0.22%   │ │││  0x00007f0d3076058c: vmovdqu 0x10(%r12,%rbx,8),%ymm2       ; implicit exception: dispatches to 0x00007f0d30760785
  0.10%   │ │││  0x00007f0d30760593: cmp    $0x7ffffff8,%r9d
          │ │││  0x00007f0d3076059a: jg     0x00007f0d30760715
          │ │││  0x00007f0d307605a0: vcmpneqps %ymm1,%ymm1,%ymm3
  0.61%   │ │││  0x00007f0d307605a5: vaddps %ymm1,%ymm0,%ymm1
          │ │││  0x00007f0d307605a9: vcmpneqps %ymm0,%ymm0,%ymm0
          │ │││  0x00007f0d307605ae: vpor   %ymm3,%ymm0,%ymm0
  0.20%   │ │││  0x00007f0d307605b2: lea    (%r12,%rbx,8),%rsi
  0.12%   │ │││  0x00007f0d307605b6: lea    (%r12,%r11,8),%rdx
          │ │││  0x00007f0d307605ba: mov    %r9d,%r10d
  0.02%   │ │││  0x00007f0d307605bd: add    $0xffffffe8,%r10d
          │ │││  0x00007f0d307605c1: cmp    %r10d,%r9d
  0.02%   │ │││  0x00007f0d307605c4: mov    $0x80000000,%edi
          │ │││  0x00007f0d307605c9: cmovl  %edi,%r10d
          │ │││  0x00007f0d307605cd: lea    (%r12,%r8,8),%rax
  0.18%   │ │││  0x00007f0d307605d1: vpxor  -0x87e19(%rip),%ymm0,%ymm0        # Stub::vector_all_bits_set
          │ │││                                                            ;   {external_word}
  0.02%   │ │││  0x00007f0d307605d9: vblendvps %ymm0,%ymm1,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.25%   │ │││  0x00007f0d307605df: vmovdqu %ymm0,0x10(%r12,%rbx,8)       ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f0d307605e6: cmp    $0x8,%r10d
          │ │││  0x00007f0d307605ea: jle    0x00007f0d3076072e             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f0d307605f0: mov    $0x8,%r8d
  0.18%   │ │││  0x00007f0d307605f6: data16 nopw 0x0(%rax,%rax,1)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.68%   │↗│││  0x00007f0d30760600: vmovdqu 0x10(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.84%   │││││  0x00007f0d30760607: vmovdqu 0x10(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.42%   │││││  0x00007f0d3076060e: vmovdqu 0x10(%rax,%r8,4),%ymm2        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.06%   │││││  0x00007f0d30760615: vcmpneqps %ymm1,%ymm1,%ymm3
  4.75%   │││││  0x00007f0d3076061a: vcmpneqps %ymm2,%ymm2,%ymm4
  0.88%   │││││  0x00007f0d3076061f: vaddps %ymm1,%ymm2,%ymm1
  0.20%   │││││  0x00007f0d30760623: vpor   %ymm3,%ymm4,%ymm2
  5.85%   │││││  0x00007f0d30760627: vpxor  -0x87e6f(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  3.64%   │││││  0x00007f0d3076062f: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 10.29%   │││││  0x00007f0d30760635: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f0d3076063c: vmovdqu 0x30(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f0d30760643: vmovdqu 0x30(%rdx,%r8,4),%ymm1        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.64%   │││││  0x00007f0d3076064a: vmovdqu 0x30(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.13%   │││││  0x00007f0d30760651: vcmpneqps %ymm1,%ymm1,%ymm3
  0.04%   │││││  0x00007f0d30760656: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007f0d3076065b: vaddps %ymm1,%ymm2,%ymm1
  1.82%   │││││  0x00007f0d3076065f: vpor   %ymm3,%ymm4,%ymm2
  2.56%   │││││  0x00007f0d30760663: vpxor  -0x87eab(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  0.06%   │││││  0x00007f0d3076066b: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.20%   │││││  0x00007f0d30760671: vmovdqu %ymm0,0x30(%rsi,%r8,4)        ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@22 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │││││  0x00007f0d30760678: vmovdqu 0x50(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f0d3076067f: vmovdqu 0x50(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.11%   │││││  0x00007f0d30760686: vmovdqu 0x50(%rax,%r8,4),%ymm2        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.04%   │││││  0x00007f0d3076068d: vcmpneqps %ymm1,%ymm1,%ymm3
  0.31%   │││││  0x00007f0d30760692: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007f0d30760697: vaddps %ymm1,%ymm2,%ymm1
  2.66%   │││││  0x00007f0d3076069b: vpor   %ymm3,%ymm4,%ymm2
  5.63%   │││││  0x00007f0d3076069f: vpxor  -0x87ee7(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  2.35%   │││││  0x00007f0d307606a7: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 10.92%   │││││  0x00007f0d307606ad: vmovdqu %ymm0,0x50(%rsi,%r8,4)        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │││││  0x00007f0d307606b4: vmovdqu 0x70(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%   │││││  0x00007f0d307606bb: vmovdqu 0x70(%rdx,%r8,4),%ymm1        ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.66%   │││││  0x00007f0d307606c2: vmovdqu 0x70(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.35%   │││││  0x00007f0d307606c9: vcmpneqps %ymm1,%ymm1,%ymm3
  0.10%   │││││  0x00007f0d307606ce: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007f0d307606d3: vaddps %ymm1,%ymm2,%ymm1
  1.57%   │││││  0x00007f0d307606d7: vpor   %ymm3,%ymm4,%ymm2
  2.80%   │││││  0x00007f0d307606db: vpxor  -0x87f23(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  0.12%   │││││  0x00007f0d307606e3: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.14%   │││││  0x00007f0d307606e9: vmovdqu %ymm0,0x70(%rsi,%r8,4)        ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.35%   │││││  0x00007f0d307606f0: add    $0x20,%r8d
          │││││  0x00007f0d307606f4: cmp    %r10d,%r8d
          │╰│││  0x00007f0d307606f7: jl     0x00007f0d30760600
  0.04%   │ │││  0x00007f0d307606fd: cmp    %r9d,%r8d
  0.08%   │ ╰││  0x00007f0d30760700: jl     0x00007f0d307604dc
          │  ╰│  0x00007f0d30760706: jmpq   0x00007f0d30760521
          ↘   │  0x00007f0d3076070b: mov    %rcx,0x40(%rsp)
              ╰  0x00007f0d30760710: jmpq   0x00007f0d30760526             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 0x00007f0d30760715: mov    $0xffffff76,%esi               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@18 (line 1140)
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@1 (line 1069)
....................................................................................................
 95.60%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.60%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 215 (541 bytes) 
  2.78%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.61%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 212 (57 bytes) 
  0.39%   [kernel.kallsyms]  [unknown] (26 bytes) 
  0.14%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.16%  <...other 8 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.60%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 215 
  3.66%   [kernel.kallsyms]  [unknown] 
  0.61%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 212 
  0.02%         interpreter  nofast_getfield  234 nofast_getfield  
  0.02%         interpreter  invoke return entry points  
  0.02%         interpreter  ifnull  198 ifnull  
  0.02%           libjvm.so  _ZN12methodHandleaSERKS_ 
  0.02%         interpreter  iload_2  28 iload_2  
  0.02%         interpreter  fast_iaccess_0  221 fast_iaccess_0  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.20%                  c2
  3.66%   [kernel.kallsyms]
  0.10%         interpreter
  0.02%           libjvm.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 60228 total address lines.
Perf output processed (skipped 6.466 seconds):
 Column 1: cycles (5087 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 219 (548 bytes) 

                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                                                                           ;   {poll_return}
                 0x00007f7cbbd023da: retq                                  ;*synchronization entry
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@-1 (line 141)
                 0x00007f7cbbd023db: nop                                   ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%  ↗  ↗    0x00007f7cbbd023dc: vmovdqu 0x10(%rdx,%r8,4),%ymm0        ;*invokevirtual verticalSumPanamaArrayNaNCheckPessimistic {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.33%  │  │    0x00007f7cbbd023e3: vmovdqu 0x10(%rax,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │  │    0x00007f7cbbd023ea: vmovdqu 0x10(%rsi,%r8,4),%ymm2
  0.04%  │  │    0x00007f7cbbd023f1: vcmpneqps %ymm0,%ymm0,%ymm3
  0.55%  │  │    0x00007f7cbbd023f6: vaddps %ymm0,%ymm1,%ymm0
  0.29%  │  │    0x00007f7cbbd023fa: vcmpneqps %ymm1,%ymm1,%ymm1
         │  │    0x00007f7cbbd023ff: vpor   %ymm3,%ymm1,%ymm1
  0.39%  │  │    0x00007f7cbbd02403: vpxor  -0x86c4b(%rip),%ymm1,%ymm1        # Stub::vector_all_bits_set
         │  │                                                              ;   {external_word}
  0.18%  │  │    0x00007f7cbbd0240b: vblendvps %ymm1,%ymm0,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.42%  │  │    0x00007f7cbbd02411: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@37 (line 89)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         │  │    0x00007f7cbbd02418: add    $0x8,%r8d
         │  │    0x00007f7cbbd0241c: cmp    %r9d,%r8d                      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
         │  │                                                              ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
         │  │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
         ╰  │    0x00007f7cbbd0241f: jl     0x00007f7cbbd023dc             ;*new {reexecute=0 rethrow=0 return_oop=0}
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@0
            │                                                              ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │                                                              ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │                                                              ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │↗   0x00007f7cbbd02421: mov    %rcx,0x40(%rsp)
  0.06%     ││↗  0x00007f7cbbd02426: mov    %rbx,%rdx
            │││  0x00007f7cbbd02429: shl    $0x3,%rdx
            │││  0x00007f7cbbd0242d: mov    (%rsp),%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │││  0x00007f7cbbd02431: data16 xchg %ax,%ax
  0.20%     │││  0x00007f7cbbd02434: vzeroupper 
  0.14%     │││  0x00007f7cbbd02437: callq  0x00007f7cbbc62900             ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@22 (line 145)
            │││                                                            ;   {optimized virtual_call}
  0.18%     │││  0x00007f7cbbd0243c: mov    0x40(%rsp),%rcx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f7cbbd02441: movzbl 0x94(%rcx),%r10d               ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@30 (line 88)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%     │││  0x00007f7cbbd02449: mov    0x108(%r15),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.10%     │││  0x00007f7cbbd02450: add    $0x1,%rbp                      ; ImmutableOopMap{rcx=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
            │││                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@35 (line 147)
            │││  0x00007f7cbbd02454: test   %eax,(%r11)                    ;   {poll}
            │││  0x00007f7cbbd02457: test   %r10d,%r10d
            │││  0x00007f7cbbd0245a: jne    0x00007f7cbbd023a3
  0.02%     │││  0x00007f7cbbd02460: mov    0x50(%rsp),%r10                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
            │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.12%     │││  0x00007f7cbbd02465: mov    0xc(%r10),%r9d                 ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@1 (line 1398)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f7cbbd02469: mov    0x20(%r10),%ebx                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
            │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
            │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
            │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
            │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
            │││  0x00007f7cbbd0246d: test   %r9d,%r9d
          ╭ │││  0x00007f7cbbd02470: jle    0x00007f7cbbd0260b             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │ │││  0x00007f7cbbd02476: mov    0x18(%r10),%r8d                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%   │ │││  0x00007f7cbbd0247a: vmovdqu 0x10(%r12,%r8,8),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││                                                            ; implicit exception: dispatches to 0x00007f7cbbd02685
          │ │││  0x00007f7cbbd02481: mov    0x1c(%r10),%r11d               ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │ │││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │ │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f7cbbd02485: vmovdqu 0x10(%r12,%r11,8),%ymm1       ; implicit exception: dispatches to 0x00007f7cbbd02685
  0.26%   │ │││  0x00007f7cbbd0248c: vmovdqu 0x10(%r12,%rbx,8),%ymm2       ; implicit exception: dispatches to 0x00007f7cbbd02685
  0.08%   │ │││  0x00007f7cbbd02493: cmp    $0x7ffffff8,%r9d
          │ │││  0x00007f7cbbd0249a: jg     0x00007f7cbbd02615
          │ │││  0x00007f7cbbd024a0: vcmpneqps %ymm1,%ymm1,%ymm3
  0.75%   │ │││  0x00007f7cbbd024a5: vaddps %ymm1,%ymm0,%ymm1
          │ │││  0x00007f7cbbd024a9: vcmpneqps %ymm0,%ymm0,%ymm0
  0.02%   │ │││  0x00007f7cbbd024ae: vpor   %ymm3,%ymm0,%ymm0
  0.20%   │ │││  0x00007f7cbbd024b2: lea    (%r12,%rbx,8),%rsi
  0.04%   │ │││  0x00007f7cbbd024b6: lea    (%r12,%r11,8),%rdx
          │ │││  0x00007f7cbbd024ba: mov    %r9d,%r10d
          │ │││  0x00007f7cbbd024bd: add    $0xffffffe8,%r10d
  0.04%   │ │││  0x00007f7cbbd024c1: cmp    %r10d,%r9d
  0.04%   │ │││  0x00007f7cbbd024c4: mov    $0x80000000,%edi
          │ │││  0x00007f7cbbd024c9: cmovl  %edi,%r10d
          │ │││  0x00007f7cbbd024cd: lea    (%r12,%r8,8),%rax
  0.24%   │ │││  0x00007f7cbbd024d1: vpxor  -0x86d19(%rip),%ymm0,%ymm0        # Stub::vector_all_bits_set
          │ │││                                                            ;   {external_word}
  0.08%   │ │││  0x00007f7cbbd024d9: vblendvps %ymm0,%ymm1,%ymm2,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.26%   │ │││  0x00007f7cbbd024df: vmovdqu %ymm0,0x10(%r12,%rbx,8)       ;*invokevirtual notEqual {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f7cbbd024e6: cmp    $0x8,%r10d
          │ │││  0x00007f7cbbd024ea: jle    0x00007f7cbbd0262e             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │ │││  0x00007f7cbbd024f0: mov    $0x8,%r8d
  0.10%   │ │││  0x00007f7cbbd024f6: data16 nopw 0x0(%rax,%rax,1)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │ │││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │ │││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.61%   │↗│││  0x00007f7cbbd02500: vmovdqu 0x10(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.88%   │││││  0x00007f7cbbd02507: vmovdqu 0x10(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@30 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  3.01%   │││││  0x00007f7cbbd0250e: vmovdqu 0x10(%rax,%r8,4),%ymm2        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.08%   │││││  0x00007f7cbbd02515: vcmpneqps %ymm1,%ymm1,%ymm3
  4.34%   │││││  0x00007f7cbbd0251a: vcmpneqps %ymm2,%ymm2,%ymm4
  0.86%   │││││  0x00007f7cbbd0251f: vaddps %ymm1,%ymm2,%ymm1
  0.14%   │││││  0x00007f7cbbd02523: vpor   %ymm3,%ymm4,%ymm2
  6.07%   │││││  0x00007f7cbbd02527: vpxor  -0x86d6f(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  4.17%   │││││  0x00007f7cbbd0252f: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  9.95%   │││││  0x00007f7cbbd02535: vmovdqu %ymm0,0x10(%rsi,%r8,4)        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f7cbbd0253c: vmovdqu 0x30(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │││││  0x00007f7cbbd02543: vmovdqu 0x30(%rdx,%r8,4),%ymm1        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@27 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.06%   │││││  0x00007f7cbbd0254a: vmovdqu 0x30(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.40%   │││││  0x00007f7cbbd02551: vcmpneqps %ymm1,%ymm1,%ymm3
  0.08%   │││││  0x00007f7cbbd02556: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007f7cbbd0255b: vaddps %ymm1,%ymm2,%ymm1
  1.79%   │││││  0x00007f7cbbd0255f: vpor   %ymm3,%ymm4,%ymm2
  2.42%   │││││  0x00007f7cbbd02563: vpxor  -0x86dab(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  0.12%   │││││  0x00007f7cbbd0256b: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.13%   │││││  0x00007f7cbbd02571: vmovdqu %ymm0,0x30(%rsi,%r8,4)        ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@22 (line 1163)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Mask::or@2 (line 1069)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@47 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.02%   │││││  0x00007f7cbbd02578: vmovdqu 0x50(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
          │││││  0x00007f7cbbd0257f: vmovdqu 0x50(%rdx,%r8,4),%ymm1        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@31 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.44%   │││││  0x00007f7cbbd02586: vmovdqu 0x50(%rax,%r8,4),%ymm2        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.10%   │││││  0x00007f7cbbd0258d: vcmpneqps %ymm1,%ymm1,%ymm3
  0.24%   │││││  0x00007f7cbbd02592: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007f7cbbd02597: vaddps %ymm1,%ymm2,%ymm1
  3.56%   │││││  0x00007f7cbbd0259b: vpor   %ymm3,%ymm4,%ymm2
  6.15%   │││││  0x00007f7cbbd0259f: vpxor  -0x86de7(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  2.48%   │││││  0x00007f7cbbd025a7: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
 10.30%   │││││  0x00007f7cbbd025ad: vmovdqu %ymm0,0x50(%rsi,%r8,4)        ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@28 (line 871)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::notEqual@2 (line 39)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@44 (line 89)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%   │││││  0x00007f7cbbd025b4: vmovdqu 0x70(%rsi,%r8,4),%ymm0        ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  0.04%   │││││  0x00007f7cbbd025bb: vmovdqu 0x70(%rdx,%r8,4),%ymm1        ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::&lt;init&gt;@1
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species$$Lambda$51/0x000000084009f840::get$Lambda@5
          │││││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@38 (line 1400)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.69%   │││││  0x00007f7cbbd025c2: vmovdqu 0x70(%rax,%r8,4),%ymm2        ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@11 (line 1399)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector$Float256Species::fromArray@3 (line 1238)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  1.75%   │││││  0x00007f7cbbd025c9: vcmpneqps %ymm1,%ymm1,%ymm3
  0.06%   │││││  0x00007f7cbbd025ce: vcmpneqps %ymm2,%ymm2,%ymm4
          │││││  0x00007f7cbbd025d3: vaddps %ymm1,%ymm2,%ymm1
  1.61%   │││││  0x00007f7cbbd025d7: vpor   %ymm3,%ymm4,%ymm2
  2.06%   │││││  0x00007f7cbbd025db: vpxor  -0x86e23(%rip),%ymm2,%ymm2        # Stub::vector_all_bits_set
          │││││                                                            ;   {external_word}
  0.20%   │││││  0x00007f7cbbd025e3: vblendvps %ymm2,%ymm1,%ymm0,%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
          │││││                                                            ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  6.23%   │││││  0x00007f7cbbd025e9: vmovdqu %ymm0,0x70(%rsi,%r8,4)        ;*invokevirtual fromArray {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@18 (line 87)
          │││││                                                            ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
  2.63%   │││││  0x00007f7cbbd025f0: add    $0x20,%r8d
          │││││  0x00007f7cbbd025f4: cmp    %r10d,%r8d
          │╰│││  0x00007f7cbbd025f7: jl     0x00007f7cbbd02500
  0.10%   │ │││  0x00007f7cbbd025fd: cmp    %r9d,%r8d
  0.08%   │ ╰││  0x00007f7cbbd02600: jl     0x00007f7cbbd023dc
          │  ╰│  0x00007f7cbbd02606: jmpq   0x00007f7cbbd02421
          ↘   │  0x00007f7cbbd0260b: mov    %rcx,0x40(%rsp)
              ╰  0x00007f7cbbd02610: jmpq   0x00007f7cbbd02426             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@43 (line 749)
                                                                           ; - jdk.incubator.vector.Float256Vector::intoArray@23 (line 761)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.VerticalSum::verticalSumPanamaArrayNaNCheckPessimistic@68 (line 90)
                                                                           ; - com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub@19 (line 145)
                 0x00007f7cbbd02615: mov    $0xffffff76,%esi               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@18 (line 1140)
                                                                           ; - jdk.incubator.vector.Float256Vector$Float256Mask::not@1 (line 1069)
....................................................................................................
 96.19%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.19%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 219 (548 bytes) 
  2.75%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.53%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 216 (57 bytes) 
  0.10%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.06%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0.04%   [kernel.kallsyms]  [unknown] (29 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0.02%         interpreter  invokevirtual  182 invokevirtual  (0 bytes) 
  0.02%         interpreter  ifnonnull  199 ifnonnull  (0 bytes) 
  0.02%           libjvm.so  _ZN11ResourceObjdlEPv (0 bytes) 
  0.02%           libjvm.so  _ZN10JavaThread4exitEbNS_8ExitTypeE (0 bytes) 
  0.02%  <...other 1 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.19%                  c2  com.openkappa.panama.vectorbenchmarks.generated.VerticalSum_verticalSumPanamaArrayNaNCheckPessimistic_jmhTest::verticalSumPanamaArrayNaNCheckPessimistic_thrpt_jmhStub, version 219 
  3.16%   [kernel.kallsyms]  [unknown] 
  0.53%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 216 
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%           libjvm.so  _ZN10JavaThread4exitEbNS_8ExitTypeE 
  0.02%           libjvm.so  _ZN11ResourceObjdlEPv 
  0.02%         interpreter  ifnonnull  199 ifnonnull  
  0.02%        libc-2.23.so  _int_free 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.72%                  c2
  3.16%   [kernel.kallsyms]
  0.04%           libjvm.so
  0.04%         interpreter
  0.02%        libc-2.23.so
....................................................................................................
 99.98%  <totals>



# Run complete. Total time: 00:16:05

Benchmark                                                   (probabilityOfNaN)  (size)   Mode  Cnt     Score      Error   Units
VerticalSum.verticalSum                                                      0    1024  thrpt   15  4753.824 ±   41.597  ops/ms
VerticalSum.verticalSum:·asm                                                 0    1024  thrpt            NaN                ---
VerticalSum.verticalSum                                                  0.001    1024  thrpt   15  4700.152 ±   35.434  ops/ms
VerticalSum.verticalSum:·asm                                             0.001    1024  thrpt            NaN                ---
VerticalSum.verticalSum                                                   0.01    1024  thrpt   15  4702.436 ±   13.986  ops/ms
VerticalSum.verticalSum:·asm                                              0.01    1024  thrpt            NaN                ---
VerticalSum.verticalSumBuffer                                                0    1024  thrpt   15  1294.787 ±   11.769  ops/ms
VerticalSum.verticalSumBuffer:·asm                                           0    1024  thrpt            NaN                ---
VerticalSum.verticalSumBuffer                                            0.001    1024  thrpt   15  1300.162 ±   10.562  ops/ms
VerticalSum.verticalSumBuffer:·asm                                       0.001    1024  thrpt            NaN                ---
VerticalSum.verticalSumBuffer                                             0.01    1024  thrpt   15  1303.487 ±    8.083  ops/ms
VerticalSum.verticalSumBuffer:·asm                                        0.01    1024  thrpt            NaN                ---
VerticalSum.verticalSumBufferNaNCheckOptimistic                              0    1024  thrpt   15   353.080 ±    3.313  ops/ms
VerticalSum.verticalSumBufferNaNCheckOptimistic:·asm                         0    1024  thrpt            NaN                ---
VerticalSum.verticalSumBufferNaNCheckOptimistic                          0.001    1024  thrpt   15   350.407 ±    2.439  ops/ms
VerticalSum.verticalSumBufferNaNCheckOptimistic:·asm                     0.001    1024  thrpt            NaN                ---
VerticalSum.verticalSumBufferNaNCheckOptimistic                           0.01    1024  thrpt   15   352.911 ±    1.624  ops/ms
VerticalSum.verticalSumBufferNaNCheckOptimistic:·asm                      0.01    1024  thrpt            NaN                ---
VerticalSum.verticalSumBufferNaNCheckPessimistic                             0    1024  thrpt   15   702.520 ±    2.783  ops/ms
VerticalSum.verticalSumBufferNaNCheckPessimistic:·asm                        0    1024  thrpt            NaN                ---
VerticalSum.verticalSumBufferNaNCheckPessimistic                         0.001    1024  thrpt   15   699.631 ±    3.640  ops/ms
VerticalSum.verticalSumBufferNaNCheckPessimistic:·asm                    0.001    1024  thrpt            NaN                ---
VerticalSum.verticalSumBufferNaNCheckPessimistic                          0.01    1024  thrpt   15   697.540 ±    4.669  ops/ms
VerticalSum.verticalSumBufferNaNCheckPessimistic:·asm                     0.01    1024  thrpt            NaN                ---
VerticalSum.verticalSumNaNCheckOptimistic                                    0    1024  thrpt   15  1373.496 ±   11.921  ops/ms
VerticalSum.verticalSumNaNCheckOptimistic:·asm                               0    1024  thrpt            NaN                ---
VerticalSum.verticalSumNaNCheckOptimistic                                0.001    1024  thrpt   15  1141.697 ±   78.006  ops/ms
VerticalSum.verticalSumNaNCheckOptimistic:·asm                           0.001    1024  thrpt            NaN                ---
VerticalSum.verticalSumNaNCheckOptimistic                                 0.01    1024  thrpt   15  1098.142 ±   12.235  ops/ms
VerticalSum.verticalSumNaNCheckOptimistic:·asm                            0.01    1024  thrpt            NaN                ---
VerticalSum.verticalSumNaNCheckPessimistic                                   0    1024  thrpt   15   797.807 ±   59.691  ops/ms
VerticalSum.verticalSumNaNCheckPessimistic:·asm                              0    1024  thrpt            NaN                ---
VerticalSum.verticalSumNaNCheckPessimistic                               0.001    1024  thrpt   15   928.117 ±   11.242  ops/ms
VerticalSum.verticalSumNaNCheckPessimistic:·asm                          0.001    1024  thrpt            NaN                ---
VerticalSum.verticalSumNaNCheckPessimistic                                0.01    1024  thrpt   15   907.599 ±    6.032  ops/ms
VerticalSum.verticalSumNaNCheckPessimistic:·asm                           0.01    1024  thrpt            NaN                ---
VerticalSum.verticalSumPanamaArray                                           0    1024  thrpt   15  5745.389 ±   46.791  ops/ms
VerticalSum.verticalSumPanamaArray:·asm                                      0    1024  thrpt            NaN                ---
VerticalSum.verticalSumPanamaArray                                       0.001    1024  thrpt   15  5751.014 ±  155.520  ops/ms
VerticalSum.verticalSumPanamaArray:·asm                                  0.001    1024  thrpt            NaN                ---
VerticalSum.verticalSumPanamaArray                                        0.01    1024  thrpt   15  4538.329 ± 1865.615  ops/ms
VerticalSum.verticalSumPanamaArray:·asm                                   0.01    1024  thrpt            NaN                ---
VerticalSum.verticalSumPanamaArrayNaNCheckOptimistic                         0    1024  thrpt   15  6938.150 ±  822.692  ops/ms
VerticalSum.verticalSumPanamaArrayNaNCheckOptimistic:·asm                    0    1024  thrpt            NaN                ---
VerticalSum.verticalSumPanamaArrayNaNCheckOptimistic                     0.001    1024  thrpt   15  6425.433 ±  807.532  ops/ms
VerticalSum.verticalSumPanamaArrayNaNCheckOptimistic:·asm                0.001    1024  thrpt            NaN                ---
VerticalSum.verticalSumPanamaArrayNaNCheckOptimistic                      0.01    1024  thrpt   15  6429.931 ±  479.671  ops/ms
VerticalSum.verticalSumPanamaArrayNaNCheckOptimistic:·asm                 0.01    1024  thrpt            NaN                ---
VerticalSum.verticalSumPanamaArrayNaNCheckPessimistic                        0    1024  thrpt   15  4164.173 ±  279.558  ops/ms
VerticalSum.verticalSumPanamaArrayNaNCheckPessimistic:·asm                   0    1024  thrpt            NaN                ---
VerticalSum.verticalSumPanamaArrayNaNCheckPessimistic                    0.001    1024  thrpt   15  4117.824 ±  274.797  ops/ms
VerticalSum.verticalSumPanamaArrayNaNCheckPessimistic:·asm               0.001    1024  thrpt            NaN                ---
VerticalSum.verticalSumPanamaArrayNaNCheckPessimistic                     0.01    1024  thrpt   15  4050.050 ±  220.974  ops/ms
VerticalSum.verticalSumPanamaArrayNaNCheckPessimistic:·asm                0.01    1024  thrpt            NaN                ---

Benchmark result is saved to vs.csv
